{"ast":null,"code":"'use strict';\n\nimport NativeJSCHeapCapture from \"./NativeJSCHeapCapture\";\nvar HeapCapture = {\n  captureHeap: function captureHeap(path) {\n    var error = null;\n\n    try {\n      global.nativeCaptureHeap(path);\n      console.log('HeapCapture.captureHeap succeeded: ' + path);\n    } catch (e) {\n      console.log('HeapCapture.captureHeap error: ' + e.toString());\n      error = e.toString();\n    }\n\n    if (NativeJSCHeapCapture) {\n      NativeJSCHeapCapture.captureComplete(path, error);\n    }\n  }\n};\nmodule.exports = HeapCapture;","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/HeapCapture/HeapCapture.js"],"names":["NativeJSCHeapCapture","HeapCapture","captureHeap","path","error","global","nativeCaptureHeap","console","log","e","toString","captureComplete","module","exports"],"mappings":"AAUA;;AAEA,OAAOA,oBAAP;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAE,qBAASC,IAAT,EAAuB;AAClC,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI;AACFC,MAAAA,MAAM,CAACC,iBAAP,CAAyBH,IAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCL,IAApD;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCC,CAAC,CAACC,QAAF,EAAhD;AACAN,MAAAA,KAAK,GAAGK,CAAC,CAACC,QAAF,EAAR;AACD;;AACD,QAAIV,oBAAJ,EAA0B;AACxBA,MAAAA,oBAAoB,CAACW,eAArB,CAAqCR,IAArC,EAA2CC,KAA3C;AACD;AACF;AAbiB,CAApB;AAgBAQ,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\nimport NativeJSCHeapCapture from './NativeJSCHeapCapture';\r\n\r\nconst HeapCapture = {\r\n  captureHeap: function(path: string) {\r\n    let error = null;\r\n    try {\r\n      global.nativeCaptureHeap(path);\r\n      console.log('HeapCapture.captureHeap succeeded: ' + path);\r\n    } catch (e) {\r\n      console.log('HeapCapture.captureHeap error: ' + e.toString());\r\n      error = e.toString();\r\n    }\r\n    if (NativeJSCHeapCapture) {\r\n      NativeJSCHeapCapture.captureComplete(path, error);\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = HeapCapture;\r\n"]},"metadata":{},"sourceType":"module"}