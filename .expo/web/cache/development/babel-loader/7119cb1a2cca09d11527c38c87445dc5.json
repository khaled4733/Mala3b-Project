{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState, useEffect } from 'react';\nimport StadiumComponent from \"../Components/Stadium/Stadium\";\nimport { getFStadium } from \"../db/Stadium/Football\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Stadium() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stadium = _useState2[0],\n      setStadium = _useState2[1];\n\n  useEffect(function () {\n    getFStadium().then(function (data) {\n      setStadium(data);\n    });\n  }, []);\n  return _jsx(View, {\n    children: stadium.map(function (item, index) {\n      return _jsx(StadiumComponent, {\n        e: item,\n        navigation: navigation\n      }, index);\n    })\n  });\n}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Pages/FootBallStadium.jsx"],"names":["React","useState","useEffect","StadiumComponent","getFStadium","Stadium","stadium","setStadium","then","data","map","item","index","navigation"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,gBAAP;AACA,SAASC,WAAT;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,kBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,WAAW,GAAGI,IAAd,CAAmB,UAACC,IAAD,EAAU;AAC3BF,MAAAA,UAAU,CAACE,IAAD,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE,KAAC,IAAD;AAAA,cACGH,OAAO,CAACI,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5B,aAAQ,KAAC,gBAAD;AAAkB,QAAA,CAAC,EAAED,IAArB;AAAuC,QAAA,UAAU,EAAEE;AAAnD,SAAgCD,KAAhC,CAAR;AACD,KAFA;AADH,IADF;AAOD","sourcesContent":["import { View, Text } from 'react-native'\r\nimport React, {useState,useEffect} from 'react'\r\nimport StadiumComponent from '../Components/Stadium/Stadium'\r\nimport { getFStadium } from '../db/Stadium/Football'\r\n\r\nexport default function Stadium() {\r\n  const [stadium, setStadium] = useState([]);\r\n  useEffect(() => {\r\n    getFStadium().then((data) => {\r\n      setStadium(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <View>\r\n      {stadium.map((item, index) => {\r\n        return (<StadiumComponent e={item} key={index} navigation={navigation} />);\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}