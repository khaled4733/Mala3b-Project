{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { db } from \"../Config\";\nimport { getDocs, doc, setDoc, addDoc, deleteDoc, collection, query, where, onSnapshot } from \"firebase/firestore\";\n\nfunction getStadiums() {\n  var stadiumCol, stadiumSnapshot, stadiumList;\n  return _regeneratorRuntime.async(function getStadiums$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          stadiumCol = collection(db, \"Fields\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(stadiumCol));\n\n        case 3:\n          stadiumSnapshot = _context.sent;\n          stadiumList = stadiumSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          return _context.abrupt(\"return\", stadiumList);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { getStadiums };","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/db/Stadium/stadium.js"],"names":["db","getDocs","doc","setDoc","addDoc","deleteDoc","collection","query","where","onSnapshot","getStadiums","stadiumCol","stadiumSnapshot","stadiumList","docs","map","id","data"],"mappings":";;;;;;;AAAA,SAASA,EAAT;AACA,SACIC,OADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,SALJ,EAMIC,UANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,UATJ,QAUO,oBAVP;;AAYA,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,UADV,GACuBL,UAAU,CAACN,EAAD,EAAK,QAAL,CADjC;AAAA;AAAA,2CAEkCC,OAAO,CAACU,UAAD,CAFzC;;AAAA;AAEUC,UAAAA,eAFV;AAGUC,UAAAA,WAHV,GAGwBD,eAAe,CAACE,IAAhB,CAAqBC,GAArB,CAAyB,UAACb,GAAD,EAAS;AAClD;AAASc,cAAAA,EAAE,EAAEd,GAAG,CAACc;AAAjB,eAAwBd,GAAG,CAACe,IAAJ,EAAxB;AACH,WAFmB,CAHxB;AAAA,2CAMWJ,WANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAQH,WAAR","sourcesContent":["import { db } from \"../Config\";\r\nimport {\r\n    getDocs,\r\n    doc,\r\n    setDoc,\r\n    addDoc,\r\n    deleteDoc,\r\n    collection,\r\n    query,\r\n    where,\r\n    onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nasync function getStadiums() {\r\n    const stadiumCol = collection(db, \"Fields\");\r\n    const stadiumSnapshot = await getDocs(stadiumCol);\r\n    const stadiumList = stadiumSnapshot.docs.map((doc) => {\r\n        return { id: doc.id, ...doc.data() };\r\n    });\r\n    return stadiumList;\r\n}\r\n\r\nexport {getStadiums};"]},"metadata":{},"sourceType":"module"}