{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { React, useState } from \"react\";\nimport { getUserUId, register } from \"../../db/Auth\";\nimport { addUser } from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.emailAndPasswordView,\n      children: [_jsx(Text, {\n        style: styles.emailAndPasswordText,\n        children: \"Email:\"\n      }), _jsx(TextInput, {\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        textAlign: \"center\",\n        placeholder: \"Enter your email\",\n        style: styles.emailAndPasswordInput\n      })]\n    }), _jsxs(View, {\n      style: styles.emailAndPasswordView,\n      children: [_jsx(Text, {\n        style: styles.emailAndPasswordText,\n        children: \"Password:\"\n      }), _jsx(TextInput, {\n        onChangeText: setpassword,\n        keyboardType: \"visible-password\",\n        textAlign: \"center\",\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: styles.emailAndPasswordInput\n      })]\n    }), _jsxs(View, {\n      style: styles.RegisterButtonView,\n      children: [_jsx(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          navigation.navigate('Login');\n          console.log(email, password);\n          register(email, password).then(function (user) {\n            addUser(user);\n          }).catch(function (e) {\n            return setError(e.message);\n          });\n        }\n      }), _jsx(Text, {\n        children: error\n      })]\n    }), _jsxs(View, {\n      style: styles.SignInView,\n      children: [_jsx(Text, {\n        children: \"Already have an account?\"\n      }), _jsx(Button, {\n        title: \"sign in\",\n        onPress: function onPress() {\n          navigation.navigate('Login');\n        }\n      })]\n    })]\n  });\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  emailAndPasswordView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 5\n  },\n  emailAndPasswordText: {\n    flex: 1\n  },\n  emailAndPasswordInput: {\n    flex: 2,\n    borderColor: \"black\",\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: '#c0c0c0',\n    height: 40\n  },\n  errorText: {\n    color: '#f00'\n  },\n  RegisterButtonView: {\n    paddingTop: 3,\n    alignItems: 'center'\n  },\n  SignInView: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS-303 Project/Components/Users/Register.jsx"],"names":["React","useState","getUserUId","register","addUser","Register","navigation","email","setEmail","password","setpassword","error","setError","styles","emailAndPasswordView","emailAndPasswordText","emailAndPasswordInput","RegisterButtonView","navigate","console","log","then","user","catch","e","message","SignInView","StyleSheet","create","flexDirection","justifyContent","alignItems","padding","flex","borderColor","borderRadius","backgroundColor","height","errorText","color","paddingTop"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport {getUserUId, register} from \"../../db/Auth\";\r\nimport {addUser} from \"../../db/User\";\r\n\r\nconst Register = ({navigation}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.emailAndPasswordView}>\r\n        <Text style={styles.emailAndPasswordText}>Email:</Text>\r\n        <TextInput\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n          textAlign=\"center\"\r\n          placeholder=\"Enter your email\"\r\n          style={styles.emailAndPasswordInput}\r\n        />\r\n      </View>\r\n      <View\r\n        style={styles.emailAndPasswordView}\r\n      >\r\n        <Text style={styles.emailAndPasswordText}>Password:</Text>\r\n        <TextInput\r\n          onChangeText={setpassword}\r\n          keyboardType=\"visible-password\"\r\n          textAlign=\"center\"\r\n          placeholder=\"Enter your password\"\r\n          secureTextEntry={true}\r\n          style={styles.emailAndPasswordInput}\r\n        />\r\n      </View>\r\n      <View style={styles.RegisterButtonView}>\r\n        <Button\r\n          title=\"Register\"\r\n          onPress={() => {\r\n            navigation.navigate('Login');\r\n            console.log(email, password);\r\n            register(email, password)\r\n              .then((user)=>{\r\n                  addUser(user); /*adding user to users collection*/\r\n              })\r\n              .catch((e) => setError(e.message));\r\n          }}\r\n        />\r\n        <Text>{error}</Text>\r\n      </View>\r\n      <View style={styles.SignInView}>\r\n        <Text>Already have an account?</Text>\r\n        <Button title=\"sign in\" onPress={() => { navigation.navigate('Login') }} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst styles = StyleSheet.create({\r\n  emailAndPasswordView: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 5,\r\n  },\r\n  emailAndPasswordText: {\r\n    flex: 1\r\n  },\r\n  emailAndPasswordInput: {\r\n    flex: 2,\r\n    borderColor: \"black\",\r\n    borderRadius: 30,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: '#c0c0c0',\r\n    height: 40,\r\n  },\r\n  errorText: {\r\n    color: '#f00'\r\n  },\r\n  RegisterButtonView: {\r\n    paddingTop: 3,\r\n    alignItems: 'center',\r\n  },\r\n  SignInView: {\r\n    alignItems: 'center',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}