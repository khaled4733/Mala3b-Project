{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport Register from \"./Components/Users/Register\";\nimport Login from \"./Components/Users/Login\";\nimport { auth } from \"./db/Config\";\nimport { useState, useEffect } from \"react\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Home from \"./Pages/Home\";\nimport Football from \"./Pages/Football\";\nimport Basketball from \"./Pages/Basketball\";\nimport Tennis from \"./Pages/Tennis\";\nimport Profile from \"./Pages/Profile\";\nimport { addUser } from \"./db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotUsrStck = createNativeStackNavigator();\n\nfunction NotUser() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(NotUsrStck.Navigator, {\n      initialRouteName: \"Register\",\n      children: [_jsx(NotUsrStck.Screen, {\n        name: \"Login\",\n        component: Login\n      }), _jsx(NotUsrStck.Screen, {\n        name: \"Register\",\n        component: Register\n      })]\n    })\n  });\n}\n\nvar UserStack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction User(_ref) {\n  var user = _ref.user;\n  return _jsx(NavigationContainer, {\n    children: _jsxs(UserStack.Navigator, {\n      initialRouteName: \"BottomTab\",\n      children: [_jsx(UserStack.Screen, {\n        name: \"BottomTab\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(BottomTab, _objectSpread(_objectSpread({}, props), {}, {\n            user: user\n          }));\n        }\n      }), _jsx(UserStack.Screen, {\n        name: \"Football\",\n        component: Football,\n        options: {\n          headerStyle: {\n            backgroundColor: \"#161b22\"\n          },\n          headerTintColor: '#bdc1c6',\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            paddingLeft: 50\n          }\n        }\n      }), _jsx(UserStack.Screen, {\n        name: \"Basketball\",\n        component: Basketball,\n        options: {\n          headerStyle: {\n            backgroundColor: \"#161b22\"\n          },\n          headerTintColor: '#bdc1c6',\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            paddingLeft: 50\n          }\n        }\n      }), _jsx(UserStack.Screen, {\n        name: \"Tennis\",\n        component: Tennis,\n        options: {\n          headerStyle: {\n            backgroundColor: \"#161b22\"\n          },\n          headerTintColor: '#bdc1c6',\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            paddingLeft: 50\n          }\n        }\n      }), _jsx(UserStack.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: {\n          headerStyle: {\n            backgroundColor: \"#161b22\"\n          },\n          headerTintColor: '#bdc1c6',\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            paddingLeft: 50\n          }\n        }\n      })]\n    })\n  });\n}\n\nfunction BottomTab(_ref2) {\n  var user = _ref2.user;\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(UserStack.Screen, {\n      name: \"Home\",\n      component: Home,\n      initialParams: {\n        user: user\n      },\n      options: {\n        headerStyle: {\n          backgroundColor: \"#161b22\"\n        },\n        headerTintColor: '#bdc1c6',\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n          fontSize: 30,\n          paddingLeft: 50\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      initialParams: {\n        user: user\n      },\n      component: Profile,\n      options: {\n        headerStyle: {\n          backgroundColor: '#18191A'\n        },\n        headerTintColor: '#fff'\n      }\n    })]\n  });\n}\n\nexport default function App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  useEffect(function () {\n    var unsub = onAuthStateChanged(auth, function (user) {\n      setUser(user);\n    });\n    return function () {\n      unsub();\n    };\n  }, []);\n\n  if (user) {\n    return _jsx(User, {\n      user: user\n    });\n  } else {\n    return _jsx(NotUser, {});\n  }\n}","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS-303 Project/App.js"],"names":["onAuthStateChanged","Register","Login","auth","useState","useEffect","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Home","Football","Basketball","Tennis","Profile","addUser","NotUsrStck","NotUser","UserStack","Tab","User","user","headerShown","props","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","paddingLeft","BottomTab","App","undefined","setUser","email","setEmail","unsub"],"mappings":"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","sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\r\nimport Register from \"./Components/Users/Register\";\r\nimport Login from \"./Components/Users/Login\";\r\nimport { auth } from \"./db/Config\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport { StyleSheet } from \"react-native\";\r\nimport Home from \"./Pages/Home\"\r\nimport Football from \"./Pages/Football\";\r\nimport Basketball from \"./Pages/Basketball\";\r\nimport Tennis from \"./Pages/Tennis\";\r\nimport Profile from \"./Pages/Profile\";\r\nimport {addUser} from \"./db/User\";\r\n\r\n\r\nconst NotUsrStck = createNativeStackNavigator();\r\n\r\nfunction NotUser() {\r\n    return (\r\n        <NavigationContainer>\r\n            <NotUsrStck.Navigator initialRouteName='Register'>\r\n                <NotUsrStck.Screen name='Login' component={Login} />\r\n                <NotUsrStck.Screen name='Register' component={Register} />\r\n            </NotUsrStck.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nconst UserStack = createNativeStackNavigator();\r\nconst Tab =  createBottomTabNavigator();\r\n\r\nfunction User({user}) {\r\n    // console.log(user);\r\n    return (\r\n\r\n        <NavigationContainer>\r\n            <UserStack.Navigator initialRouteName=\"BottomTab\" >\r\n                <UserStack.Screen name={\"BottomTab\"} options={{headerShown:false}} >\r\n                    {/*give user to bottom tab*/}\r\n                    {(props)=><BottomTab{...props} user={user} />}\r\n                </UserStack.Screen>\r\n\r\n\r\n                <UserStack.Screen name=\"Football\" component={Football} options={{\r\n                    headerStyle: {backgroundColor: \"#161b22\",},\r\n                    headerTintColor: '#bdc1c6',\r\n                    headerTitleStyle: {fontWeight: \"bold\", fontSize: 30, paddingLeft: 50}\r\n                }}/>\r\n\r\n                <UserStack.Screen name=\"Basketball\" component={Basketball} options={{\r\n                    headerStyle: {backgroundColor: \"#161b22\",},\r\n                    headerTintColor: '#bdc1c6',\r\n                    headerTitleStyle: {fontWeight: \"bold\", fontSize: 30, paddingLeft: 50}\r\n                }}/>\r\n\r\n                <UserStack.Screen name=\"Tennis\" component={Tennis} options={{\r\n                    headerStyle: {backgroundColor: \"#161b22\",},\r\n                    headerTintColor: '#bdc1c6',\r\n                    headerTitleStyle: {fontWeight: \"bold\", fontSize: 30, paddingLeft: 50}\r\n                }}/>\r\n\r\n                <UserStack.Screen name=\"Profile\" component={Profile} options={{\r\n                    headerStyle: {backgroundColor: \"#161b22\",},\r\n                    headerTintColor: '#bdc1c6',\r\n                    headerTitleStyle: {fontWeight: \"bold\", fontSize: 30, paddingLeft: 50}\r\n                }}/>\r\n\r\n            </UserStack.Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction BottomTab({user}){\r\n\r\n    return(\r\n        <Tab.Navigator>\r\n            <UserStack.Screen name=\"Home\"  component={Home} initialParams={{user}} options={{\r\n                headerStyle: {backgroundColor: \"#161b22\",},\r\n                headerTintColor: '#bdc1c6',\r\n                headerTitleStyle: {fontWeight: \"bold\", fontSize: 30, paddingLeft: 50}\r\n            }}>\r\n\r\n            </UserStack.Screen>\r\n\r\n            <Tab.Screen name={\"Profile\"} initialParams={{user}} component={Profile} options={{\r\n                headerStyle: {\r\n                    backgroundColor: '#18191A',\r\n                },\r\n                headerTintColor: '#fff',\r\n            }\r\n            }>\r\n\r\n            </Tab.Screen>\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\n\r\nexport default function App() {\r\n    const [user, setUser] = useState(undefined);\r\n    const [email, setEmail] = useState(\"\");\r\n    useEffect(() => {const unsub = onAuthStateChanged(auth, (user) => { //if user is authinticated take it from the anynomous fn. then save it using 'useState'\r\n        setUser(user);\r\n\r\n    }); //if (user) is authinticated set(user) -> doesn't have to register since i am already authinticated, else get register tab\r\n        return () => {\r\n            unsub();\r\n        };\r\n        }, []);\r\n\r\n\r\n\r\n    if (user) {\r\n        return (\r\n            <User user = {user}/>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            <NotUser />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}