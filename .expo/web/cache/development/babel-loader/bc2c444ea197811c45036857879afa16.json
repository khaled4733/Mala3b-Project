{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { auth, app } from \"./Config\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, confirmPasswordReset, signInWithCredential, FacebookAuthProvider, getAuth, updateCurrentUser } from \"firebase/auth\";\nvar authentication = getAuth(app);\n\nfunction getCurrentUser() {\n  return _regeneratorRuntime.async(function getCurrentUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(onAuthStateChanged(auth, function (user) {\n            if (user != null) {\n              console.log(user.email);\n            }\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isSignedIn() {\n  return _regeneratorRuntime.async(function isSignedIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"from isSignedIn method: \", authentication.currentUser);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(authentication.currentUser);\n\n        case 3:\n          _context2.t0 = _context2.sent;\n          return _context2.abrupt(\"return\", _context2.t0 != null);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserUId() {\n  return _regeneratorRuntime.async(function getUserUId$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(authentication.currentUser != null)) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", authentication.currentUser.uid);\n\n        case 4:\n          return _context3.abrupt(\"return\", null);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserToken() {\n  return _regeneratorRuntime.async(function getUserToken$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(authentication.currentUser != null)) {\n            _context4.next = 4;\n            break;\n          }\n\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(authentication.currentUser.getIdToken());\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 4:\n          return _context4.abrupt(\"return\", null);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction register(email, password) {\n  return _regeneratorRuntime.async(function register$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction login(email, password) {\n  return _regeneratorRuntime.async(function login$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction signout() {\n  return _regeneratorRuntime.async(function signout$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          authentication.signOut().then().catch(function (e) {\n            return console.log(e.message);\n          });\n\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction forgotpassword(email) {\n  return _regeneratorRuntime.async(function forgotpassword$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(sendPasswordResetEmail(auth, email).then(function () {\n            alert(\"Password reset email sent!\");\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n          }));\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { register, login, signout, isSignedIn, getUserUId, getUserToken, forgotpassword, getCurrentUser };","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project(New)/db/Auth.js"],"names":["auth","app","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","confirmPasswordReset","signInWithCredential","FacebookAuthProvider","getAuth","updateCurrentUser","authentication","getCurrentUser","user","console","log","email","isSignedIn","currentUser","getUserUId","uid","getUserToken","getIdToken","register","password","login","signout","signOut","then","catch","e","message","forgotpassword","alert","error","errorCode","code","errorMessage"],"mappings":";AAAA,SAASA,IAAT,EAAeC,GAAf;AACA,SACEC,kBADF,EAEEC,0BAFF,EAGEC,8BAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,oBAPF,EAQEC,OARF,EASEC,iBATF,QAUO,eAVP;AAYA,IAAMC,cAAc,GAAGF,OAAO,CAACR,GAAD,CAA9B;;AAEA,SAAeW,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQV,kBAAkB,CAACF,IAAD,EAAO,UAACa,IAAD,EAAU;AACvC,gBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACD;AAGF,WANuB,CAD1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AACEH,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,cAAc,CAACO,WAAvD;AADF;AAAA,2CAEgBP,cAAc,CAACO,WAF/B;;AAAA;AAAA;AAAA,4DAE+C,IAF/C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMR,cAAc,CAACO,WAAf,IAA8B,IADpC;AAAA;AAAA;AAAA;;AAAA,4CAEWP,cAAc,CAACO,WAAf,CAA2BE,GAFtC;;AAAA;AAAA,4CAIW,IAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMV,cAAc,CAACO,WAAf,IAA8B,IADpC;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEiBP,cAAc,CAACO,WAAf,CAA2BI,UAA3B,EAFjB;;AAAA;AAAA;;AAAA;AAAA,4CAIS,IAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAeC,QAAf,CAAwBP,KAAxB,EAA+BQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQpB,8BAA8B,CAACJ,IAAD,EAAOgB,KAAP,EAAcQ,QAAd,CADtC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAeC,KAAf,CAAqBT,KAArB,EAA4BQ,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQrB,0BAA0B,CAACH,IAAD,EAAOgB,KAAP,EAAcQ,QAAd,CADlC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAeE,OAAf;AAAA;AAAA;AAAA;AAAA;AACEf,UAAAA,cAAc,CACXgB,OADH,GAEGC,IAFH,GAGGC,KAHH,CAGS,UAACC,CAAD;AAAA,mBAAOhB,OAAO,CAACC,GAAR,CAAYe,CAAC,CAACC,OAAd,CAAP;AAAA,WAHT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAeC,cAAf,CAA8BhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQX,sBAAsB,CAACL,IAAD,EAAOgB,KAAP,CAAtB,CACHY,IADG,CACE,YAAM;AACVK,YAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,WAHG,EAIHJ,KAJG,CAIG,UAACK,KAAD,EAAW;AAChB,gBAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,gBAAMC,YAAY,GAAGH,KAAK,CAACH,OAA3B;AAED,WARG,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SACER,QADF,EAEEE,KAFF,EAGEC,OAHF,EAIET,UAJF,EAKEE,UALF,EAMEE,YANF,EAOEW,cAPF,EAQEpB,cARF","sourcesContent":["import { auth, app } from \"./Config\";\r\nimport {\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  confirmPasswordReset,\r\n  signInWithCredential,\r\n  FacebookAuthProvider,\r\n  getAuth,\r\n  updateCurrentUser,\r\n} from \"firebase/auth\";\r\n\r\nconst authentication = getAuth(app);\r\n\r\nasync function getCurrentUser() {\r\n  await onAuthStateChanged(auth, (user) => {\r\n    if (user != null) {\r\n      console.log(user.email);\r\n    }\r\n\r\n    // Do other things\r\n  });\r\n}\r\n\r\nasync function isSignedIn() {\r\n  console.log(\"from isSignedIn method: \", authentication.currentUser);\r\n  return (await authentication.currentUser) != null;\r\n}\r\n\r\nasync function getUserUId() {\r\n  if (authentication.currentUser != null) {\r\n    return authentication.currentUser.uid;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getUserToken() {\r\n  if (authentication.currentUser != null) {\r\n    return await authentication.currentUser.getIdToken();\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function register(email, password) {\r\n  await createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nasync function login(email, password) {\r\n  await signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nasync function signout() {\r\n  authentication\r\n    .signOut()\r\n    .then()\r\n    .catch((e) => console.log(e.message));\r\n}\r\n\r\nasync function forgotpassword(email) {\r\n  await sendPasswordResetEmail(auth, email)\r\n    .then(() => {\r\n      alert(\"Password reset email sent!\");\r\n    })\r\n    .catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // ..\r\n    });\r\n}\r\n\r\nexport {\r\n  register,\r\n  login,\r\n  signout,\r\n  isSignedIn,\r\n  getUserUId,\r\n  getUserToken,\r\n  forgotpassword,\r\n  getCurrentUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}