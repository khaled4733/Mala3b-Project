{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { signout } from \"../db/Auth\";\nimport React, { useState, useEffect } from \"react\";\nimport { getUsers } from \"../db/User\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var e;\n  useEffect(function () {\n    getUsers().then(function (data) {\n      setUsers(data);\n    });\n  }, []);\n  users.map(function (item, index) {\n    if (item.email == user.email) {\n      e = item;\n      console.log(e.email);\n    }\n  });\n\n  var handleSignOut = function handleSignOut() {\n    signout().then(alert(\"signout successful\")).catch(function (error) {\n      return alert(error.message);\n    });\n    console.log(\"signout successful\");\n  };\n\n  var handleadminarea = function handleadminarea() {\n    if (e.role == 1) {\n      navigation.navigate('AdminArea');\n    } else {\n      alert(\"you dont have permmision to enter the area\");\n    }\n  };\n\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.box1\n      })\n    }), _jsx(View, {\n      style: styles.ProfInfo,\n      children: _jsx(Icon, {\n        name: \"home\",\n        color: '#220e24',\n        size: 30\n      })\n    })]\n  });\n}\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  box1: {\n    backgroundColor: '#F0F0F0',\n    borderRadius: 20,\n    marginVertical: 20,\n    width: cardwidth - 65,\n    height: 200,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  ProfInfo: {\n    alignItems: 'flex-start'\n  },\n  buttonstyle: {\n    backgroundColor: '#022b3a',\n    width: '100%',\n    height: 60,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 30\n  },\n  buttontext: {\n    color: 'rgb(255, 255, 255)',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});\n{}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Pages/Profile.js"],"names":["signout","React","useState","useEffect","getUsers","Icon","Profile","navigation","route","user","params","users","setUsers","e","then","data","map","item","index","email","console","log","handleSignOut","alert","catch","error","message","handleadminarea","role","navigate","styles","container","box1","ProfInfo","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","alignItems","backgroundColor","borderRadius","marginVertical","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonstyle","justifyContent","buttontext","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { ScrollView, TouchableOpacity, StyleSheet, Text, View, Dimensions } from 'react-native'\r\nimport { signout } from '../db/Auth'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getUsers } from '../db/User'\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n\r\n\r\nexport default function Profile({ navigation, route }) {\r\n\r\n    const { user } = route.params\r\n\r\n    const [users, setUsers] = useState([]);\r\n    let e;\r\n\r\n    useEffect(() => {\r\n        getUsers().then((data) => {\r\n            setUsers(data);\r\n        });\r\n    }, []);\r\n\r\n\r\n    users.map((item, index) => {\r\n        if (item.email == user.email) {\r\n            e = item;\r\n            console.log(e.email)\r\n        }\r\n    })\r\n\r\n    const handleSignOut = () => {\r\n        signout()\r\n            .then(alert(\"signout successful\"))\r\n            .catch(error => alert(error.message))\r\n        console.log(\"signout successful\");\r\n    }\r\n\r\n    const handleadminarea = () => {\r\n        if (e.role == 1) {\r\n            navigation.navigate('AdminArea')\r\n        } else {\r\n            alert(\"you dont have permmision to enter the area\")\r\n        }\r\n    }\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <View style={styles.box1}>\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.ProfInfo}>\r\n                <Icon name=\"home\" color={'#220e24'} size={30} />\r\n            </View>\r\n        </ScrollView>\r\n\r\n    )\r\n}\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    box1: {\r\n        backgroundColor: '#F0F0F0',\r\n        borderRadius: 20,\r\n        marginVertical: 20,\r\n        width: cardwidth - 65,\r\n        height: 200,\r\n        shadowColor: '#000000',\r\n        shadowOffset: {\r\n            width: 5,\r\n            height: 5\r\n        },\r\n        shadowOpacity: .25,\r\n        shadowRadius: 3\r\n    },\r\n    ProfInfo: {\r\n        alignItems: 'flex-start'\r\n    },\r\n    buttonstyle: {\r\n        backgroundColor: '#022b3a',\r\n        width: '100%',\r\n        height: 60,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginVertical: 30\r\n    },\r\n    buttontext: {\r\n        color: 'rgb(255, 255, 255)',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n\r\n    },\r\n})\r\n\r\n\r\n{/* <TouchableOpacity style={styles.buttonstyle} onPress={handleSignOut}>\r\n                <Text style={styles.buttontext}>LogOut</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.buttonstyle} onPress={handleadminarea}>\r\n                <Text style={styles.buttontext}>admin</Text>\r\n            </TouchableOpacity> */}"]},"metadata":{},"sourceType":"module"}