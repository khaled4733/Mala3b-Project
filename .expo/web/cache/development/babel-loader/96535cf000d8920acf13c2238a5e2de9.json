{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport { getUserUId } from \"../db/Auth\";\nimport { updateBasketball, updateFootball, updateTennis } from \"../db/User\";\nimport { getBStadium } from \"../db/Stadium/Basketball\";\nimport { getTStadium } from \"../db/Stadium/Tennis\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TennisValidationPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var stadName = route.params.name;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stDate = _useState2[0],\n      setStDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edDate = _useState4[0],\n      setEdDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      day = _useState6[0],\n      setDay = _useState6[1];\n\n  function handel() {\n    console.log('Inside handle()', stadName);\n    getTStadium().then(function (data) {\n      if (stDate !== '' && edDate !== '' && day !== '' && stDate !== edDate) {\n        console.log('number of Tstad = ', data.length);\n\n        var _loop = function _loop(i) {\n          if (data[i].name === stadName) {\n            console.log('found the stad', stadName);\n            var flag = true;\n\n            if (data[i].state === null) {\n              data[i].state = [];\n            }\n\n            for (var j = 0; j < data[i].state.length; j++) {\n              if (data[i].state[j].day === day) {\n                if (stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate || data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate) {\n                  alert(\"Tennis Stadium already occupied\");\n                  console.log(\"tennis is already occupied\");\n                  flag = false;\n                  navigation.navigate('Tennis');\n                  return {\n                    v: void 0\n                  };\n                }\n              }\n            }\n\n            if (flag) {\n              getUserUId().then(function (id) {\n                data[i].state.push({\n                  day: day,\n                  stDate: stDate,\n                  edDate: edDate,\n                  id: id\n                });\n                updateTennis(data[i]);\n              });\n              navigation.navigate('Payment', {\n                stadName: stadName\n              });\n            }\n\n            return \"break\";\n          }\n        };\n\n        for (var i = 0; i < data.length; i++) {\n          var _ret = _loop(i);\n\n          if (_ret === \"break\") break;\n          if (typeof _ret === \"object\") return _ret.v;\n        }\n      } else {\n        alert(\"data is required\");\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \" Enter Your Booking Club \"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter day\",\n        onChangeText: setDay\n      }), _jsx(TextInput, {\n        placeholder: \"Enter start date\",\n        onChangeText: setStDate\n      }), _jsx(TextInput, {\n        placeholder: \"Enter end date\",\n        onChangeText: setEdDate\n      }), _jsx(Button, {\n        title: \"submit\",\n        onPress: handel\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    alignContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project(New)/Pages/TennisValidationPage.jsx"],"names":["React","useEffect","useState","getUserUId","updateBasketball","updateFootball","updateTennis","getBStadium","getTStadium","TennisValidationPage","navigation","route","stadName","params","name","stDate","setStDate","edDate","setEdDate","day","setDay","handel","console","log","then","data","length","i","flag","state","j","alert","navigate","id","push","styles","container","header","StyleSheet","create","alignItems","alignContent"],"mappings":";;;;;;;;;AAQA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAKA,SAAQC,UAAR;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,EAA0CC,YAA1C;AACA,SAAQC,WAAR;AACA,SAAQC,WAAR;;;AAGA,eAAe,SAASC,oBAAT,OAAoD;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAE/D,MAAWC,QAAX,GAAuBD,KAAK,CAACE,MAA7B,CAAKC,IAAL;;AAEA,kBAA2BZ,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAA2Bd,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAAsBhB,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOiB,GAAP;AAAA,MAAWC,MAAX;;AAEA,WAASC,MAAT,GAAiB;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BX,QAA/B;AAEAJ,IAAAA,WAAW,GAAGgB,IAAd,CAAmB,UAACC,IAAD,EAAU;AACzB,UAAIV,MAAM,KAAK,EAAX,IAAiBE,MAAM,KAAK,EAA5B,IAAkCE,GAAG,KAAK,EAA1C,IAAgDJ,MAAM,KAAKE,MAA/D,EAAuE;AACnEK,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,IAAI,CAACC,MAAvC;;AADmE,mCAE1DC,CAF0D;AAG/D,cAAIF,IAAI,CAACE,CAAD,CAAJ,CAAQb,IAAR,KAAiBF,QAArB,EAA+B;AAC3BU,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,QAA9B;AACA,gBAAIgB,IAAI,GAAG,IAAX;;AACA,gBAAIH,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,KAAkB,IAAtB,EAA4B;AACxBJ,cAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,GAAgB,EAAhB;AACH;;AACD,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcH,MAAlC,EAA0CI,CAAC,EAA3C,EAA+C;AAC3C,kBAAIL,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcC,CAAd,EAAiBX,GAAjB,KAAyBA,GAA7B,EAAkC;AAC9B,oBAAKJ,MAAM,GAAGU,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcC,CAAd,EAAiBb,MAA1B,IAAoCF,MAAM,IAAIU,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcC,CAAd,EAAiBf,MAAhE,IACCU,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcC,CAAd,EAAiBf,MAAjB,IAA2BA,MAA3B,IAAqCU,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcC,CAAd,EAAiBf,MAAjB,GAA0BE,MADpE,EAC6E;AACzEc,kBAAAA,KAAK,CAAC,iCAAD,CAAL;AACAT,kBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAK,kBAAAA,IAAI,GAAG,KAAP;AACAlB,kBAAAA,UAAU,CAACsB,QAAX,CAAoB,QAApB;AACA;AAAA;AAAA;AACH;AACJ;AACJ;;AACD,gBAAIJ,IAAJ,EAAU;AACNzB,cAAAA,UAAU,GAAGqB,IAAb,CAAkB,UAACS,EAAD,EAAQ;AACtBR,gBAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAcK,IAAd,CAAmB;AAACf,kBAAAA,GAAG,EAAHA,GAAD;AAAMJ,kBAAAA,MAAM,EAANA,MAAN;AAAcE,kBAAAA,MAAM,EAANA,MAAd;AAAsBgB,kBAAAA,EAAE,EAAFA;AAAtB,iBAAnB;AACA3B,gBAAAA,YAAY,CAACmB,IAAI,CAACE,CAAD,CAAL,CAAZ;AACH,eAHD;AAIAjB,cAAAA,UAAU,CAACsB,QAAX,CAAoB,SAApB,EAA+B;AAACpB,gBAAAA,QAAQ,EAARA;AAAD,eAA/B;AACH;;AACD;AACH;AA7B8D;;AAEnE,aAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAAA,2BAA7BA,CAA6B;;AAAA,gCA0B9B;AA1B8B;AA4BrC;AACJ,OA/BD,MAgCK;AACDI,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACH;AACJ,KApCD;AAuCP;;AAGD,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA,MADJ,EAEI,MAAC,UAAD;AAAA,iBACI,KAAC,SAAD;AAAW,QAAA,WAAW,EAAC,WAAvB;AAAmC,QAAA,YAAY,EAAEjB;AAAjD,QADJ,EAEI,KAAC,SAAD;AAAW,QAAA,WAAW,EAAC,kBAAvB;AAA0C,QAAA,YAAY,EAAEJ;AAAxD,QAFJ,EAGI,KAAC,SAAD;AAAW,QAAA,WAAW,EAAC,gBAAvB;AAAwC,QAAA,YAAY,EAAEE;AAAtD,QAHJ,EAII,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,QAAf;AAAyB,QAAA,OAAO,EAAEG;AAAlC,QAJJ;AAAA,MAFJ;AAAA,IADJ;AAcH;AACG,IAAMc,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AACjCH,EAAAA,SAAS,EAAC;AACNI,IAAAA,UAAU,EAAC,QADL;AAENC,IAAAA,YAAY,EAAC;AAFP;AADuB,CAAlB,CAAf","sourcesContent":["import {\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    ScrollView, Image,Button\r\n} from \"react-native\";\r\nimport React, {useEffect, useState} from \"react\";\r\n// import {addFStadium, deleteFStadium, getFStadium} from \"../db/Stadium/Football\";\r\n// import footballBackground from \"../assets/footballBackground.png\";\r\n// import tennisBackground from \"../assets/tennisBackground.png\";\r\n// import basketballBackground from \"../assets/basketballBackground.png\";\r\nimport {getUserUId} from \"../db/Auth\";\r\nimport {updateBasketball, updateFootball, updateTennis} from \"../db/User\";\r\nimport {getBStadium} from \"../db/Stadium/Basketball\";\r\nimport {getTStadium} from \"../db/Stadium/Tennis\";\r\n\r\n\r\nexport default function TennisValidationPage ({navigation, route}) {\r\n\r\n    let {name: stadName} = route.params; //name -> att. in doc.\r\n\r\n    const [stDate,setStDate] = useState(\"\") //start date\r\n    const [edDate,setEdDate] = useState(\"\")//end date\r\n    const [day,setDay] =  useState(\"\")\r\n\r\n    function handel(){\r\n            console.log('Inside handle()', stadName);\r\n        /*Handle tennis*/\r\n            getTStadium().then((data) => {\r\n                if (stDate !== '' && edDate !== '' && day !== '' && stDate !== edDate) {\r\n                    console.log('number of Tstad = ', data.length);\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i].name === stadName) {  /* This identifies the stadium type !!!!!!!! */\r\n                            console.log('found the stad', stadName);\r\n                            let flag = true; // true ->stad is available\r\n                            if (data[i].state === null) { //if there is no array, set a new one\r\n                                data[i].state = []; //new array\r\n                            }\r\n                            for (let j = 0; j < data[i].state.length; j++) {\r\n                                if (data[i].state[j].day === day) { //same day isn't enough\r\n                                    if ((stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate) || //check in same hours interval\r\n                                        (data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate)) {\r\n                                        alert(\"Tennis Stadium already occupied\");\r\n                                        console.log(\"tennis is already occupied\")\r\n                                        flag = false; //stad is unavailable after occupation\r\n                                        navigation.navigate('Tennis'); // Ask doc : when navigating it goes 1st to Football.jsx then BasketBall.jsx then Tennis.jsx when it should have directly moved to Tennis\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (flag) { //if flag is available i.e. \"true\", add userId with the \"date\" that he\r\n                                getUserUId().then((id) => { // gets id of current user in \"id\"\r\n                                    data[i].state.push({day, stDate, edDate, id}); //note that we made \"id\" same as \"document ID\" manually\r\n                                    updateTennis(data[i]); //!NOTE! we want to updateTennis when we press \"pay\"-> in \"Payment.jsx\" no here\r\n                                });\r\n                                navigation.navigate('Payment', {stadName});\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"data is required\")\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.header}> Enter Your Booking Club </Text>\r\n            <ScrollView>\r\n                <TextInput placeholder=\"Enter day\" onChangeText={setDay}/>\r\n                <TextInput placeholder=\"Enter start date\" onChangeText={setStDate}/>\r\n                <TextInput placeholder=\"Enter end date\" onChangeText={setEdDate}/>\r\n                <Button title={\"submit\"} onPress={handel}/>\r\n\r\n            </ScrollView>\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n    const styles = StyleSheet.create({\r\n    container:{\r\n        alignItems:\"center\",\r\n        alignContent:\"center\"\r\n    }\r\n    })"]},"metadata":{},"sourceType":"module"}