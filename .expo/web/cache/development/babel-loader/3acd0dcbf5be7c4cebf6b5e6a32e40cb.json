{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { register, getUserUId, login } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { addUser } from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullname = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gender = _useState8[0],\n      setGender = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setpassword = _useState10[1];\n\n  var role = 0;\n  var balance = 0;\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var handleRegister = function handleRegister() {\n    console.log(fullname, email, password);\n    register(email, password).then(function () {\n      login(email, password).then(function () {\n        console.log('login completed');\n        getUserUId().then(function (id) {\n          return addUser({\n            id: id,\n            fullname: fullname,\n            email: email,\n            password: password,\n            phone: phone,\n            gender: gender,\n            balance: balance,\n            role: role\n          });\n        });\n      });\n    }).catch(function (e) {\n      return setError(e.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: [_jsx(View, {\n      style: styles.screen,\n      children: _jsx(Image, {\n        source: Logo,\n        style: styles.image\n      })\n    }), _jsx(Text, {\n      style: styles.text,\n      children: \"Let\\u2019s get started!\"\n    }), _jsxs(View, {\n      style: styles.format,\n      children: [_jsx(TextInput, {\n        style: styles.textinput,\n        onChangeText: setFullName,\n        keyboardType: \"default\",\n        placeholder: \"Full Name\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"example@email.com\",\n        onChangeText: setEmail,\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"01*********\",\n        onChangeText: setPhone,\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Male/Female\",\n        onChangeText: setGender,\n        keyboardType: \"default\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        onChangeText: setpassword,\n        secureTextEntry: true,\n        placeholder: \"password\"\n      })]\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        style: styles.buttonstyle,\n        onPress: handleRegister,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Register\"\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('SignIn');\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 15\n        },\n        children: \"Already have an account?\"\n      })\n    })]\n  });\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#056284\",\n    paddingHorizontal: 60,\n    alignSelf: \"stretch\"\n  },\n  screen: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 40,\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 25,\n    paddingBottom: 20\n  },\n  textinput: {\n    height: 40,\n    color: '#0075aa',\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: '#022b3a',\n    width: '100%',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttontext: {\n    color: 'rgb(255, 255, 255)',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: 'rgb(255, 255, 255)'\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Components/Users/Register.jsx"],"names":["React","useState","register","getUserUId","login","Logo","addUser","Register","navigation","fullname","setFullName","email","setEmail","phone","setPhone","gender","setGender","password","setpassword","role","balance","error","setError","handleRegister","console","log","then","id","catch","e","message","styles","mainview","screen","image","text","format","textinput","buttonstyle","buttontext","errorText","navigate","fontSize","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignSelf","justifyContent","alignItems","paddingTop","paddingBottom","textAlign","fontWeight","height","color","borderBottomColor","borderBottomWidth","width","borderRadius","padding"],"mappings":"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","sourcesContent":["import { TouchableOpacity, KeyboardAvoidingView, StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { register, getUserUId, login } from \"../../db/Auth\";\r\nimport Logo from '../../assets/2511582.jpg'\r\nimport { addUser } from \"../../db/User\";\r\n\r\n\r\nconst Register = ({ navigation }) => {\r\n  const [fullname, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const role = 0\r\n  const balance = 0\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleRegister = () => {\r\n    console.log(fullname, email, password);\r\n    register(email, password)\r\n      .then(() => {\r\n        login(email, password).then(\r\n          () => {\r\n            console.log('login completed');\r\n            getUserUId().then((id) => addUser({ id: id, fullname, email, password, phone, gender, balance, role }));\r\n          }\r\n        )\r\n      })\r\n      .catch((e) => setError(e.message));\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.mainview} >\r\n      <View style={styles.screen}>\r\n        <Image source={Logo} style={styles.image} />\r\n      </View>\r\n\r\n      <Text style={styles.text}>Let’s get started!</Text>\r\n\r\n      <View style={styles.format}>\r\n        <TextInput\r\n          style={styles.textinput}\r\n          onChangeText={setFullName}\r\n          keyboardType=\"default\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"example@email.com\"\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"01*********\"\r\n          onChangeText={setPhone}\r\n          keyboardType=\"numeric\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"Male/Female\"\r\n          onChangeText={setGender}\r\n          keyboardType=\"default\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          onChangeText={setpassword}\r\n          secureTextEntry={true}\r\n          placeholder=\"password\"\r\n        />\r\n\r\n      </View>\r\n      <View >\r\n        <TouchableOpacity style={styles.buttonstyle} onPress={handleRegister}>\r\n          <Text style={styles.buttontext}>Register</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Text style={styles.errorText}>{error}</Text>\r\n\r\n\r\n      <TouchableOpacity onPress={() => { navigation.navigate('SignIn') }}>\r\n        <Text style={{fontSize: 15}}>Already have an account?</Text>\r\n      </TouchableOpacity>\r\n\r\n    </KeyboardAvoidingView>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst styles = StyleSheet.create({\r\n  mainview: {\r\n    flex: 1,\r\n    backgroundColor: \"#056284\",\r\n    paddingHorizontal: 60,\r\n    alignSelf: \"stretch\",\r\n\r\n  },\r\n  screen: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingTop: 40,\r\n    paddingBottom: 20\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    paddingBottom: 20\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    color: '#0075aa',\r\n    borderBottomColor: \"#cae9ff\",\r\n    borderBottomWidth: 4,\r\n\r\n  },\r\n  format: {\r\n    paddingBottom: 20\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: '#022b3a',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  buttontext: {\r\n    color: 'rgb(255, 255, 255)',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: 'rgb(255, 255, 255)'\r\n  },\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}