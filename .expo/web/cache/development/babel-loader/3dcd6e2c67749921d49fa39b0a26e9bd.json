{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { forgotpassword } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var handleforgotpassword = function handleforgotpassword() {\n    forgotpassword(email).then(navigation.navigate('SignIn')).catch(function (e) {\n      return setError(e.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: [_jsx(View, {\n      style: styles.screen,\n      children: _jsx(Image, {\n        source: Logo,\n        style: styles.image\n      })\n    }), _jsx(View, {\n      style: styles.format,\n      children: _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"example@email.com\",\n        placeholderTextColor: '#FFF',\n        onChangeText: setEmail,\n        keyboardType: \"email-address\"\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        style: styles.buttonstyle,\n        onPress: handleforgotpassword,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Reset Password\"\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    })]\n  });\n};\n\nexport default Login;\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#056284\",\n    paddingHorizontal: 60,\n    alignSelf: \"stretch\",\n    justifyContent: 'center'\n  },\n  View: {\n    backgroundColor: '#80ffdb',\n    borderRadius: 20,\n    width: cardwidth - 100,\n    height: 500,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  screen: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 25,\n    paddingBottom: 20\n  },\n  textinput: {\n    height: 40,\n    color: '#0075aa',\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: '#022b3a',\n    width: '100%',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttontext: {\n    color: '#FFF',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: 'rgb(255, 255, 255)'\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Components/Users/ForgotPassword.jsx"],"names":["React","useState","forgotpassword","Logo","Login","navigation","email","setEmail","error","setError","handleforgotpassword","then","navigate","catch","e","message","styles","mainview","screen","image","format","textinput","buttonstyle","buttontext","errorText","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignSelf","justifyContent","View","borderRadius","height","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingBottom","text","textAlign","fontWeight","fontSize","color","borderBottomColor","borderBottomWidth","padding"],"mappings":"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","sourcesContent":["import { Dimensions,TouchableOpacity, KeyboardAvoidingView, StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { forgotpassword } from \"../../db/Auth\";\r\nimport Logo from '../../assets/2511582.jpg'\r\n\r\nconst Login = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error,  setError] = useState(\"\");\r\n\r\n    const handleforgotpassword = () => {\r\n        forgotpassword(email)\r\n            .then(navigation.navigate('SignIn'))\r\n            .catch((e) => setError(e.message));\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={styles.mainview} >\r\n            <View style={styles.screen}>\r\n                <Image source={Logo} style={styles.image} />\r\n            </View>\r\n\r\n\r\n            <View style={styles.format}>\r\n                <TextInput\r\n                    style={styles.textinput}\r\n                    placeholder=\"example@email.com\"\r\n                    placeholderTextColor={'#FFF'}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n            </View>\r\n\r\n\r\n            <View>\r\n                <TouchableOpacity style={styles.buttonstyle} onPress={handleforgotpassword}>\r\n                    <Text style={styles.buttontext}>Reset Password</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={styles.errorText}>{error}</Text>\r\n        </KeyboardAvoidingView>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n    mainview: {\r\n        flex: 1,\r\n        backgroundColor: \"#056284\",\r\n        paddingHorizontal: 60,\r\n        alignSelf: \"stretch\",\r\n        justifyContent: 'center'\r\n    },\r\n    View: {\r\n        backgroundColor: '#80ffdb',\r\n        borderRadius: 20,\r\n        width: cardwidth - 100,\r\n        height: 500,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        shadowColor: '#000000',\r\n        shadowOffset: {\r\n          width: 5,\r\n          height: 5\r\n        },\r\n        shadowOpacity: .25,\r\n        shadowRadius: 3\r\n      },\r\n    screen: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingBottom: 20\r\n    },\r\n    text: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        paddingBottom: 20\r\n    },\r\n    textinput: {\r\n        height: 40,\r\n        color: '#0075aa',\r\n        borderBottomColor: \"#cae9ff\",\r\n        borderBottomWidth: 4,\r\n\r\n    },\r\n    format: {\r\n        paddingBottom: 20\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 50\r\n    },\r\n    buttonstyle: {\r\n        backgroundColor: '#022b3a',\r\n        width: '100%',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n        alignItems: 'center'\r\n    },\r\n    buttontext: {\r\n        color: '#FFF',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    errorText: {\r\n        color: 'rgb(255, 255, 255)'\r\n    },\r\n\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}