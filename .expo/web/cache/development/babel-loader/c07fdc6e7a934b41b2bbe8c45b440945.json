{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  var reactDevTools = require('react-devtools-core');\n\n  var connectToDevTools = function connectToDevTools() {\n    if (!window.document) {\n      var AppState = require(\"../AppState/AppState\");\n\n      var getDevServer = require(\"./Devtools/getDevServer\");\n\n      var isAppActive = function isAppActive() {\n        return AppState.currentState !== 'background';\n      };\n\n      var devServer = getDevServer();\n      var host = devServer.bundleLoadedFromServer ? devServer.url.replace(/https?:\\/\\//, '').split(':')[0] : 'localhost';\n      var port = window.__REACT_DEVTOOLS_PORT__ != null ? window.__REACT_DEVTOOLS_PORT__ : 8097;\n\n      var WebSocket = require(\"../WebSocket/WebSocket\");\n\n      var ws = new WebSocket('ws://' + host + ':' + port);\n\n      var viewConfig = require(\"../Components/View/ReactNativeViewViewConfig\");\n\n      reactDevTools.connectToDevTools({\n        isAppActive: isAppActive,\n        resolveRNStyle: require(\"../StyleSheet/flattenStyle\"),\n        nativeStyleEditorValidAttributes: Object.keys(viewConfig.validAttributes.style),\n        websocket: ws\n      });\n    }\n  };\n\n  var RCTNativeAppEventEmitter = require(\"../EventEmitter/RCTNativeAppEventEmitter\");\n\n  RCTNativeAppEventEmitter.addListener('RCTDevMenuShown', connectToDevTools);\n  connectToDevTools();\n}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Core/setUpReactDevTools.js"],"names":["__DEV__","reactDevTools","require","connectToDevTools","window","document","AppState","getDevServer","isAppActive","currentState","devServer","host","bundleLoadedFromServer","url","replace","split","port","__REACT_DEVTOOLS_PORT__","WebSocket","ws","viewConfig","resolveRNStyle","nativeStyleEditorValidAttributes","Object","keys","validAttributes","style","websocket","RCTNativeAppEventEmitter","addListener"],"mappings":"AAUA;;AAEA,IAAIA,OAAJ,EAAa;AACX,MAAMC,aAAa,GAAGC,OAAO,CAAC,qBAAD,CAA7B;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAG9B,QAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB;AACpB,UAAMC,QAAQ,GAAGJ,OAAO,wBAAxB;;AACA,UAAMK,YAAY,GAAGL,OAAO,2BAA5B;;AAMA,UAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA,eAAMF,QAAQ,CAACG,YAAT,KAA0B,YAAhC;AAAA,OAApB;;AAGA,UAAMC,SAAS,GAAGH,YAAY,EAA9B;AACA,UAAMI,IAAI,GAAGD,SAAS,CAACE,sBAAV,GACTF,SAAS,CAACG,GAAV,CAAcC,OAAd,CAAsB,aAAtB,EAAqC,EAArC,EAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CADS,GAET,WAFJ;AAMA,UAAMC,IAAI,GACRZ,MAAM,CAACa,uBAAP,IAAkC,IAAlC,GACIb,MAAM,CAACa,uBADX,GAEI,IAHN;;AAKA,UAAMC,SAAS,GAAGhB,OAAO,0BAAzB;;AACA,UAAMiB,EAAE,GAAG,IAAID,SAAJ,CAAc,UAAUP,IAAV,GAAiB,GAAjB,GAAuBK,IAArC,CAAX;;AAEA,UAAMI,UAAU,GAAGlB,OAAO,gDAA1B;;AACAD,MAAAA,aAAa,CAACE,iBAAd,CAAgC;AAC9BK,QAAAA,WAAW,EAAXA,WAD8B;AAE9Ba,QAAAA,cAAc,EAAEnB,OAAO,8BAFO;AAG9BoB,QAAAA,gCAAgC,EAAEC,MAAM,CAACC,IAAP,CAChCJ,UAAU,CAACK,eAAX,CAA2BC,KADK,CAHJ;AAM9BC,QAAAA,SAAS,EAAER;AANmB,OAAhC;AAQD;AACF,GAvCD;;AAyCA,MAAMS,wBAAwB,GAAG1B,OAAO,4CAAxC;;AACA0B,EAAAA,wBAAwB,CAACC,WAAzB,CAAqC,iBAArC,EAAwD1B,iBAAxD;AACAA,EAAAA,iBAAiB;AAClB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nif (__DEV__) {\r\n  const reactDevTools = require('react-devtools-core');\r\n  const connectToDevTools = () => {\r\n    // not when debugging in chrome\r\n    // TODO(t12832058) This check is broken\r\n    if (!window.document) {\r\n      const AppState = require('../AppState/AppState');\r\n      const getDevServer = require('./Devtools/getDevServer');\r\n\r\n      // Don't steal the DevTools from currently active app.\r\n      // Note: if you add any AppState subscriptions to this file,\r\n      // you will also need to guard against `AppState.isAvailable`,\r\n      // or the code will throw for bundles that don't have it.\r\n      const isAppActive = () => AppState.currentState !== 'background';\r\n\r\n      // Get hostname from development server (packager)\r\n      const devServer = getDevServer();\r\n      const host = devServer.bundleLoadedFromServer\r\n        ? devServer.url.replace(/https?:\\/\\//, '').split(':')[0]\r\n        : 'localhost';\r\n\r\n      // Read the optional global variable for backward compatibility.\r\n      // It was added in https://github.com/facebook/react-native/commit/bf2b435322e89d0aeee8792b1c6e04656c2719a0.\r\n      const port =\r\n        window.__REACT_DEVTOOLS_PORT__ != null\r\n          ? window.__REACT_DEVTOOLS_PORT__\r\n          : 8097;\r\n\r\n      const WebSocket = require('../WebSocket/WebSocket');\r\n      const ws = new WebSocket('ws://' + host + ':' + port);\r\n\r\n      const viewConfig = require('../Components/View/ReactNativeViewViewConfig');\r\n      reactDevTools.connectToDevTools({\r\n        isAppActive,\r\n        resolveRNStyle: require('../StyleSheet/flattenStyle'),\r\n        nativeStyleEditorValidAttributes: Object.keys(\r\n          viewConfig.validAttributes.style,\r\n        ),\r\n        websocket: ws,\r\n      });\r\n    }\r\n  };\r\n\r\n  const RCTNativeAppEventEmitter = require('../EventEmitter/RCTNativeAppEventEmitter');\r\n  RCTNativeAppEventEmitter.addListener('RCTDevMenuShown', connectToDevTools);\r\n  connectToDevTools(); // Try connecting once on load\r\n}\r\n"]},"metadata":{},"sourceType":"script"}