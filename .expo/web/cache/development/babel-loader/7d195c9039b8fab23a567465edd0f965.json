{"ast":null,"code":"'use strict';\n\nimport Platform from \"../Utilities/Platform\";\n\nvar ReactNativeVersion = require(\"./ReactNativeVersion\");\n\nexports.checkVersions = function checkVersions() {\n  var nativeVersion = Platform.constants.reactNativeVersion;\n\n  if (ReactNativeVersion.version.major !== nativeVersion.major || ReactNativeVersion.version.minor !== nativeVersion.minor) {\n    console.error(\"React Native version mismatch.\\n\\nJavaScript version: \" + _formatVersion(ReactNativeVersion.version) + \"\\n\" + (\"Native version: \" + _formatVersion(nativeVersion) + \"\\n\\n\") + 'Make sure that you have rebuilt the native code. If the problem ' + 'persists try clearing the Watchman and packager caches with ' + '`watchman watch-del-all && react-native start --reset-cache`.');\n  }\n};\n\nfunction _formatVersion(version) {\n  return version.major + \".\" + version.minor + \".\" + version.patch + (version.prerelease != undefined ? \"-\" + version.prerelease : '');\n}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js"],"names":["Platform","ReactNativeVersion","require","exports","checkVersions","nativeVersion","constants","reactNativeVersion","version","major","minor","console","error","_formatVersion","patch","prerelease","undefined"],"mappings":"AAUA;;AAEA,OAAOA,QAAP;;AACA,IAAMC,kBAAkB,GAAGC,OAAO,wBAAlC;;AAWAC,OAAO,CAACC,aAAR,GAAwB,SAASA,aAAT,GAA+B;AACrD,MAAMC,aAAa,GAAGL,QAAQ,CAACM,SAAT,CAAmBC,kBAAzC;;AACA,MACEN,kBAAkB,CAACO,OAAnB,CAA2BC,KAA3B,KAAqCJ,aAAa,CAACI,KAAnD,IACAR,kBAAkB,CAACO,OAAnB,CAA2BE,KAA3B,KAAqCL,aAAa,CAACK,KAFrD,EAGE;AACAC,IAAAA,OAAO,CAACC,KAAR,CACE,2DAAyDC,cAAc,CACrEZ,kBAAkB,CAACO,OADkD,CAAvE,gCAGqBK,cAAc,CAACR,aAAD,CAHnC,aAIE,kEAJF,GAKE,8DALF,GAME,+DAPJ;AASD;AACF,CAhBD;;AAkBA,SAASQ,cAAT,CAAwBL,OAAxB,EAAyC;AACvC,SACKA,OAAO,CAACC,KAAX,SAAoBD,OAAO,CAACE,KAA5B,SAAqCF,OAAO,CAACM,KAA7C,IAECN,OAAO,CAACO,UAAR,IAAsBC,SAAtB,SAAsCR,OAAO,CAACO,UAA9C,GAA6D,EAF9D,CADF;AAKD","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport Platform from '../Utilities/Platform';\r\nconst ReactNativeVersion = require('./ReactNativeVersion');\r\n\r\n/**\r\n * Checks that the version of this React Native JS is compatible with the native\r\n * code, throwing an error if it isn't.\r\n *\r\n * The existence of this module is part of the public interface of React Native\r\n * even though it is used only internally within React Native. React Native\r\n * implementations for other platforms (ex: Windows) may override this module\r\n * and rely on its existence as a separate module.\r\n */\r\nexports.checkVersions = function checkVersions(): void {\r\n  const nativeVersion = Platform.constants.reactNativeVersion;\r\n  if (\r\n    ReactNativeVersion.version.major !== nativeVersion.major ||\r\n    ReactNativeVersion.version.minor !== nativeVersion.minor\r\n  ) {\r\n    console.error(\r\n      `React Native version mismatch.\\n\\nJavaScript version: ${_formatVersion(\r\n        ReactNativeVersion.version,\r\n      )}\\n` +\r\n        `Native version: ${_formatVersion(nativeVersion)}\\n\\n` +\r\n        'Make sure that you have rebuilt the native code. If the problem ' +\r\n        'persists try clearing the Watchman and packager caches with ' +\r\n        '`watchman watch-del-all && react-native start --reset-cache`.',\r\n    );\r\n  }\r\n};\r\n\r\nfunction _formatVersion(version): string {\r\n  return (\r\n    `${version.major}.${version.minor}.${version.patch}` +\r\n    // eslint-disable-next-line eqeqeq\r\n    (version.prerelease != undefined ? `-${version.prerelease}` : '')\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}