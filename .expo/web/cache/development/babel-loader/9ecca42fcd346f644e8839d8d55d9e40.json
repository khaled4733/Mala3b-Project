{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { React, useState } from \"react\";\nimport { getUserUId, login } from \"../../db/Auth\";\nimport { addUser } from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.emailAndPasswordView,\n      children: [_jsx(Text, {\n        style: styles.emailAndPasswordText,\n        children: \"Email:\"\n      }), _jsx(TextInput, {\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        placeholder: \"Enter your email\",\n        textAlign: \"center\",\n        style: styles.emailAndPasswordInput\n      })]\n    }), _jsxs(View, {\n      style: styles.emailAndPasswordView,\n      children: [_jsx(Text, {\n        style: styles.emailAndPasswordText,\n        children: \"Password:\"\n      }), _jsx(TextInput, {\n        onChangeText: setpassword,\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        textAlign: \"center\",\n        placeholder: \"Enter your password\",\n        style: styles.emailAndPasswordInput\n      })]\n    }), _jsxs(View, {\n      style: styles.SignInButtonView,\n      children: [_jsx(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          console.log(email, password);\n          login(email, password).then(function () {}).catch(function (e) {\n            return setError(e.message);\n          });\n        }\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    }), _jsxs(View, {\n      style: styles.RegisterView,\n      children: [_jsx(Text, {\n        children: \"Don't have an account?\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          navigation.navigate('Register');\n        }\n      })]\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {},\n  emailAndPasswordView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 5\n  },\n  emailAndPasswordText: {\n    flex: 1\n  },\n  emailAndPasswordInput: {\n    flex: 2,\n    borderColor: \"black\",\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: '#c0c0c0',\n    height: 40\n  },\n  errorText: {\n    color: '#f00'\n  },\n  SignInButtonView: {\n    paddingTop: 3,\n    alignItems: 'center'\n  },\n  RegisterView: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS-303 Project/Components/Users/Login.jsx"],"names":["React","useState","getUserUId","login","addUser","Login","navigation","email","setEmail","password","setpassword","error","setError","styles","container","emailAndPasswordView","emailAndPasswordText","emailAndPasswordInput","SignInButtonView","console","log","then","catch","e","message","errorText","RegisterView","navigate","StyleSheet","create","flexDirection","justifyContent","alignItems","padding","flex","borderColor","borderRadius","backgroundColor","height","color","paddingTop"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport {getUserUId, login} from \"../../db/Auth\";\r\nimport {addUser} from \"../../db/User\";\r\n\r\nconst Login = ({navigation}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  return (\r\n    <View style= {styles.container}>\r\n      <View style={styles.emailAndPasswordView}>\r\n        <Text style={styles.emailAndPasswordText}>Email:</Text>\r\n        <TextInput\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n          placeholder=\"Enter your email\"\r\n          textAlign=\"center\"\r\n          style={styles.emailAndPasswordInput}\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.emailAndPasswordView}>\r\n        <Text style={styles.emailAndPasswordText}>Password:</Text>\r\n        <TextInput\r\n          onChangeText={setpassword}\r\n          keyboardType=\"visible-password\"\r\n          secureTextEntry={true}\r\n          textAlign=\"center\"\r\n          placeholder=\"Enter your password\"\r\n          style={styles.emailAndPasswordInput}\r\n        />\r\n      </View>\r\n      <View style={styles.SignInButtonView}>\r\n        <Button\r\n          title=\"Login\"\r\n          onPress={() => {\r\n            console.log(email, password);\r\n            login(email,password)\r\n              .then(()=>{\r\n                // addUser({id:getUserUId(),email,password}); /*adding user to users collection*/\r\n              })\r\n              .catch((e) => setError(e.message));\r\n          }}\r\n        />\r\n        <Text style={styles.errorText}>{error}</Text>\r\n      </View>\r\n      <View style={styles.RegisterView}>\r\n        <Text>Don't have an account?</Text>\r\n        <Button title=\"Register\" onPress={() => {navigation.navigate('Register')}}/>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    \r\n  },\r\n\r\n  emailAndPasswordView: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 5,\r\n  },\r\n  emailAndPasswordText: {\r\n    flex: 1\r\n  },\r\n  emailAndPasswordInput: {\r\n    flex: 2,\r\n    borderColor: \"black\",\r\n    borderRadius: 30,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: '#c0c0c0',\r\n    height: 40,\r\n  },\r\n  errorText :{\r\n    color: '#f00'\r\n  },\r\n  SignInButtonView: {\r\n    paddingTop: 3,\r\n    alignItems: 'center',\r\n  },\r\n  RegisterView: {\r\n    alignItems: 'center',\r\n  }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}