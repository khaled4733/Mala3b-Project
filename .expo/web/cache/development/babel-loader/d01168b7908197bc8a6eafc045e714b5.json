{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { db } from \"../Config\";\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where } from \"firebase/firestore\";\n\nfunction addBStadium() {\n  return _regeneratorRuntime.async(function addBStadium$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getBStadium() {\n  var stadiumsCol, stadiumsSnapshot, stadiumList;\n  return _regeneratorRuntime.async(function getBStadium$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          stadiumsCol = collection(db, \"basketball\");\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(stadiumsCol));\n\n        case 3:\n          stadiumsSnapshot = _context2.sent;\n          stadiumList = stadiumsSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          console.log(stadiumList);\n          return _context2.abrupt(\"return\", stadiumList);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { addBStadium, getBStadium };","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS303-Project/db/Stadium/Basketball.js"],"names":["db","addDoc","collection","getDocs","getFirestore","setDoc","doc","query","where","addBStadium","getBStadium","stadiumsCol","stadiumsSnapshot","stadiumList","docs","map","id","data","console","log"],"mappings":";;;;;;;AAAA,SAASA,EAAT;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,YAAtC,EAAoDC,MAApD,EAA4DC,GAA5D,EAAiEC,KAAjE,EAAwEC,KAAxE,QAAqF,oBAArF;;AAEA,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,WADV,GACwBT,UAAU,CAACF,EAAD,EAAK,YAAL,CADlC;AAAA;AAAA,2CAEmCG,OAAO,CAACQ,WAAD,CAF1C;;AAAA;AAEUC,UAAAA,gBAFV;AAGUC,UAAAA,WAHV,GAGwBD,gBAAgB,CAACE,IAAjB,CAAsBC,GAAtB,CAA0B,UAACT,GAAD,EAAS;AACnD;AAASU,cAAAA,EAAE,EAAEV,GAAG,CAACU;AAAjB,eAAwBV,GAAG,CAACW,IAAJ,EAAxB;AACH,WAFmB,CAHxB;AAMIC,UAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AANJ,4CAOWA,WAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAASJ,WAAT,EAAsBC,WAAtB","sourcesContent":["import { db } from \"../Config\";\r\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where } from \"firebase/firestore\";\r\n\r\nasync function addBStadium() {\r\n}\r\n\r\nasync function getBStadium() {\r\n    const stadiumsCol = collection(db, \"basketball\");\r\n    const stadiumsSnapshot = await getDocs(stadiumsCol);\r\n    const stadiumList = stadiumsSnapshot.docs.map((doc) => {\r\n        return { id: doc.id, ...doc.data() };\r\n    });\r\n    console.log(stadiumList);\r\n    return stadiumList;\r\n}\r\n\r\nexport { addBStadium, getBStadium };"]},"metadata":{},"sourceType":"module"}