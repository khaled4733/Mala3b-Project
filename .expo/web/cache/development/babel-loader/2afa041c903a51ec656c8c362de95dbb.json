{"ast":null,"code":"'use strict';\n\nimport Platform from \"../Utilities/Platform\";\n\nif (__DEV__) {\n  if (!global.RN$Bridgeless) {\n    if (!global.__RCTProfileIsProfiling) {\n      require(\"./setUpReactDevTools\");\n\n      var JSInspector = require(\"../JSInspector/JSInspector\");\n\n      JSInspector.registerAgent(require(\"../JSInspector/NetworkAgent\"));\n    }\n\n    var isLikelyARealBrowser = global.navigator != null && global.navigator.appName === 'Netscape';\n\n    if (!Platform.isTesting) {\n      var HMRClient = require(\"../Utilities/HMRClient\");\n\n      if (console._isPolyfilled) {\n        ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(function (level) {\n          var originalFunction = console[level];\n\n          console[level] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            HMRClient.log(level, args);\n            originalFunction.apply(console, args);\n          };\n        });\n      } else {\n        HMRClient.log('log', [\"JavaScript logs will appear in your \" + (isLikelyARealBrowser ? 'browser' : 'environment') + \" console\"]);\n      }\n    }\n\n    require(\"./setUpReactRefresh\");\n  }\n}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js"],"names":["Platform","__DEV__","global","RN$Bridgeless","__RCTProfileIsProfiling","require","JSInspector","registerAgent","isLikelyARealBrowser","navigator","appName","isTesting","HMRClient","console","_isPolyfilled","forEach","level","originalFunction","args","log","apply"],"mappings":"AAUA;;AAEA,OAAOA,QAAP;;AAQA,IAAIC,OAAJ,EAAa;AAEX,MAAI,CAACC,MAAM,CAACC,aAAZ,EAA2B;AACzB,QAAI,CAACD,MAAM,CAACE,uBAAZ,EAAqC;AACnCC,MAAAA,OAAO,wBAAP;;AAGA,UAAMC,WAAW,GAAGD,OAAO,8BAA3B;;AACAC,MAAAA,WAAW,CAACC,aAAZ,CAA0BF,OAAO,+BAAjC;AACD;;AAKD,QAAMG,oBAAoB,GACxBN,MAAM,CAACO,SAAP,IAAoB,IAApB,IAUAP,MAAM,CAACO,SAAP,CAAiBC,OAAjB,KAA6B,UAX/B;;AAaA,QAAI,CAACV,QAAQ,CAACW,SAAd,EAAyB;AACvB,UAAMC,SAAS,GAAGP,OAAO,0BAAzB;;AAEA,UAAIQ,OAAO,CAACC,aAAZ,EAA2B;AAEzB,SACE,OADF,EAEE,MAFF,EAGE,MAHF,EAIE,OAJF,EAKE,KALF,EAME,OANF,EAOE,gBAPF,EAQE,UARF,EASE,OATF,EAUEC,OAVF,CAUU,UAAAC,KAAK,EAAI;AACjB,cAAMC,gBAAgB,GAAGJ,OAAO,CAACG,KAAD,CAAhC;;AACAH,UAAAA,OAAO,CAACG,KAAD,CAAP,GAAiB,YAAkB;AAAA,8CAANE,IAAM;AAANA,cAAAA,IAAM;AAAA;;AACjCN,YAAAA,SAAS,CAACO,GAAV,CAAcH,KAAd,EAAqBE,IAArB;AACAD,YAAAA,gBAAgB,CAACG,KAAjB,CAAuBP,OAAvB,EAAgCK,IAAhC;AACD,WAHD;AAID,SAhBD;AAiBD,OAnBD,MAmBO;AAILN,QAAAA,SAAS,CAACO,GAAV,CAAc,KAAd,EAAqB,2CAEjBX,oBAAoB,GAAG,SAAH,GAAe,aAFlB,eAArB;AAKD;AACF;;AAEDH,IAAAA,OAAO,uBAAP;AACD;AACF","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport Platform from '../Utilities/Platform';\r\n\r\ndeclare var console: typeof console & {_isPolyfilled: boolean, ...};\r\n\r\n/**\r\n * Sets up developer tools for React Native.\r\n * You can use this module directly, or just require InitializeCore.\r\n */\r\nif (__DEV__) {\r\n  // TODO (T45803484) Enable devtools for bridgeless RN\r\n  if (!global.RN$Bridgeless) {\r\n    if (!global.__RCTProfileIsProfiling) {\r\n      require('./setUpReactDevTools');\r\n\r\n      // Set up inspector\r\n      const JSInspector = require('../JSInspector/JSInspector');\r\n      JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\r\n    }\r\n\r\n    // Note we can't check if console is \"native\" because it would appear \"native\" in JSC and Hermes.\r\n    // We also can't check any properties that don't exist in the Chrome worker environment.\r\n    // So we check a navigator property that's set to a particular value (\"Netscape\") in all real browsers.\r\n    const isLikelyARealBrowser =\r\n      global.navigator != null &&\r\n      /*              _\r\n       *             | |\r\n       *   _ __   ___| |_ ___  ___ __ _ _ __   ___\r\n       *  | '_ \\ / _ \\ __/ __|/ __/ _` | '_ \\ / _ \\\r\n       *  | | | |  __/ |_\\__ \\ (_| (_| | |_) |  __/\r\n       *  |_| |_|\\___|\\__|___/\\___\\__,_| .__/ \\___|\r\n       *                               | |\r\n       *                               |_|\r\n       */\r\n      global.navigator.appName === 'Netscape'; // Any real browser\r\n\r\n    if (!Platform.isTesting) {\r\n      const HMRClient = require('../Utilities/HMRClient');\r\n\r\n      if (console._isPolyfilled) {\r\n        // We assume full control over the console and send JavaScript logs to Metro.\r\n        [\r\n          'trace',\r\n          'info',\r\n          'warn',\r\n          'error',\r\n          'log',\r\n          'group',\r\n          'groupCollapsed',\r\n          'groupEnd',\r\n          'debug',\r\n        ].forEach(level => {\r\n          const originalFunction = console[level];\r\n          console[level] = function(...args) {\r\n            HMRClient.log(level, args);\r\n            originalFunction.apply(console, args);\r\n          };\r\n        });\r\n      } else {\r\n        // We assume the environment has a real rich console (like Chrome), and don't hijack it to log to Metro.\r\n        // It's likely the developer is using rich console to debug anyway, and hijacking it would\r\n        // lose the filenames in console.log calls: https://github.com/facebook/react-native/issues/26788.\r\n        HMRClient.log('log', [\r\n          `JavaScript logs will appear in your ${\r\n            isLikelyARealBrowser ? 'browser' : 'environment'\r\n          } console`,\r\n        ]);\r\n      }\r\n    }\r\n\r\n    require('./setUpReactRefresh');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}