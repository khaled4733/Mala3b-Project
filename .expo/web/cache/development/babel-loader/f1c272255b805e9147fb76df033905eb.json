{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { login } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var handleSignin = function handleSignin() {\n    console.log(email, password);\n    login(email, password).then().catch(function (e) {\n      return setError(e.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: _jsxs(View, {\n      style: styles.loginView,\n      children: [_jsx(View, {\n        style: styles.screen,\n        children: _jsx(Image, {\n          source: Logo,\n          style: styles.image\n        })\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"Welcome back!\"\n      }), _jsxs(View, {\n        style: styles.format,\n        children: [_jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"example@email.com\",\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          placeholderTextColor: '#FFF'\n        }), _jsx(TextInput, {\n          style: styles.textinput,\n          onChangeText: setpassword,\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          placeholderTextColor: '#FFF'\n        })]\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          onPress: handleSignin,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"sign in\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsxs(View, {\n        style: styles.buttontextstyle,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate('ForgotPassword');\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 15,\n              color: '#FFF'\n            },\n            children: \"Forgot Password?\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate('Register');\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 15,\n              color: '#FFF'\n            },\n            children: \"New User?\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default Login;\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n    paddingHorizontal: 60,\n    alignSelf: \"stretch\",\n    justifyContent: 'center'\n  },\n  loginView: {\n    flex: 1,\n    backgroundColor: '#5390d9',\n    borderRadius: 20,\n    width: cardwidth - 100,\n    marginVertical: 60,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  screen: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 25,\n    paddingBottom: 20,\n    color: '#FFF'\n  },\n  textinput: {\n    height: 40,\n    color: '#FFF',\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: '#80ffdb',\n    width: '100%',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttontextstyle: {\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttontext: {\n    color: '#5390d9',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: 'rgb(255, 255, 255)'\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Components/Users/Login.jsx"],"names":["React","useState","login","Logo","Login","navigation","email","setEmail","password","setpassword","error","setError","handleSignin","console","log","then","catch","e","message","styles","mainview","loginView","screen","image","text","format","textinput","buttonstyle","buttontext","errorText","buttontextstyle","navigate","fontSize","color","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignSelf","justifyContent","borderRadius","marginVertical","alignItems","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","row","flexDirection","paddingBottom","textAlign","fontWeight","borderBottomColor","borderBottomWidth","padding"],"mappings":"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","sourcesContent":["import { Dimensions, TouchableOpacity, KeyboardAvoidingView, StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { login } from \"../../db/Auth\";\r\nimport Logo from '../../assets/2511582.jpg'\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSignin = () => {\r\n    console.log(email, password);\r\n    login(email, password)\r\n      .then()\r\n      .catch((e) => setError(e.message));\r\n  }\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.mainview} >\r\n      <View style={styles.loginView}>\r\n        <View style={styles.screen}>\r\n          <Image source={Logo} style={styles.image} />\r\n        </View>\r\n\r\n        <Text style={styles.text}>Welcome back!</Text>\r\n\r\n        <View style={styles.format}>\r\n          <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"example@email.com\"\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            placeholderTextColor={'#FFF'}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.textinput}\r\n            onChangeText={setpassword}\r\n            secureTextEntry={true}\r\n            placeholder=\"Password\"\r\n            placeholderTextColor={'#FFF'}\r\n          />\r\n        </View>\r\n\r\n\r\n        <View>\r\n          <TouchableOpacity style={styles.buttonstyle} onPress={handleSignin}>\r\n            <Text style={styles.buttontext}>sign in</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <Text style={styles.errorText}>{error}</Text>\r\n\r\n        <View style={styles.buttontextstyle}>\r\n          <TouchableOpacity onPress={() => { navigation.navigate('ForgotPassword') }}>\r\n            <Text style={{ fontSize: 15, color: '#FFF' }}>Forgot Password?</Text>\r\n          </TouchableOpacity>\r\n\r\n\r\n\r\n          <TouchableOpacity onPress={() => { navigation.navigate('Register') }}>\r\n            <Text style={{ fontSize: 15, color: '#FFF' }}>New User?</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n  mainview: {\r\n    flex: 1,\r\n    backgroundColor: \"#FFF\",\r\n    paddingHorizontal: 60,\r\n    alignSelf: \"stretch\",\r\n    justifyContent: 'center'\r\n  },\r\n  loginView: {\r\n    flex: 1,\r\n    backgroundColor: '#5390d9',\r\n    borderRadius: 20,\r\n    width: cardwidth - 100,\r\n    marginVertical: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: 'center',\r\n    shadowColor: '#000000',\r\n    shadowOffset: {\r\n      width: 5,\r\n      height: 5\r\n    },\r\n    shadowOpacity: .25,\r\n    shadowRadius: 3\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  screen: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    paddingBottom: 20,\r\n    color: '#FFF'\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    color: '#FFF',\r\n    borderBottomColor: \"#cae9ff\",\r\n    borderBottomWidth: 4,\r\n\r\n  },\r\n  format: {\r\n    paddingBottom: 20\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: '#80ffdb',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  buttontextstyle: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttontext: {\r\n    color: '#5390d9',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: 'rgb(255, 255, 255)'\r\n  },\r\n\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}