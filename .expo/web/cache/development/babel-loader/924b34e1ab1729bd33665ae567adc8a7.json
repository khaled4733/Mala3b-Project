{"ast":null,"code":"import ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { signout } from \"../db/Auth\";\nimport React, { useState, useEffect } from \"react\";\nimport { getUsers } from \"../db/User\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  function getCurrentUser() {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var id = user.id;\n        var fullname = user.fullname;\n        var _email = user.email;\n        var phone = user.phone;\n        var gender = user.gender;\n        var balance = user.balance;\n        var role = user.role;\n      } else {\n        alert('No user is signed in');\n      }\n    });\n  }\n\n  var handleSignOut = function handleSignOut() {\n    signout().then(alert(\"signout successful\")).catch(function (error) {\n      return alert(error.message);\n    });\n    console.log(\"signout successful\");\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.boxalign,\n      children: _jsx(View, {\n        style: styles.box1\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"email\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsxs(Text, {\n          style: {\n            color: '#FFF',\n            marginLeft: 10,\n            fontSize: 20\n          },\n          children: [\" \", email, \" \"]\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"cash-multiple\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(Text, {\n          style: {\n            color: '#FFF',\n            marginLeft: 10,\n            fontSize: 20\n          },\n          children: \"  L.E \"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"calendar-month-outline\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(Text, {\n          style: {\n            color: '#FFF',\n            marginLeft: 10,\n            fontSize: 20\n          },\n          children: \"  \"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"cellphone\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(Text, {\n          style: {\n            color: '#FFF',\n            marginLeft: 10,\n            fontSize: 20\n          },\n          children: \"  \"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"gender-male-female\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(Text, {\n          style: {\n            color: '#FFF',\n            marginLeft: 10,\n            fontSize: 20\n          },\n          children: \"  \"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"email\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"admin\"\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Icon, {\n        name: \"logout\",\n        color: '#FFF',\n        size: 30\n      }), _jsx(View, {\n        style: styles.box,\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          onPress: handleSignOut,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"LogOut\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#056284'\n  },\n  boxalign: {\n    alignItems: 'center'\n  },\n  box1: {\n    backgroundColor: '#FFF',\n    borderRadius: 20,\n    marginVertical: 20,\n    width: cardwidth - 65,\n    height: 200,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  row: {\n    flexDirection: 'row',\n    marginLeft: 20,\n    marginBottom: 30\n  },\n  buttonstyle: {\n    backgroundColor: '#022b3a',\n    width: '100%',\n    height: 60,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 30\n  },\n  buttontext: {\n    color: '#FFF',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  box: {\n    marginLeft: 10,\n    width: '75%',\n    height: 40,\n    backgroundColor: '#022b3a',\n    borderRadius: 15,\n    justifyContent: 'center'\n  }\n});\n{}","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/Pages/Profile.js"],"names":["signout","React","useState","useEffect","getUsers","Icon","onAuthStateChanged","Profile","navigation","route","getCurrentUser","auth","user","id","fullname","email","phone","gender","balance","role","alert","handleSignOut","then","catch","error","message","console","log","styles","container","boxalign","box1","row","box","color","marginLeft","fontSize","buttonstyle","buttontext","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","borderRadius","marginVertical","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","flexDirection","marginBottom","justifyContent","fontWeight"],"mappings":"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","sourcesContent":["import { ScrollView, TouchableOpacity, StyleSheet, Text, View, Dimensions } from 'react-native'\r\nimport { signout } from '../db/Auth'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getUsers } from '../db/User'\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\n\r\nexport default function Profile({ navigation, route }) {\r\n\r\n\r\n    function getCurrentUser() {\r\n        onAuthStateChanged(auth, (user) => {\r\n          if (user) {\r\n            const id = user.id;\r\n            const fullname = user.fullname;\r\n            const email = user.email;\r\n            const phone = user.phone;\r\n            const gender = user.gender;\r\n            const balance = user.balance;\r\n            const role = user.role;\r\n          } else {\r\n            alert('No user is signed in');\r\n          }\r\n        })\r\n      }\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n        signout()\r\n            .then(alert(\"signout successful\"))\r\n            .catch(error => alert(error.message))\r\n        console.log(\"signout successful\");\r\n    }\r\n\r\n    // const handleadminarea = () => {\r\n    //     if (user.role == 1) {\r\n    //         navigation.navigate('AdminArea')\r\n    //     } else {\r\n    //         alert(\"you dont have permmision to enter the area\")\r\n    //     }\r\n    // }\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <View style={styles.boxalign}>\r\n                <View style={styles.box1}>\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"email\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <Text style={{ color: '#FFF', marginLeft: 10, fontSize: 20 }}> {email} </Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"cash-multiple\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <Text style={{ color: '#FFF', marginLeft: 10, fontSize: 20 }}>  L.E </Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"calendar-month-outline\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <Text style={{ color: '#FFF', marginLeft: 10, fontSize: 20 }}>  </Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"cellphone\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <Text style={{ color: '#FFF', marginLeft: 10, fontSize: 20 }}>  </Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"gender-male-female\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <Text style={{ color: '#FFF', marginLeft: 10, fontSize: 20 }}>  </Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"email\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <TouchableOpacity style={styles.buttonstyle} >\r\n                        <Text style={styles.buttontext}>admin</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.row}>\r\n                <Icon name=\"logout\" color={'#FFF'} size={30} />\r\n                <View style={styles.box}>\r\n                    <TouchableOpacity style={styles.buttonstyle} onPress={handleSignOut}>\r\n                        <Text style={styles.buttontext}>LogOut</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n        </ScrollView>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#056284'\r\n    },\r\n    boxalign: {\r\n        alignItems: 'center',\r\n    },\r\n    box1: {\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 20,\r\n        marginVertical: 20,\r\n        width: cardwidth - 65,\r\n        height: 200,\r\n        shadowColor: '#000000',\r\n        shadowOffset: {\r\n            width: 5,\r\n            height: 5\r\n        },\r\n        shadowOpacity: .25,\r\n        shadowRadius: 3\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        marginLeft: 20,\r\n        marginBottom: 30\r\n    },\r\n    buttonstyle: {\r\n        backgroundColor: '#022b3a',\r\n        width: '100%',\r\n        height: 60,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginVertical: 30\r\n    },\r\n    buttontext: {\r\n        color: '#FFF',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    box: {\r\n        marginLeft: 10,\r\n        width: '75%',\r\n        height: 40,\r\n        backgroundColor: '#022b3a',\r\n        borderRadius: 15,\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\n\r\n{/* <TouchableOpacity style={styles.buttonstyle} onPress={handleSignOut}>\r\n                <Text style={styles.buttontext}>LogOut</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.buttonstyle} onPress={handleadminarea}>\r\n                <Text style={styles.buttontext}>admin</Text>\r\n            </TouchableOpacity> */}"]},"metadata":{},"sourceType":"module"}