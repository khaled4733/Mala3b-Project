{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Football = function Football(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredData = _useState4[0],\n      setFilteredData = _useState4[1];\n\n  useEffect(function () {\n    fetchData(\"https://randomuser.me/api/?results=20\");\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerLargeTitle: true,\n      headerTitle: \"Home\",\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: \"purple\",\n            width: 30,\n            height: 30,\n            borderRadius: 10,\n            justifyContent: \"center\"\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 20,\n              textAlign: \"center\",\n              color: \"white\"\n            },\n            children: \"+\"\n          })\n        });\n      },\n      headerSearchBarOptions: {\n        placeholder: \"Friends\",\n        onChangeText: function onChangeText(event) {\n          searchFilterFunction(event.nativeEvent.text);\n        }\n      }\n    });\n  }, [navigation]);\n\n  var fetchData = function fetchData(url) {\n    var response, json;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.results);\n            setFilteredData(json.results);\n            console.log(json.results);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = data.filter(function (item) {\n        var itemData = item.name.first ? item.name.first.toUpperCase() : \"\".toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredData(newData);\n    } else {\n      setFilteredData(data);\n    }\n  };\n\n  return _jsxs(ScrollView, {\n    children: [_jsx(Text, {\n      style: styles.textFriends,\n      children: \"Friends\"\n    }), filteredData.map(function (item, index) {\n      return _jsxs(View, {\n        style: styles.itemContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: item.picture.large\n          },\n          style: styles.image\n        }), _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.textName,\n            children: [item.name.first, \" \", item.name.last]\n          }), _jsx(Text, {\n            style: styles.textEmail,\n            children: item.login.username\n          })]\n        })]\n      }, index);\n    })]\n  });\n};\n\nexport default Football;\nvar styles = StyleSheet.create({\n  textFriends: {\n    fontSize: 20,\n    textAlign: \"left\",\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  itemContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  textName: {\n    fontSize: 17,\n    marginLeft: 10,\n    fontWeight: \"600\"\n  },\n  textEmail: {\n    fontSize: 14,\n    marginLeft: 10,\n    color: \"grey\"\n  }\n});","map":{"version":3,"sources":["C:/Users/tboss/CS303-Project-4/Pages/Football.jsx"],"names":["React","useEffect","useState","Football","navigation","data","setData","filteredData","setFilteredData","fetchData","setOptions","headerLargeTitle","headerTitle","headerRight","backgroundColor","width","height","borderRadius","justifyContent","fontSize","textAlign","color","headerSearchBarOptions","placeholder","onChangeText","event","searchFilterFunction","nativeEvent","text","url","fetch","response","json","results","console","log","error","newData","filter","item","itemData","name","first","toUpperCase","textData","indexOf","styles","textFriends","map","index","itemContainer","uri","picture","large","image","textName","last","textEmail","login","username","StyleSheet","create","marginLeft","fontWeight","marginTop","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nconst Football = ({ navigation }) => {\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"https://randomuser.me/api/?results=20\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      headerLargeTitle: true,\r\n      headerTitle: \"Home\",\r\n      headerRight: () => (\r\n        <TouchableOpacity\r\n          style={{\r\n            backgroundColor: \"purple\",\r\n            width: 30,\r\n            height: 30,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            +\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ),\r\n      headerSearchBarOptions: {\r\n        placeholder: \"Friends\",\r\n        onChangeText: (event) => {\r\n          searchFilterFunction(event.nativeEvent.text);\r\n        },\r\n      },\r\n    });\r\n  }, [navigation]);\r\n\r\n  const fetchData = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      setData(json.results);\r\n      setFilteredData(json.results);\r\n      console.log(json.results);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchFilterFunction = (text) => {\r\n    if (text) {\r\n      const newData = data.filter((item) => {\r\n        const itemData = item.name.first\r\n          ? item.name.first.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredData(newData);\r\n    } else {\r\n      setFilteredData(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Text style={styles.textFriends}>Friends</Text>\r\n      {filteredData.map((item, index) => {\r\n        return (\r\n          <View key={index} style={styles.itemContainer}>\r\n            <Image source={{ uri: item.picture.large }} style={styles.image} />\r\n            <View>\r\n              <Text style={styles.textName}>\r\n                {item.name.first} {item.name.last}\r\n              </Text>\r\n              <Text style={styles.textEmail}>{item.login.username}</Text>\r\n            </View>\r\n          </View>\r\n        );\r\n      })}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Football;\r\n\r\nconst styles = StyleSheet.create({\r\n  textFriends: {\r\n    fontSize: 20,\r\n    textAlign: \"left\",\r\n    marginLeft: 10,\r\n    fontWeight: \"bold\",\r\n    marginTop: 10,\r\n  },\r\n  itemContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n  },\r\n  image: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  textName: {\r\n    fontSize: 17,\r\n    marginLeft: 10,\r\n    fontWeight: \"600\",\r\n  },\r\n  textEmail: {\r\n    fontSize: 14,\r\n    marginLeft: 10,\r\n    color: \"grey\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}