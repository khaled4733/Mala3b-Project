{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { forgotpassword } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var handleforgotpassword = function handleforgotpassword() {\n    forgotpassword(email).then(navigation.navigate('SignIn')).catch(function (e) {\n      return setError(e.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: _jsxs(View, {\n      style: styles.View,\n      children: [_jsx(View, {\n        style: styles.screen,\n        children: _jsx(Image, {\n          source: Logo,\n          style: styles.image\n        })\n      }), _jsx(View, {\n        style: styles.format,\n        children: _jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"example@email.com\",\n          placeholderTextColor: '#f2e9e4',\n          onChangeText: setEmail,\n          keyboardType: \"email-address\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          onPress: handleforgotpassword,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"Reset Password\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    })\n  });\n};\n\nexport default Login;\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#f2e9e4\",\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  View: {\n    backgroundColor: '#22223b',\n    borderRadius: 20,\n    width: cardwidth - 100,\n    height: 500,\n    paddingHorizontal: 25,\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  screen: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 25,\n    paddingBottom: 20,\n    color: '#f2e9e4'\n  },\n  textinput: {\n    height: 40,\n    color: '#f2e9e4',\n    borderBottomColor: \"#f2e9e4\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: '#f2e9e4',\n    width: '100%',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttontextstyle: {\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttontext: {\n    color: '#22223b',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: '#22223b'\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (3)/CS303-Project/Components/Users/ForgotPassword.jsx"],"names":["React","useState","forgotpassword","Logo","Login","navigation","email","setEmail","error","setError","handleforgotpassword","then","navigate","catch","e","message","styles","mainview","View","screen","image","format","textinput","buttonstyle","buttontext","errorText","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","height","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","row","flexDirection","paddingBottom","text","textAlign","fontWeight","fontSize","color","borderBottomColor","borderBottomWidth","padding","buttontextstyle"],"mappings":"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","sourcesContent":["import { Dimensions, TouchableOpacity, KeyboardAvoidingView, StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { forgotpassword } from \"../../db/Auth\";\r\nimport Logo from '../../assets/2511582.jpg'\r\n\r\nconst Login = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleforgotpassword = () => {\r\n        forgotpassword(email)\r\n            .then(navigation.navigate('SignIn'))\r\n            .catch((e) => setError(e.message));\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={styles.mainview} >\r\n            <View style={styles.View}>\r\n                <View style={styles.screen}>\r\n                    <Image source={Logo} style={styles.image} />\r\n                </View>\r\n\r\n\r\n                <View style={styles.format}>\r\n                    <TextInput\r\n                        style={styles.textinput}\r\n                        placeholder=\"example@email.com\"\r\n                        placeholderTextColor={'#f2e9e4'}\r\n                        onChangeText={setEmail}\r\n                        keyboardType=\"email-address\"\r\n                    />\r\n                </View>\r\n\r\n\r\n                <View>\r\n                    <TouchableOpacity style={styles.buttonstyle} onPress={handleforgotpassword}>\r\n                        <Text style={styles.buttontext}>Reset Password</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <Text style={styles.errorText}>{error}</Text>\r\n\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n  mainview: {\r\n    flex: 1,\r\n    backgroundColor: \"#f2e9e4\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'center',\r\n  },\r\n  // 22223b\r\n  View: {\r\n    backgroundColor: '#22223b',\r\n    borderRadius: 20,\r\n    width: cardwidth - 100,\r\n    height: 500,\r\n    paddingHorizontal: 25,\r\n    justifyContent: 'center',\r\n    shadowColor: '#000000',\r\n    shadowOffset: {\r\n      width: 5,\r\n      height: 5\r\n    },\r\n    shadowOpacity: .25,\r\n    shadowRadius: 3\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  screen: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    paddingBottom: 20,\r\n    color: '#f2e9e4'\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    color: '#f2e9e4',\r\n    borderBottomColor: \"#f2e9e4\",\r\n    borderBottomWidth: 4,\r\n  },\r\n  format: {\r\n    paddingBottom: 20\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: '#f2e9e4',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  buttontextstyle: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttontext: {\r\n    color: '#22223b',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: '#22223b'\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}