{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { db } from \"../Config\";\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where, deleteDoc } from \"firebase/firestore\";\n\nfunction addBStadium(BasketBall, id) {\n  return _regeneratorRuntime.async(function addBStadium$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"basketball\", id), BasketBall));\n\n        case 3:\n          console.log(\"Document written with ID: \", id);\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error adding document: \", _context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction getBStadium() {\n  var stadiumsCol, stadiumsSnapshot, stadiumList;\n  return _regeneratorRuntime.async(function getBStadium$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          stadiumsCol = collection(db, \"basketball\");\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(stadiumsCol));\n\n        case 3:\n          stadiumsSnapshot = _context2.sent;\n          stadiumList = stadiumsSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          console.log(stadiumList);\n          return _context2.abrupt(\"return\", stadiumList);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction deleteBStadium(id) {\n  return _regeneratorRuntime.async(function deleteBStadium$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(deleteDoc(doc(db, \"basketball\", id)));\n\n        case 3:\n          console.log(\"Document deleted with ID: \", id);\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(\"Error deleting document: \", _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction updateBStadium(docId, BasketBall) {\n  return _regeneratorRuntime.async(function updateBStadium$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(updateDoc(doc(db, \"basketball\", docId), BasketBall));\n\n        case 3:\n          console.log(\"Document updated with ID: \", docId);\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(\"Error updateing document: \", _context4.t0);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nexport { addBStadium, getBStadium, deleteBStadium, updateBStadium };","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (2)/CS303-Project/db/Stadium/Basketball.js"],"names":["db","addDoc","collection","getDocs","getFirestore","setDoc","doc","query","where","deleteDoc","addBStadium","BasketBall","id","console","log","error","getBStadium","stadiumsCol","stadiumsSnapshot","stadiumList","docs","map","data","deleteBStadium","updateBStadium","docId","updateDoc"],"mappings":";;;;;;;AAAA,SAASA,EAAT;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,YAAtC,EAAoDC,MAApD,EAA4DC,GAA5D,EAAiEC,KAAjE,EAAwEC,KAAxE,EAA+EC,SAA/E,QAAgG,oBAAhG;;AAGA,SAAeC,WAAf,CAA2BC,UAA3B,EAAwCC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEUP,MAAM,CAACC,GAAG,CAACN,EAAD,EAAK,YAAL,EAAoBY,EAApB,CAAJ,EAA6BD,UAA7B,CAFhB;;AAAA;AAGIE,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,EAA1C;AAHJ;AAAA;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACE,KAAR,CAAc,yBAAd;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,UAAAA,WADR,GACsBf,UAAU,CAACF,EAAD,EAAK,YAAL,CADhC;AAAA;AAAA,2CAEiCG,OAAO,CAACc,WAAD,CAFxC;;AAAA;AAEQC,UAAAA,gBAFR;AAGQC,UAAAA,WAHR,GAGsBD,gBAAgB,CAACE,IAAjB,CAAsBC,GAAtB,CAA0B,UAACf,GAAD,EAAS;AACrD;AAASM,cAAAA,EAAE,EAAEN,GAAG,CAACM;AAAjB,eAAwBN,GAAG,CAACgB,IAAJ,EAAxB;AACD,WAFmB,CAHtB;AAMET,UAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AANF,4CAOSA,WAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAeI,cAAf,CAA8BX,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEUH,SAAS,CAACH,GAAG,CAACN,EAAD,EAAK,YAAL,EAAmBY,EAAnB,CAAJ,CAFnB;;AAAA;AAGIC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,EAA1C;AAHJ;AAAA;;AAAA;AAAA;AAAA;AAKIC,UAAAA,OAAO,CAACE,KAAR,CAAc,2BAAd;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAeS,cAAf,CAA8BC,KAA9B,EAAqCd,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEUe,SAAS,CAACpB,GAAG,CAACN,EAAD,EAAK,YAAL,EAAmByB,KAAnB,CAAJ,EAA+Bd,UAA/B,CAFnB;;AAAA;AAGIE,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CW,KAA1C;AAHJ;AAAA;;AAAA;AAAA;AAAA;AAKIZ,UAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAASL,WAAT,EAAsBM,WAAtB,EAAmCO,cAAnC,EAAmDC,cAAnD","sourcesContent":["import { db } from \"../Config\";\r\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where, deleteDoc } from \"firebase/firestore\";\r\n\r\n\r\nasync function addBStadium(BasketBall , id) {\r\n  try {\r\n    await setDoc(doc(db, \"basketball\" , id), BasketBall);\r\n    console.log(\"Document written with ID: \", id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\n\r\nasync function getBStadium() {\r\n  const stadiumsCol = collection(db, \"basketball\");\r\n  const stadiumsSnapshot = await getDocs(stadiumsCol);\r\n  const stadiumList = stadiumsSnapshot.docs.map((doc) => {\r\n    return { id: doc.id, ...doc.data() };\r\n  });\r\n  console.log(stadiumList);\r\n  return stadiumList;\r\n}\r\n\r\n\r\nasync function deleteBStadium(id) {\r\n  try {\r\n    await deleteDoc(doc(db, \"basketball\", id));\r\n    console.log(\"Document deleted with ID: \", id);\r\n  } catch (error) {\r\n    console.error(\"Error deleting document: \", error);\r\n  }\r\n}\r\n\r\nasync function updateBStadium(docId, BasketBall) {\r\n  try {\r\n    await updateDoc(doc(db, \"basketball\", docId), BasketBall);\r\n    console.log(\"Document updated with ID: \", docId);\r\n  } catch (error) {\r\n    console.error(\"Error updateing document: \", error);\r\n  }\r\n}\r\n\r\nexport { addBStadium, getBStadium, deleteBStadium, updateBStadium };"]},"metadata":{},"sourceType":"module"}