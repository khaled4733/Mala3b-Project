{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { forgotpassword } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var handleforgotpassword = function handleforgotpassword() {\n    forgotpassword(email).then(navigation.navigate('SignIn')).catch(function (e) {\n      return setError(e.message);\n    });\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: _jsxs(View, {\n      style: styles.View,\n      children: [_jsx(View, {\n        style: styles.screen,\n        children: _jsx(Image, {\n          source: Logo,\n          style: styles.image\n        })\n      }), _jsx(View, {\n        style: styles.format,\n        children: _jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"example@email.com\",\n          placeholderTextColor: '#f2e9e4',\n          onChangeText: setEmail,\n          keyboardType: \"email-address\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          onPress: handleforgotpassword,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"Reset Password\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    })\n  });\n};\nexport default Login;\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#f2e9e4\",\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  View: {\n    backgroundColor: '#22223b',\n    borderRadius: 20,\n    width: cardwidth - 100,\n    height: 500,\n    paddingHorizontal: 25,\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  screen: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 25,\n    paddingBottom: 20,\n    color: '#f2e9e4'\n  },\n  textinput: {\n    height: 40,\n    color: '#f2e9e4',\n    borderBottomColor: \"#f2e9e4\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: '#f2e9e4',\n    width: '100%',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttontextstyle: {\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttontext: {\n    color: '#22223b',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: '#22223b'\n  }\n});","map":{"version":3,"names":["React","useState","forgotpassword","Logo","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","error","setError","handleforgotpassword","then","navigate","catch","e","message","KeyboardAvoidingView","style","styles","mainview","children","View","screen","Image","source","image","format","TextInput","textinput","placeholder","placeholderTextColor","onChangeText","keyboardType","TouchableOpacity","buttonstyle","onPress","Text","buttontext","errorText","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","height","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","row","flexDirection","paddingBottom","text","textAlign","fontWeight","fontSize","color","borderBottomColor","borderBottomWidth","padding","buttontextstyle"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/Components/Users/ForgotPassword.jsx"],"sourcesContent":["import { Dimensions, TouchableOpacity, KeyboardAvoidingView, StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { forgotpassword } from \"../../db/Auth\";\r\nimport Logo from '../../assets/2511582.jpg'\r\n\r\nconst Login = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleforgotpassword = () => {\r\n        forgotpassword(email)\r\n            .then(navigation.navigate('SignIn'))\r\n            .catch((e) => setError(e.message));\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={styles.mainview} >\r\n            <View style={styles.View}>\r\n                <View style={styles.screen}>\r\n                    <Image source={Logo} style={styles.image} />\r\n                </View>\r\n\r\n\r\n                <View style={styles.format}>\r\n                    <TextInput\r\n                        style={styles.textinput}\r\n                        placeholder=\"example@email.com\"\r\n                        placeholderTextColor={'#f2e9e4'}\r\n                        onChangeText={setEmail}\r\n                        keyboardType=\"email-address\"\r\n                    />\r\n                </View>\r\n\r\n\r\n                <View>\r\n                    <TouchableOpacity style={styles.buttonstyle} onPress={handleforgotpassword}>\r\n                        <Text style={styles.buttontext}>Reset Password</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <Text style={styles.errorText}>{error}</Text>\r\n\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n  mainview: {\r\n    flex: 1,\r\n    backgroundColor: \"#f2e9e4\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'center',\r\n  },\r\n  // 22223b\r\n  View: {\r\n    backgroundColor: '#22223b',\r\n    borderRadius: 20,\r\n    width: cardwidth - 100,\r\n    height: 500,\r\n    paddingHorizontal: 25,\r\n    justifyContent: 'center',\r\n    shadowColor: '#000000',\r\n    shadowOffset: {\r\n      width: 5,\r\n      height: 5\r\n    },\r\n    shadowOpacity: .25,\r\n    shadowRadius: 3\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  screen: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    paddingBottom: 20,\r\n    color: '#f2e9e4'\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    color: '#f2e9e4',\r\n    borderBottomColor: \"#f2e9e4\",\r\n    borderBottomWidth: 4,\r\n  },\r\n  format: {\r\n    paddingBottom: 20\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: '#f2e9e4',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  buttontextstyle: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttontext: {\r\n    color: '#22223b',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: '#22223b'\r\n  },\r\n});\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}