{"ast":null,"code":"'use strict';\n\nimport * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.get('BlobModule');\nvar constants = null;\nvar NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants: function getConstants() {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n\n      return constants;\n    },\n    addNetworkingHandler: function addNetworkingHandler() {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler: function addWebSocketHandler(id) {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler: function removeWebSocketHandler(id) {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket: function sendOverSocket(blob, socketID) {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts: function createFromParts(parts, withId) {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release: function release(blobId) {\n      NativeModule.release(blobId);\n    }\n  };\n}\n\nexport default NativeBlobModule;","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Blob/NativeBlobModule.js"],"names":["TurboModuleRegistry","NativeModule","get","constants","NativeBlobModule","getConstants","addNetworkingHandler","addWebSocketHandler","id","removeWebSocketHandler","sendOverSocket","blob","socketID","createFromParts","parts","withId","release","blobId"],"mappings":"AAUA;;AAGA,OAAO,KAAKA,mBAAZ;AAYA,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,GAApB,CAA8B,YAA9B,CAArB;AAEA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,gBAAgB,GAAG,IAAvB;;AAEA,IAAIH,YAAY,IAAI,IAApB,EAA0B;AACxBG,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,YADiB,0BACoD;AACnE,UAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrBA,QAAAA,SAAS,GAAGF,YAAY,CAACI,YAAb,EAAZ;AACD;;AACD,aAAOF,SAAP;AACD,KANgB;AAOjBG,IAAAA,oBAPiB,kCAOY;AAC3BL,MAAAA,YAAY,CAACK,oBAAb;AACD,KATgB;AAUjBC,IAAAA,mBAViB,+BAUGC,EAVH,EAUqB;AACpCP,MAAAA,YAAY,CAACM,mBAAb,CAAiCC,EAAjC;AACD,KAZgB;AAajBC,IAAAA,sBAbiB,kCAaMD,EAbN,EAawB;AACvCP,MAAAA,YAAY,CAACQ,sBAAb,CAAoCD,EAApC;AACD,KAfgB;AAgBjBE,IAAAA,cAhBiB,0BAgBFC,IAhBE,EAgBYC,QAhBZ,EAgBoC;AACnDX,MAAAA,YAAY,CAACS,cAAb,CAA4BC,IAA5B,EAAkCC,QAAlC;AACD,KAlBgB;AAmBjBC,IAAAA,eAnBiB,2BAmBDC,KAnBC,EAmBqBC,MAnBrB,EAmB2C;AAC1Dd,MAAAA,YAAY,CAACY,eAAb,CAA6BC,KAA7B,EAAoCC,MAApC;AACD,KArBgB;AAsBjBC,IAAAA,OAtBiB,mBAsBTC,MAtBS,EAsBa;AAC5BhB,MAAAA,YAAY,CAACe,OAAb,CAAqBC,MAArB;AACD;AAxBgB,GAAnB;AA0BD;;AAED,eAAgBb,gBAAhB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {TurboModule} from '../TurboModule/RCTExport';\r\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\r\n\r\nexport interface Spec extends TurboModule {\r\n  +getConstants: () => {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\r\n  +addNetworkingHandler: () => void;\r\n  +addWebSocketHandler: (id: number) => void;\r\n  +removeWebSocketHandler: (id: number) => void;\r\n  +sendOverSocket: (blob: Object, socketID: number) => void;\r\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\r\n  +release: (blobId: string) => void;\r\n}\r\n\r\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\r\n\r\nlet constants = null;\r\nlet NativeBlobModule = null;\r\n\r\nif (NativeModule != null) {\r\n  NativeBlobModule = {\r\n    getConstants(): {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|} {\r\n      if (constants == null) {\r\n        constants = NativeModule.getConstants();\r\n      }\r\n      return constants;\r\n    },\r\n    addNetworkingHandler(): void {\r\n      NativeModule.addNetworkingHandler();\r\n    },\r\n    addWebSocketHandler(id: number): void {\r\n      NativeModule.addWebSocketHandler(id);\r\n    },\r\n    removeWebSocketHandler(id: number): void {\r\n      NativeModule.removeWebSocketHandler(id);\r\n    },\r\n    sendOverSocket(blob: Object, socketID: number): void {\r\n      NativeModule.sendOverSocket(blob, socketID);\r\n    },\r\n    createFromParts(parts: Array<Object>, withId: string): void {\r\n      NativeModule.createFromParts(parts, withId);\r\n    },\r\n    release(blobId: string): void {\r\n      NativeModule.release(blobId);\r\n    },\r\n  };\r\n}\r\n\r\nexport default (NativeBlobModule: ?Spec);\r\n"]},"metadata":{},"sourceType":"module"}