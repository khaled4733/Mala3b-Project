{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from \"react\";\nimport { addFStadium, deleteFStadium, getFStadium } from \"../db/Stadium/Football\";\nimport footballBackground from \"../assets/footballBackground.png\";\nimport tennisBackground from \"../assets/tennisBackground.png\";\nimport basketballBackground from \"../assets/basketballBackground.png\";\nimport { getUserUId } from \"../db/Auth\";\nimport { updateFAvailable } from \"../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ValidationPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var stadName = route.params.name;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stDate = _useState2[0],\n      setStDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edDate = _useState4[0],\n      setEdDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      day = _useState6[0],\n      setDay = _useState6[1];\n\n  function handel() {\n    console.log('begin handle', stadName);\n\n    if (stDate !== '' && edDate !== '' && day !== '' && stDate !== edDate) {\n      console.log('after validate');\n      getFStadium().then(function (data) {\n        console.log('number of stad size=', data.length);\n\n        var _loop = function _loop(i) {\n          if (data[i].name === stadName) {\n            console.log('found the stad', data[i]);\n            var flag = true;\n\n            if (data[i].state === null) {\n              data[i].state = [];\n            }\n\n            for (var j = 0; j < data[i].state.length; j++) {\n              if (data[i].state[j].day === day) {\n                if (stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate || data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate) alert(\"already occupied\");\n                flag = false;\n                break;\n                navigation.navigate('Football');\n              }\n            }\n\n            if (flag) {\n              getUserUId().then(function (id) {\n                data[i].state.push({\n                  day: day,\n                  stDate: stDate,\n                  edDate: edDate,\n                  id: id\n                });\n                updateFAvailable(data[i]);\n              });\n              navigation.navigate('Payment', {\n                stDate: stDate,\n                edDate: edDate,\n                day: day\n              });\n            }\n\n            return \"break\";\n          }\n        };\n\n        for (var i = 0; i < data.length; i++) {\n          var _ret = _loop(i);\n\n          if (_ret === \"break\") break;\n        }\n      });\n    } else {\n      alert(\"data is required\");\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \" Enter Your Booking Club \"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter day\",\n        onChangeText: setDay\n      }), _jsx(TextInput, {\n        placeholder: \"Enter start date\",\n        onChangeText: setStDate\n      }), _jsx(TextInput, {\n        placeholder: \"Enter end date\",\n        onChangeText: setEdDate\n      }), _jsx(Button, {\n        title: \"submit\",\n        onPress: handel\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    alignContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS303-Project/Pages/ValidationPage.jsx"],"names":["React","useState","addFStadium","deleteFStadium","getFStadium","footballBackground","tennisBackground","basketballBackground","getUserUId","updateFAvailable","ValidationPage","navigation","route","stadName","params","name","stDate","setStDate","edDate","setEdDate","day","setDay","handel","console","log","then","data","length","i","flag","state","j","alert","navigate","id","push","styles","container","header","StyleSheet","create","alignItems","alignContent"],"mappings":"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","sourcesContent":["import {\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    ScrollView, Image,Button\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport {addFStadium, deleteFStadium, getFStadium} from \"../db/Stadium/Football\";\r\nimport footballBackground from \"../assets/footballBackground.png\";\r\nimport tennisBackground from \"../assets/tennisBackground.png\";\r\nimport basketballBackground from \"../assets/basketballBackground.png\";\r\nimport {getUserUId} from \"../db/Auth\";\r\nimport {updateFAvailable} from \"../db/User\";\r\n\r\n\r\nexport default function ValidationPage ({navigation, route}) {\r\n\r\n    let {name: stadName} = route.params; //name -> att. in doc.\r\n\r\n    const [stDate,setStDate] = useState(\"\") //start date\r\n    const [edDate,setEdDate] = useState(\"\")//end date\r\n    const [day,setDay] =  useState(\"\")\r\n\r\n    function handel(){\r\n        console.log('begin handle', stadName);\r\n        if(stDate!=='' && edDate !== '' && day !== '' && stDate!==edDate){\r\n            console.log('after validate');\r\n            getFStadium().then((data) => {\r\n                console.log('number of stad size=', data.length);\r\n                for(let i=0; i<data.length; i++ ){\r\n                    if(data[i].name === stadName){\r\n                        console.log('found the stad', data[i]);\r\n                        let flag = true; // true ->stad is available\r\n                        if(data[i].state === null){ //if there is no array, set a new one\r\n                            data[i].state = []; //new array\r\n                        }\r\n                        /* add \"balance\" in db and manage it here*/\r\n                        for(let j=0; j<data[i].state.length; j++ ){\r\n                            if(data[i].state[j].day === day ){ //same day isn't enough\r\n                                if((stDate<data[i].state[j].edDate &&stDate>= data[i].state[j].stDate) || //check in same hours interval\r\n                                    ( data[i].state[j].stDate>=stDate  && data[i].state[j].stDate<edDate))\r\n                                alert(\"already occupied\");\r\n                                    flag = false; //stad is unavailable after occupation\r\n                                    break;\r\n                                    navigation.navigate('Football');\r\n                            }\r\n                        }\r\n                        if(flag){ //if flag is available i.e. \"true\", add userId with the \"date\" that he\r\n                            getUserUId().then((id)=>{ // gets id of current user in \"id\"\r\n                                data[i].state.push({day, stDate, edDate, id}); //note that we made \"id\" same as \"document ID\" manually\r\n                                updateFAvailable(data[i]);\r\n                            });\r\n                            navigation.navigate('Payment', {stDate,edDate,day});\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }else {\r\n            alert(\"data is required\")\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.header}> Enter Your Booking Club </Text>\r\n            <ScrollView>\r\n                <TextInput placeholder=\"Enter day\" onChangeText={setDay}/>\r\n                <TextInput placeholder=\"Enter start date\" onChangeText={setStDate}/>\r\n                <TextInput placeholder=\"Enter end date\" onChangeText={setEdDate}/>\r\n                <Button title={\"submit\"} onPress={handel}/>\r\n\r\n            </ScrollView>\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n    const styles = StyleSheet.create({\r\n    container:{\r\n        alignItems:\"center\",\r\n        alignContent:\"center\"\r\n    }\r\n    })"]},"metadata":{},"sourceType":"module"}