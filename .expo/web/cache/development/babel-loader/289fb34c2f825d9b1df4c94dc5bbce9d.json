{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where } from \"firebase/firestore\";\nimport { app } from \"./Config\";\nvar firestoreDB = getFirestore(app);\n\nfunction addUser(user) {\n  return _regeneratorRuntime.async(function addUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(setDoc(doc(firestoreDB, \"users\", user.id), {\n            user: user\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUsers() {\n  var usersCol, userSnapshot, userList;\n  return _regeneratorRuntime.async(function getUsers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          usersCol = collection(firestoreDB, \"users\");\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(usersCol));\n\n        case 3:\n          userSnapshot = _context2.sent;\n          userList = userSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          console.log(userList);\n          return _context2.abrupt(\"return\", userList);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function getUserById(id) {\n  var usersRef, q, querySnapshot;\n  return _regeneratorRuntime.async(function getUserById$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          usersRef = collection(firestoreDB, \"users\");\n          q = query(usersRef, where(\"id\", \"==\", id));\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(getDocs(q));\n\n        case 4:\n          querySnapshot = _context3.sent;\n          return _context3.abrupt(\"return\", querySnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          }));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction subscribe(callback) {\n  var unsubscribe = onSnapshot(query(collection(db, \"Chats\")), function (snapshot) {\n    var source = snapshot.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n    snapshot.docChanges().forEach(function (change) {\n      if (callback) callback({\n        change: change,\n        snapshot: snapshot\n      });\n    });\n  });\n  return unsubscribe;\n}\n\nexport { getUsers, addUser, subscribe };","map":{"version":3,"names":["addDoc","collection","getDocs","getFirestore","setDoc","doc","query","where","app","firestoreDB","addUser","user","id","getUsers","usersCol","userSnapshot","userList","docs","map","data","console","log","getUserById","usersRef","q","querySnapshot","subscribe","callback","unsubscribe","onSnapshot","db","snapshot","source","metadata","hasPendingWrites","docChanges","forEach","change"],"sources":["C:/Users/Muhamed/Desktop/CS303-Project/db/User.js"],"sourcesContent":["import {addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where} from \"firebase/firestore\";\r\nimport {app} from \"./Config\";\r\n\r\nconst firestoreDB = getFirestore(app);\r\n\r\n\r\nasync function addUser(user) {\r\n     await setDoc(doc(firestoreDB, \"users\",user.id), { user});\r\n}\r\n\r\nasync function getUsers() {\r\n    const usersCol = collection(firestoreDB, \"users\");\r\n    const userSnapshot = await getDocs(usersCol);\r\n    const userList =  userSnapshot.docs.map((doc) => {\r\n        return {id: doc.id, ...doc.data()};\r\n    });\r\n    console.log(userList);\r\n    return userList;\r\n}\r\n\r\nexport async function getUserById(id) {\r\n    const usersRef = collection(firestoreDB, \"users\");\r\n    const q = query(usersRef, where(\"id\", \"==\", id));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((doc) => {\r\n        return {id: doc.id, ...doc.data()};\r\n    });\r\n}\r\n\r\nfunction subscribe(callback) {\r\n    const unsubscribe = onSnapshot(\r\n        query(collection(db, \"Chats\")),\r\n        (snapshot) => {\r\n            const source = snapshot.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n            snapshot.docChanges().forEach((change) => {\r\n                if (callback) callback({ change, snapshot });\r\n            });\r\n        }\r\n    );\r\n    return unsubscribe;\r\n}\r\n\r\nexport {getUsers, addUser,subscribe};"],"mappings":";;;;;;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,YAArC,EAAmDC,MAAnD,EAA2DC,GAA3D,EAAgEC,KAAhE,EAAuEC,KAAvE,QAAmF,oBAAnF;AACA,SAAQC,GAAR;AAEA,IAAMC,WAAW,GAAGN,YAAY,CAACK,GAAD,CAAhC;;AAGA,SAAeE,OAAf,CAAuBC,IAAvB;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACWP,MAAM,CAACC,GAAG,CAACI,WAAD,EAAc,OAAd,EAAsBE,IAAI,CAACC,EAA3B,CAAJ,EAAoC;YAAED,IAAI,EAAJA;UAAF,CAApC,CADjB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAIA,SAAeE,QAAf;EAAA;EAAA;IAAA;MAAA;QAAA;UACUC,QADV,GACqBb,UAAU,CAACQ,WAAD,EAAc,OAAd,CAD/B;UAAA;UAAA,iCAE+BP,OAAO,CAACY,QAAD,CAFtC;;QAAA;UAEUC,YAFV;UAGUC,QAHV,GAGsBD,YAAY,CAACE,IAAb,CAAkBC,GAAlB,CAAsB,UAACb,GAAD,EAAS;YAC7C;cAAQO,EAAE,EAAEP,GAAG,CAACO;YAAhB,GAAuBP,GAAG,CAACc,IAAJ,EAAvB;UACH,CAFiB,CAHtB;UAMIC,OAAO,CAACC,GAAR,CAAYL,QAAZ;UANJ,kCAOWA,QAPX;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAUA,OAAO,SAAeM,WAAf,CAA2BV,EAA3B;EAAA;EAAA;IAAA;MAAA;QAAA;UACGW,QADH,GACctB,UAAU,CAACQ,WAAD,EAAc,OAAd,CADxB;UAEGe,CAFH,GAEOlB,KAAK,CAACiB,QAAD,EAAWhB,KAAK,CAAC,IAAD,EAAO,IAAP,EAAaK,EAAb,CAAhB,CAFZ;UAAA;UAAA,iCAGyBV,OAAO,CAACsB,CAAD,CAHhC;;QAAA;UAGGC,aAHH;UAAA,kCAIIA,aAAa,CAACR,IAAd,CAAmBC,GAAnB,CAAuB,UAACb,GAAD,EAAS;YACnC;cAAQO,EAAE,EAAEP,GAAG,CAACO;YAAhB,GAAuBP,GAAG,CAACc,IAAJ,EAAvB;UACH,CAFM,CAJJ;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AASP,SAASO,SAAT,CAAmBC,QAAnB,EAA6B;EACzB,IAAMC,WAAW,GAAGC,UAAU,CAC1BvB,KAAK,CAACL,UAAU,CAAC6B,EAAD,EAAK,OAAL,CAAX,CADqB,EAE1B,UAACC,QAAD,EAAc;IACV,IAAMC,MAAM,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,gBAAlB,GAAqC,OAArC,GAA+C,QAA9D;IACAH,QAAQ,CAACI,UAAT,GAAsBC,OAAtB,CAA8B,UAACC,MAAD,EAAY;MACtC,IAAIV,QAAJ,EAAcA,QAAQ,CAAC;QAAEU,MAAM,EAANA,MAAF;QAAUN,QAAQ,EAARA;MAAV,CAAD,CAAR;IACjB,CAFD;EAGH,CAPyB,CAA9B;EASA,OAAOH,WAAP;AACH;;AAED,SAAQf,QAAR,EAAkBH,OAAlB,EAA0BgB,SAA1B"},"metadata":{},"sourceType":"module"}