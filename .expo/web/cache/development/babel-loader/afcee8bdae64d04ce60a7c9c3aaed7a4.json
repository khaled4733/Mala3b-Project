{"ast":null,"code":"'use strict';\n\nvar logListeners;\n\nfunction unstable_setLogListeners(listeners) {\n  logListeners = listeners;\n}\n\nvar deepDiffer = function deepDiffer(one, two) {\n  var maxDepthOrOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n  var maybeOptions = arguments.length > 3 ? arguments[3] : undefined;\n  var options = typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  var maxDepth = typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    var unsafelyIgnoreFunctions = options == null ? void 0 : options.unsafelyIgnoreFunctions;\n\n    if (unsafelyIgnoreFunctions == null) {\n      if (logListeners && logListeners.onDifferentFunctionsIgnored && (!options || !('unsafelyIgnoreFunctions' in options))) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n\n      unsafelyIgnoreFunctions = true;\n    }\n\n    return !unsafelyIgnoreFunctions;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = deepDiffer;\nmodule.exports.unstable_setLogListeners = unstable_setLogListeners;","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js"],"names":["logListeners","unstable_setLogListeners","listeners","deepDiffer","one","two","maxDepthOrOptions","maybeOptions","options","maxDepth","unsafelyIgnoreFunctions","onDifferentFunctionsIgnored","name","constructor","Array","isArray","len","length","ii","key","twoKey","undefined","module","exports"],"mappings":"AAUA;;AAEA,IAAIA,YAAJ;;AAQA,SAASC,wBAAT,CAAkCC,SAAlC,EAA4D;AAC1DF,EAAAA,YAAY,GAAGE,SAAf;AACD;;AAKD,IAAMC,UAAU,GAAG,SAAbA,UAAa,CACjBC,GADiB,EAEjBC,GAFiB,EAKR;AAAA,MAFTC,iBAES,uEAF6B,CAAC,CAE9B;AAAA,MADTC,YACS;AACT,MAAMC,OAAO,GACX,OAAOF,iBAAP,KAA6B,QAA7B,GAAwCC,YAAxC,GAAuDD,iBADzD;AAEA,MAAMG,QAAQ,GACZ,OAAOH,iBAAP,KAA6B,QAA7B,GAAwCA,iBAAxC,GAA4D,CAAC,CAD/D;;AAEA,MAAIG,QAAQ,KAAK,CAAjB,EAAoB;AAClB,WAAO,IAAP;AACD;;AACD,MAAIL,GAAG,KAAKC,GAAZ,EAAiB;AAEf,WAAO,KAAP;AACD;;AACD,MAAI,OAAOD,GAAP,KAAe,UAAf,IAA6B,OAAOC,GAAP,KAAe,UAAhD,EAA4D;AAE1D,QAAIK,uBAAuB,GAAGF,OAAH,oBAAGA,OAAO,CAAEE,uBAAvC;;AACA,QAAIA,uBAAuB,IAAI,IAA/B,EAAqC;AACnC,UACEV,YAAY,IACZA,YAAY,CAACW,2BADb,KAEC,CAACH,OAAD,IAAY,EAAE,6BAA6BA,OAA/B,CAFb,CADF,EAIE;AACAR,QAAAA,YAAY,CAACW,2BAAb,CAAyCP,GAAG,CAACQ,IAA7C,EAAmDP,GAAG,CAACO,IAAvD;AACD;;AACDF,MAAAA,uBAAuB,GAAG,IAA1B;AACD;;AACD,WAAO,CAACA,uBAAR;AACD;;AACD,MAAI,OAAON,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAE3C,WAAOA,GAAG,KAAKC,GAAf;AACD;;AACD,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAG3C,WAAO,IAAP;AACD;;AACD,MAAID,GAAG,CAACS,WAAJ,KAAoBR,GAAG,CAACQ,WAA5B,EAAyC;AACvC,WAAO,IAAP;AACD;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcX,GAAd,CAAJ,EAAwB;AAEtB,QAAMY,GAAG,GAAGZ,GAAG,CAACa,MAAhB;;AACA,QAAIZ,GAAG,CAACY,MAAJ,KAAeD,GAAnB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,SAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,GAAtB,EAA2BE,EAAE,EAA7B,EAAiC;AAC/B,UAAIf,UAAU,CAACC,GAAG,CAACc,EAAD,CAAJ,EAAUb,GAAG,CAACa,EAAD,CAAb,EAAmBT,QAAQ,GAAG,CAA9B,EAAiCD,OAAjC,CAAd,EAAyD;AACvD,eAAO,IAAP;AACD;AACF;AACF,GAXD,MAWO;AACL,SAAK,IAAMW,GAAX,IAAkBf,GAAlB,EAAuB;AACrB,UAAID,UAAU,CAACC,GAAG,CAACe,GAAD,CAAJ,EAAWd,GAAG,CAACc,GAAD,CAAd,EAAqBV,QAAQ,GAAG,CAAhC,EAAmCD,OAAnC,CAAd,EAA2D;AACzD,eAAO,IAAP;AACD;AACF;;AACD,SAAK,IAAMY,MAAX,IAAqBf,GAArB,EAA0B;AAGxB,UAAID,GAAG,CAACgB,MAAD,CAAH,KAAgBC,SAAhB,IAA6BhB,GAAG,CAACe,MAAD,CAAH,KAAgBC,SAAjD,EAA4D;AAC1D,eAAO,IAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAtED;;AAwEAC,MAAM,CAACC,OAAP,GAAiBpB,UAAjB;AACAmB,MAAM,CAACC,OAAP,CAAetB,wBAAf,GAA0CA,wBAA1C","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nlet logListeners;\r\n\r\ntype LogListeners = {|\r\n  +onDifferentFunctionsIgnored: (nameOne: ?string, nameTwo: ?string) => void,\r\n|};\r\n\r\ntype Options = {|+unsafelyIgnoreFunctions?: boolean|};\r\n\r\nfunction unstable_setLogListeners(listeners: ?LogListeners) {\r\n  logListeners = listeners;\r\n}\r\n\r\n/*\r\n * @returns {bool} true if different, false if equal\r\n */\r\nconst deepDiffer = function(\r\n  one: any,\r\n  two: any,\r\n  maxDepthOrOptions: Options | number = -1,\r\n  maybeOptions?: Options,\r\n): boolean {\r\n  const options =\r\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\r\n  const maxDepth =\r\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\r\n  if (maxDepth === 0) {\r\n    return true;\r\n  }\r\n  if (one === two) {\r\n    // Short circuit on identical object references instead of traversing them.\r\n    return false;\r\n  }\r\n  if (typeof one === 'function' && typeof two === 'function') {\r\n    // We consider all functions equal unless explicitly configured otherwise\r\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\r\n    if (unsafelyIgnoreFunctions == null) {\r\n      if (\r\n        logListeners &&\r\n        logListeners.onDifferentFunctionsIgnored &&\r\n        (!options || !('unsafelyIgnoreFunctions' in options))\r\n      ) {\r\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\r\n      }\r\n      unsafelyIgnoreFunctions = true;\r\n    }\r\n    return !unsafelyIgnoreFunctions;\r\n  }\r\n  if (typeof one !== 'object' || one === null) {\r\n    // Primitives can be directly compared\r\n    return one !== two;\r\n  }\r\n  if (typeof two !== 'object' || two === null) {\r\n    // We know they are different because the previous case would have triggered\r\n    // otherwise.\r\n    return true;\r\n  }\r\n  if (one.constructor !== two.constructor) {\r\n    return true;\r\n  }\r\n  if (Array.isArray(one)) {\r\n    // We know two is also an array because the constructors are equal\r\n    const len = one.length;\r\n    if (two.length !== len) {\r\n      return true;\r\n    }\r\n    for (let ii = 0; ii < len; ii++) {\r\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\r\n        return true;\r\n      }\r\n    }\r\n  } else {\r\n    for (const key in one) {\r\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\r\n        return true;\r\n      }\r\n    }\r\n    for (const twoKey in two) {\r\n      // The only case we haven't checked yet is keys that are in two but aren't\r\n      // in one, which means they are different.\r\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nmodule.exports = deepDiffer;\r\nmodule.exports.unstable_setLogListeners = unstable_setLogListeners;\r\n"]},"metadata":{},"sourceType":"script"}