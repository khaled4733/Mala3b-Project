{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { app, db } from \"./Config\";\nimport { deleteStadium } from \"./Stadium/Football\";\nvar firestoreDB = getFirestore(app);\n\nfunction addUser(user) {\n  return _regeneratorRuntime.async(function addUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(setDoc(doc(firestoreDB, \"users\", user.id), {\n            user: user\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUsers() {\n  var usersCol, userSnapshot, userList;\n  return _regeneratorRuntime.async(function getUsers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          usersCol = collection(firestoreDB, \"users\");\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(usersCol));\n\n        case 3:\n          userSnapshot = _context2.sent;\n          userList = userSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          console.log(userList);\n          return _context2.abrupt(\"return\", userList);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserById(id) {\n  var usersRef, q, querySnapshot;\n  return _regeneratorRuntime.async(function getUserById$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          usersRef = collection(firestoreDB, \"users\");\n          q = query(usersRef, where(\"id\", \"==\", id));\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(getDocs(q));\n\n        case 4:\n          querySnapshot = _context3.sent;\n          return _context3.abrupt(\"return\", querySnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          }));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction updateAvailable(docId, tempDoc) {\n  var docRef;\n  return _regeneratorRuntime.async(function updateAvailable$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          console.log(tempDoc.date);\n          docRef = doc(db, \"football\", docId);\n          console.log(\"entered updateFAvailable()\");\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(deleteStadium(docId));\n\n        case 6:\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(setDoc(docRef, {\n            available: false,\n            date: tempDoc.date,\n            id: tempDoc.id,\n            name: tempDoc.name,\n            pic: tempDoc.pic,\n            price: tempDoc.price\n          }).then(console.log('available updated!')));\n\n        case 8:\n          _context4.next = 13;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\n\nfunction addUsersToDocuments() {\n  return _regeneratorRuntime.async(function addUsersToDocuments$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { getUsers, addUser, updateAvailable };","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS303-Project/db/User.js"],"names":["addDoc","collection","getDocs","getFirestore","setDoc","doc","query","where","updateDoc","deleteDoc","app","db","deleteStadium","firestoreDB","addUser","user","id","getUsers","usersCol","userSnapshot","userList","docs","map","data","console","log","getUserById","usersRef","q","querySnapshot","updateAvailable","docId","tempDoc","date","docRef","available","name","pic","price","then","error","addUsersToDocuments"],"mappings":"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","sourcesContent":["import {\r\n    addDoc,\r\n    collection,\r\n    getDocs,\r\n    getFirestore,\r\n    setDoc,\r\n    doc,\r\n    query,\r\n    where,\r\n    updateDoc,\r\n    deleteDoc\r\n} from \"firebase/firestore\";\r\nimport {app, db} from \"./Config\";\r\nimport {deleteStadium} from \"./Stadium/Football\";\r\n\r\nconst firestoreDB = getFirestore(app);\r\n\r\n\r\nasync function addUser(user) {\r\n     await setDoc(doc(firestoreDB, \"users\",user.id), { user});\r\n}\r\n\r\nasync function getUsers() {\r\n    const usersCol = collection(firestoreDB, \"users\");\r\n    const userSnapshot = await getDocs(usersCol);\r\n    const userList =  userSnapshot.docs.map((doc) => {\r\n        return {id: doc.id, ...doc.data()};\r\n    });\r\n    console.log(userList);\r\n    return userList;\r\n}\r\n\r\n async function getUserById(id) {\r\n    const usersRef = collection(firestoreDB, \"users\");\r\n    const q = query(usersRef, where(\"id\", \"==\", id));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((doc) => {\r\n        return {id: doc.id, ...doc.data()};\r\n    });\r\n}\r\n//                    F-> for \"football\"\r\n async function updateAvailable(docId, tempDoc) {\r\n     try {\r\n         console.log(tempDoc.date);\r\n         const docRef = doc(db, \"football\", docId);\r\n         console.log(\"entered updateFAvailable()\")\r\n         // await deleteDoc(doc(db, \"football\", docId)); //not working\r\n\r\n         /*Delete Doc Herre*/\r\n          await deleteStadium(docId); //not working, delete from db !!!!\r\n\r\n         //add new stadium with \"available: false\"\r\n         await setDoc(docRef, {\r\n             available: false,\r\n             date: tempDoc.date,\r\n             id: tempDoc.id,\r\n             name: tempDoc.name,\r\n             pic: tempDoc.pic,\r\n             price: tempDoc.price\r\n         }).then(console.log('available updated!'))\r\n     } catch (e) {\r\n         console.error(e);\r\n     }\r\n }\r\n\r\nasync function addUsersToDocuments(){\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n// function subscribe(callback) {\r\n//     const unsubscribe = onSnapshot(\r\n//         query(collection(db, \"Chats\")),\r\n//         (snapshot) => {\r\n//             const source = snapshot.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n//             snapshot.docChanges().forEach((change) => {\r\n//                 if (callback) callback({ change, snapshot });\r\n//             });\r\n//         }\r\n//     );\r\n//     return unsubscribe;\r\n// }\r\n\r\nexport {getUsers, addUser,updateAvailable};"]},"metadata":{},"sourceType":"module"}