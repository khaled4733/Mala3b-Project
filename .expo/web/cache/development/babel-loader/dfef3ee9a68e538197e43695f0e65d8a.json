{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _Symbol$iterator;\n\nvar Blob = require(\"./Blob\");\n\nimport NativeBlobModule from \"./NativeBlobModule\";\nvar BLOB_URL_PREFIX = null;\n\nif (NativeBlobModule && typeof NativeBlobModule.getConstants().BLOB_URI_SCHEME === 'string') {\n  var constants = NativeBlobModule.getConstants();\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n\n  if (typeof constants.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += \"//\" + constants.BLOB_URI_HOST + \"/\";\n  }\n}\n\n_Symbol$iterator = Symbol.iterator;\nexport var URLSearchParams = function () {\n  function URLSearchParams(params) {\n    var _this = this;\n\n    _classCallCheck(this, URLSearchParams);\n\n    this._searchParams = [];\n\n    if (typeof params === 'object') {\n      Object.keys(params).forEach(function (key) {\n        return _this.append(key, params[key]);\n      });\n    }\n  }\n\n  _createClass(URLSearchParams, [{\n    key: \"append\",\n    value: function append(key, value) {\n      this._searchParams.push([key, value]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this._searchParams[Symbol.iterator]();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this._searchParams.length === 0) {\n        return '';\n      }\n\n      var last = this._searchParams.length - 1;\n      return this._searchParams.reduce(function (acc, curr, index) {\n        return acc + curr.join('=') + (index === last ? '' : '&');\n      }, '');\n    }\n  }]);\n\n  return URLSearchParams;\n}();\n\nfunction validateBaseUrl(url) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/.test(url);\n}\n\nexport var URL = function () {\n  function URL(url, base) {\n    _classCallCheck(this, URL);\n\n    this._searchParamsInstance = null;\n    var baseUrl = null;\n\n    if (!base || validateBaseUrl(url)) {\n      this._url = url;\n\n      if (!this._url.endsWith('/')) {\n        this._url += '/';\n      }\n    } else {\n      if (typeof base === 'string') {\n        baseUrl = base;\n\n        if (!validateBaseUrl(baseUrl)) {\n          throw new TypeError(\"Invalid base URL: \" + baseUrl);\n        }\n      } else if (typeof base === 'object') {\n        baseUrl = base.toString();\n      }\n\n      if (baseUrl.endsWith('/')) {\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n      }\n\n      if (!url.startsWith('/')) {\n        url = \"/\" + url;\n      }\n\n      if (baseUrl.endsWith(url)) {\n        url = '';\n      }\n\n      this._url = \"\" + baseUrl + url;\n    }\n  }\n\n  _createClass(URL, [{\n    key: \"hash\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"href\",\n    get: function get() {\n      return this.toString();\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"searchParams\",\n    get: function get() {\n      if (this._searchParamsInstance == null) {\n        this._searchParamsInstance = new URLSearchParams();\n      }\n\n      return this._searchParamsInstance;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this._searchParamsInstance === null) {\n        return this._url;\n      }\n\n      var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n      return this._url + separator + this._searchParamsInstance.toString();\n    }\n  }, {\n    key: \"username\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }], [{\n    key: \"createObjectURL\",\n    value: function createObjectURL(blob) {\n      if (BLOB_URL_PREFIX === null) {\n        throw new Error('Cannot create URL for blob!');\n      }\n\n      return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n    }\n  }, {\n    key: \"revokeObjectURL\",\n    value: function revokeObjectURL(url) {}\n  }]);\n\n  return URL;\n}();","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Blob/URL.js"],"names":["Blob","require","NativeBlobModule","BLOB_URL_PREFIX","getConstants","BLOB_URI_SCHEME","constants","BLOB_URI_HOST","Symbol","iterator","URLSearchParams","params","_searchParams","Object","keys","forEach","key","append","value","push","name","Error","length","last","reduce","acc","curr","index","join","validateBaseUrl","url","test","URL","base","_searchParamsInstance","baseUrl","_url","endsWith","TypeError","toString","slice","startsWith","separator","indexOf","blob","data","blobId","offset","size"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nconst Blob = require('./Blob');\r\n\r\nimport NativeBlobModule from './NativeBlobModule';\r\n\r\nlet BLOB_URL_PREFIX = null;\r\n\r\nif (\r\n  NativeBlobModule &&\r\n  typeof NativeBlobModule.getConstants().BLOB_URI_SCHEME === 'string'\r\n) {\r\n  const constants = NativeBlobModule.getConstants();\r\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\r\n  if (typeof constants.BLOB_URI_HOST === 'string') {\r\n    BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;\r\n  }\r\n}\r\n\r\n/**\r\n * To allow Blobs be accessed via `content://` URIs,\r\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\r\n *\r\n * ```xml\r\n * <manifest>\r\n *   <application>\r\n *     <provider\r\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\r\n *       android:authorities=\"@string/blob_provider_authority\"\r\n *       android:exported=\"false\"\r\n *     />\r\n *   </application>\r\n * </manifest>\r\n * ```\r\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\r\n * Use a dotted name that's entirely unique to your app:\r\n *\r\n * ```xml\r\n * <resources>\r\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\r\n * </resources>\r\n * ```\r\n */\r\n\r\n// Small subset from whatwg-url: https://github.com/jsdom/whatwg-url/tree/master/lib\r\n// The reference code bloat comes from Unicode issues with URLs, so those won't work here.\r\nexport class URLSearchParams {\r\n  _searchParams = [];\r\n\r\n  constructor(params: any) {\r\n    if (typeof params === 'object') {\r\n      Object.keys(params).forEach(key => this.append(key, params[key]));\r\n    }\r\n  }\r\n\r\n  append(key: string, value: string) {\r\n    this._searchParams.push([key, value]);\r\n  }\r\n\r\n  delete(name) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get(name) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  getAll(name) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  has(name) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  set(name, value) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  sort() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  [Symbol.iterator]() {\r\n    return this._searchParams[Symbol.iterator]();\r\n  }\r\n\r\n  toString() {\r\n    if (this._searchParams.length === 0) {\r\n      return '';\r\n    }\r\n    const last = this._searchParams.length - 1;\r\n    return this._searchParams.reduce((acc, curr, index) => {\r\n      return acc + curr.join('=') + (index === last ? '' : '&');\r\n    }, '');\r\n  }\r\n}\r\n\r\nfunction validateBaseUrl(url: string) {\r\n  // from this MIT-licensed gist: https://gist.github.com/dperini/729294\r\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/.test(\r\n    url,\r\n  );\r\n}\r\n\r\nexport class URL {\r\n  _searchParamsInstance = null;\r\n\r\n  static createObjectURL(blob: Blob) {\r\n    if (BLOB_URL_PREFIX === null) {\r\n      throw new Error('Cannot create URL for blob!');\r\n    }\r\n    return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\r\n  }\r\n\r\n  static revokeObjectURL(url: string) {\r\n    // Do nothing.\r\n  }\r\n\r\n  constructor(url: string, base: string) {\r\n    let baseUrl = null;\r\n    if (!base || validateBaseUrl(url)) {\r\n      this._url = url;\r\n      if (!this._url.endsWith('/')) {\r\n        this._url += '/';\r\n      }\r\n    } else {\r\n      if (typeof base === 'string') {\r\n        baseUrl = base;\r\n        if (!validateBaseUrl(baseUrl)) {\r\n          throw new TypeError(`Invalid base URL: ${baseUrl}`);\r\n        }\r\n      } else if (typeof base === 'object') {\r\n        baseUrl = base.toString();\r\n      }\r\n      if (baseUrl.endsWith('/')) {\r\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\r\n      }\r\n      if (!url.startsWith('/')) {\r\n        url = `/${url}`;\r\n      }\r\n      if (baseUrl.endsWith(url)) {\r\n        url = '';\r\n      }\r\n      this._url = `${baseUrl}${url}`;\r\n    }\r\n  }\r\n\r\n  get hash() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get host() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get hostname() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get href(): string {\r\n    return this.toString();\r\n  }\r\n\r\n  get origin() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get password() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get pathname() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get port() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get protocol() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get search() {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  get searchParams(): URLSearchParams {\r\n    if (this._searchParamsInstance == null) {\r\n      this._searchParamsInstance = new URLSearchParams();\r\n    }\r\n    return this._searchParamsInstance;\r\n  }\r\n\r\n  toJSON(): string {\r\n    return this.toString();\r\n  }\r\n\r\n  toString(): string {\r\n    if (this._searchParamsInstance === null) {\r\n      return this._url;\r\n    }\r\n    const separator = this._url.indexOf('?') > -1 ? '&' : '?';\r\n    return this._url + separator + this._searchParamsInstance.toString();\r\n  }\r\n\r\n  get username() {\r\n    throw new Error('not implemented');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}