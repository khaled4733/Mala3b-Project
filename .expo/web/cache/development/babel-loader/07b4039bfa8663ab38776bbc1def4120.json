{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState } from \"react\";\nimport { updateUser, deleteUser } from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserEdit = function UserEdit(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setid = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      balance = _useState4[0],\n      setBalance = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      idu = _useState6[0],\n      setidu = _useState6[1];\n\n  function updatebalance() {\n    var user = {\n      balance: '',\n      id: ''\n    };\n    updateUser(id, user.balance).then(alert(\"done!\"));\n    setid('');\n    setBalance('');\n  }\n\n  function deleteuser() {\n    deleteUser(idu).then(alert(\"done!\"));\n    setidu('');\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.addView,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Update user's balance\"\n        }), _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.textinput,\n            placeholder: \"id\",\n            value: id,\n            onChangeText: function onChangeText(text) {\n              return setid(text);\n            },\n            keyboardType: \"default\",\n            placeholderTextColor: '#f2e9e4'\n          }), _jsx(TextInput, {\n            style: styles.textinput,\n            placeholder: \"balance\",\n            value: balance,\n            onChangeText: function onChangeText(text) {\n              return setBalance(text);\n            },\n            keyboardType: \"default\",\n            placeholderTextColor: '#f2e9e4'\n          })]\n        }), _jsx(View, {\n          style: styles.format,\n          children: _jsx(TouchableOpacity, {\n            style: styles.buttonstyle,\n            onPress: function onPress() {\n              return updatebalance();\n            },\n            children: _jsx(Text, {\n              style: styles.buttontext,\n              children: \"Update\"\n            })\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.line\n      }), _jsxs(View, {\n        style: styles.addView,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"delete User\"\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.textinput,\n            placeholder: \"enter id\",\n            value: idu,\n            onChangeText: function onChangeText(text) {\n              return setidu(text);\n            },\n            keyboardType: \"default\",\n            placeholderTextColor: '#f2e9e4'\n          })\n        }), _jsx(View, {\n          style: styles.format,\n          children: _jsx(TouchableOpacity, {\n            style: styles.buttonstyle,\n            onPress: deleteuser,\n            children: _jsx(Text, {\n              style: styles.buttontext,\n              children: \"Delete\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default UserEdit;\nvar cardwidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f2e9e4\",\n    alignItems: 'center'\n  },\n  addView: {\n    backgroundColor: '#22223b',\n    borderRadius: 20,\n    width: cardwidth - 100,\n    height: 500,\n    paddingHorizontal: 25,\n    marginVertical: 15,\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: .25,\n    shadowRadius: 3\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    paddingBottom: 10,\n    color: '#f2e9e4'\n  },\n  buttonstyle: {\n    backgroundColor: \"#f2e9e4\",\n    width: \"50%\",\n    height: 40,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttontext: {\n    color: \"#22223b\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  textinput: {\n    height: 40,\n    color: \"#f2e9e4\",\n    borderBottomColor: \"#f2e9e4\",\n    borderBottomWidth: 4\n  },\n  format: {\n    marginVertical: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  line: {\n    width: \"100%\",\n    backgroundColor: \"#022b3a\",\n    height: 1\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (3)/CS303-Project-3/Pages/AdminArea/UserEdit.jsx"],"names":["React","useState","updateUser","deleteUser","UserEdit","navigation","id","setid","balance","setBalance","idu","setidu","updatebalance","user","then","alert","deleteuser","styles","container","addView","title","textinput","text","format","buttonstyle","buttontext","line","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","borderRadius","height","paddingHorizontal","marginVertical","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","fontWeight","paddingBottom","color","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import {\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    ScrollView,\r\n    Dimensions\r\n} from \"react-native\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { updateUser, deleteUser } from \"../../db/User\";\r\n\r\nconst UserEdit = ({ navigation }) => {\r\n    const [id, setid] = useState(\"\");\r\n    const [balance, setBalance] = useState(\"\");\r\n\r\n    const [idu, setidu] = useState(\"\");\r\n\r\n    // const [error, setError] = useState(\"\");\r\n\r\n    function updatebalance() {\r\n        var user = {\r\n            balance: '',\r\n            id: ''\r\n        };\r\n\r\n        updateUser(id , user.balance).then(alert(\"done!\"));\r\n        setid('');\r\n        setBalance('');\r\n    }\r\n\r\n    function deleteuser() {\r\n        deleteUser(idu).then(alert(\"done!\"));\r\n        setidu('');\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.addView}>\r\n                    <Text style={styles.title}>Update user's balance</Text>\r\n\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.textinput}\r\n                            placeholder=\"id\"\r\n                            value={id}\r\n                            onChangeText={(text) => setid(text)}\r\n                            keyboardType=\"default\"\r\n                            placeholderTextColor={'#f2e9e4'}\r\n                        />\r\n\r\n                        <TextInput\r\n                            style={styles.textinput}\r\n                            placeholder=\"balance\"\r\n                            value={balance}\r\n                            onChangeText={(text) => setBalance(text)}\r\n                            keyboardType=\"default\"\r\n                            placeholderTextColor={'#f2e9e4'}\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={styles.format}>\r\n                        <TouchableOpacity\r\n                            style={styles.buttonstyle}\r\n                            onPress={() => updatebalance()}\r\n                        >\r\n                            <Text style={styles.buttontext}>Update</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n\r\n                <View style={styles.line}></View>\r\n\r\n                <View style={styles.addView}>\r\n                    <Text style={styles.title}>delete User</Text>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.textinput}\r\n                            placeholder=\"enter id\"\r\n                            value={idu}\r\n                            onChangeText={(text) => setidu(text)}\r\n                            keyboardType=\"default\"\r\n                            placeholderTextColor={'#f2e9e4'}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.format}>\r\n                        <TouchableOpacity\r\n                            style={styles.buttonstyle}\r\n                            onPress={deleteuser}\r\n                        >\r\n\r\n                            <Text style={styles.buttontext}>Delete</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\nexport default UserEdit;\r\n\r\nconst cardwidth = Math.round(Dimensions.get('window').width)\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#f2e9e4\",\r\n        alignItems: 'center'\r\n    },\r\n    addView: {\r\n        backgroundColor: '#22223b',\r\n        borderRadius: 20,\r\n        width: cardwidth - 100,\r\n        height: 500,\r\n        paddingHorizontal: 25,\r\n        marginVertical: 15,\r\n        justifyContent: 'center',\r\n        shadowColor: '#000000',\r\n        shadowOffset: {\r\n            width: 5,\r\n            height: 5\r\n        },\r\n        shadowOpacity: .25,\r\n        shadowRadius: 3\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: \"bold\",\r\n        paddingBottom: 10,\r\n        color: '#f2e9e4'\r\n    },\r\n    buttonstyle: {\r\n        backgroundColor: \"#f2e9e4\",\r\n        width: \"50%\",\r\n        height: 40,\r\n        borderRadius: 10,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    buttontext: {\r\n        color: \"#22223b\",\r\n        fontWeight: \"700\",\r\n        fontSize: 16,\r\n    },\r\n    textinput: {\r\n        height: 40,\r\n        color: \"#f2e9e4\",\r\n        borderBottomColor: \"#f2e9e4\",\r\n        borderBottomWidth: 4,\r\n    },\r\n    format: {\r\n        marginVertical: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        backgroundColor: \"#022b3a\",\r\n        height: 1,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}