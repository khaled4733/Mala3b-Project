{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Platform from \"../Utilities/Platform\";\nimport EventEmitter from \"../vendor/emitter/EventEmitter\";\nimport RCTDeviceEventEmitter from \"./RCTDeviceEventEmitter\";\nimport invariant from 'invariant';\nvar DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS = {\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: false\n};\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(NativeEventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS;\n\n    _classCallCheck(this, NativeEventEmitter);\n\n    _this = _super.call(this, RCTDeviceEventEmitter.sharedSubscriber);\n    _this._disableCallsIntoModule = options.__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  _createClass(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.addListener(eventType);\n      }\n\n      return _get(_getPrototypeOf(NativeEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      invariant(eventType, 'eventType argument is required.');\n      var count = this.listenerCount(eventType);\n\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.removeListeners(count);\n      }\n\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.removeListeners(1);\n      }\n\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n    }\n  }]);\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport { NativeEventEmitter as default };","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"names":["Platform","EventEmitter","RCTDeviceEventEmitter","invariant","DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS","__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","NativeEventEmitter","nativeModule","options","sharedSubscriber","_disableCallsIntoModule","OS","_nativeModule","eventType","listener","context","addListener","count","listenerCount","removeListeners","subscription"],"mappings":"AAUA;;;;;;;;;;;;;AAEA,OAAOA,QAAP;AACA,OAAOC,YAAP;AAEA,OAAOC,qBAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAYA,IAAMC,oCAAoC,GAAG;AAC3CC,EAAAA,kEAAkE,EAAE;AADzB,CAA7C;;IAQqBC,kB;;;;;AAInB,8BACEC,YADF,EAGE;AAAA;;AAAA,QADAC,OACA,uEADqCJ,oCACrC;;AAAA;;AACA,8BAAMF,qBAAqB,CAACO,gBAA5B;AACA,UAAKC,uBAAL,GACEF,OAAO,CAACH,kEADV;;AAEA,QAAIL,QAAQ,CAACW,EAAT,KAAgB,KAApB,EAA2B;AACzBR,MAAAA,SAAS,CAACI,YAAD,EAAe,+BAAf,CAAT;AACA,YAAKK,aAAL,GAAqBL,YAArB;AACD;;AAPD;AAQD;;;;WAED,qBACEM,SADF,EAEEC,QAFF,EAGEC,OAHF,EAIqB;AACnB,UAAI,KAAKH,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKF,uBAAxC,EAAiE;AAC/D,aAAKE,aAAL,CAAmBI,WAAnB,CAA+BH,SAA/B;AACD;;AACD,iGAAyBA,SAAzB,EAAoCC,QAApC,EAA8CC,OAA9C;AACD;;;WAED,4BAAmBF,SAAnB,EAAsC;AACpCV,MAAAA,SAAS,CAACU,SAAD,EAAY,iCAAZ,CAAT;AACA,UAAMI,KAAK,GAAG,KAAKC,aAAL,CAAmBL,SAAnB,CAAd;;AACA,UAAI,KAAKD,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKF,uBAAxC,EAAiE;AAC/D,aAAKE,aAAL,CAAmBO,eAAnB,CAAmCF,KAAnC;AACD;;AACD,iGAAyBJ,SAAzB;AACD;;;WAED,4BAAmBO,YAAnB,EAAoD;AAClD,UAAI,KAAKR,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKF,uBAAxC,EAAiE;AAC/D,aAAKE,aAAL,CAAmBO,eAAnB,CAAmC,CAAnC;AACD;;AACD,iGAAyBC,YAAzB;AACD;;;;EA1C6CnB,Y;;SAA3BK,kB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nimport Platform from '../Utilities/Platform';\r\nimport EventEmitter from '../vendor/emitter/EventEmitter';\r\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\r\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\r\nimport invariant from 'invariant';\r\n\r\ntype NativeModule = {\r\n  +addListener: (eventType: string) => void,\r\n  +removeListeners: (count: number) => void,\r\n  ...\r\n};\r\n\r\ntype NativeEventEmitterOptions = $ReadOnly<{|\r\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: boolean,\r\n|}>;\r\n\r\nconst DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS = {\r\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: false,\r\n};\r\n\r\n/**\r\n * Abstract base class for implementing event-emitting modules. This implements\r\n * a subset of the standard EventEmitter node module API.\r\n */\r\nexport default class NativeEventEmitter extends EventEmitter {\r\n  _nativeModule: ?NativeModule;\r\n  _disableCallsIntoModule: boolean;\r\n\r\n  constructor(\r\n    nativeModule: ?NativeModule,\r\n    options: NativeEventEmitterOptions = DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS,\r\n  ) {\r\n    super(RCTDeviceEventEmitter.sharedSubscriber);\r\n    this._disableCallsIntoModule =\r\n      options.__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n    if (Platform.OS === 'ios') {\r\n      invariant(nativeModule, 'Native module cannot be null.');\r\n      this._nativeModule = nativeModule;\r\n    }\r\n  }\r\n\r\n  addListener(\r\n    eventType: string,\r\n    listener: Function,\r\n    context: ?Object,\r\n  ): EventSubscription {\r\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\r\n      this._nativeModule.addListener(eventType);\r\n    }\r\n    return super.addListener(eventType, listener, context);\r\n  }\r\n\r\n  removeAllListeners(eventType: string) {\r\n    invariant(eventType, 'eventType argument is required.');\r\n    const count = this.listenerCount(eventType);\r\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\r\n      this._nativeModule.removeListeners(count);\r\n    }\r\n    super.removeAllListeners(eventType);\r\n  }\r\n\r\n  removeSubscription(subscription: EventSubscription) {\r\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\r\n      this._nativeModule.removeListeners(1);\r\n    }\r\n    super.removeSubscription(subscription);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}