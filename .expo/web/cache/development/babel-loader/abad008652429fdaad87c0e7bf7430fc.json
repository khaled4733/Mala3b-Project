{"ast":null,"code":"'use strict';\n\nvar logError = function logError() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1 && args[0] instanceof Error) {\n    var err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\nmodule.exports = logError;","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/node_modules/react-native/Libraries/Utilities/logError.js"],"names":["logError","args","length","Error","err","console","error","message","stack","apply","module","exports"],"mappings":"AAUA;;AAOA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAyC;AAAA,oCAA7BC,IAA6B;AAA7BA,IAAAA,IAA6B;AAAA;;AACxD,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBD,IAAI,CAAC,CAAD,CAAJ,YAAmBE,KAA5C,EAAmD;AACjD,QAAMC,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAhB;AACAI,IAAAA,OAAO,CAACC,KAAR,CAAc,aAAaF,GAAG,CAACG,OAAjB,GAA2B,cAA3B,GAA4CH,GAAG,CAACI,KAA9D;AACD,GAHD,MAGO;AACLH,IAAAA,OAAO,CAACC,KAAR,CAAcG,KAAd,CAAoBJ,OAApB,EAA6BJ,IAA7B;AACD;AACF,CAPD;;AASAS,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Small utility that can be used as an error handler. You cannot just pass\r\n * `console.error` as a failure callback - it's not properly bound.  If passes an\r\n * `Error` object, it will print the message and stack.\r\n */\r\nconst logError = function(...args: $ReadOnlyArray<mixed>) {\r\n  if (args.length === 1 && args[0] instanceof Error) {\r\n    const err = args[0];\r\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\r\n  } else {\r\n    console.error.apply(console, args);\r\n  }\r\n};\r\n\r\nmodule.exports = logError;\r\n"]},"metadata":{},"sourceType":"script"}