{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { register, getUserUId, login } from \"../../db/Auth\";\nimport Logo from \"../../assets/2511582.jpg\";\nimport { addUser } from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullname = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gender = _useState8[0],\n      setGender = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setpassword = _useState10[1];\n\n  var role = 0;\n  var balance = 0;\n  var piclink = \"\";\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var handleRegister = function handleRegister() {\n    console.log(fullname, email, password);\n    register(email, password).then(function () {\n      login(email, password).then(function () {\n        console.log(\"login completed\");\n        getUserUId().then(function (id) {\n          return addUser({\n            id: id,\n            fullname: fullname,\n            email: email,\n            password: password,\n            phone: phone,\n            gender: gender,\n            balance: balance,\n            role: role,\n            piclink: piclink\n          });\n        });\n      });\n    }).catch(function (e) {\n      return setError(e.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.mainview,\n    children: _jsxs(View, {\n      style: styles.registerView,\n      children: [_jsx(View, {\n        style: styles.screen,\n        children: _jsx(Image, {\n          source: Logo,\n          style: styles.image\n        })\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"Let\\u2019s get started!\"\n      }), _jsxs(View, {\n        style: styles.format,\n        children: [_jsx(TextInput, {\n          style: styles.textinput,\n          onChangeText: setFullName,\n          keyboardType: \"default\",\n          placeholder: \"Full Name\",\n          placeholderTextColor: \"#f2e9e4\"\n        }), _jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"example@email.com\",\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          placeholderTextColor: \"#f2e9e4\"\n        }), _jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"01*********\",\n          onChangeText: setPhone,\n          keyboardType: \"numeric\",\n          placeholderTextColor: \"#f2e9e4\"\n        }), _jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"Male/Female\",\n          onChangeText: setGender,\n          keyboardType: \"default\",\n          placeholderTextColor: \"#f2e9e4\"\n        }), _jsx(TextInput, {\n          style: styles.textinput,\n          onChangeText: setpassword,\n          secureTextEntry: true,\n          placeholder: \"password\",\n          placeholderTextColor: \"#f2e9e4\"\n        })]\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.buttonstyle,\n          onPress: handleRegister,\n          children: _jsx(Text, {\n            style: styles.buttontext,\n            children: \"Register\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"SignIn\");\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 15,\n            color: \"#f2e9e4\"\n          },\n          children: \"Already have an account?\"\n        })\n      })]\n    })\n  });\n};\n\nexport default Register;\nvar cardwidth = Math.round(Dimensions.get(\"window\").width);\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    backgroundColor: \"#f2e9e4\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  registerView: {\n    backgroundColor: \"#22223b\",\n    borderRadius: 20,\n    width: cardwidth - 100,\n    height: 500,\n    paddingHorizontal: 25,\n    justifyContent: \"center\",\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  screen: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 20\n  },\n  text: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 25,\n    paddingBottom: 20,\n    color: \"#f2e9e4\"\n  },\n  textinput: {\n    height: 40,\n    color: \"#f2e9e4\",\n    borderBottomColor: \"#f2e9e4\",\n    borderBottomWidth: 4\n  },\n  format: {\n    paddingBottom: 20\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  buttonstyle: {\n    backgroundColor: \"#f2e9e4\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 5,\n    alignItems: \"center\"\n  },\n  buttontextstyle: {\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  buttontext: {\n    color: \"#22223b\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  errorText: {\n    color: \"#22223b\"\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/New folder (3)/CS303-Project-3/Components/Users/Register.jsx"],"names":["React","useState","register","getUserUId","login","Logo","addUser","Register","navigation","fullname","setFullName","email","setEmail","phone","setPhone","gender","setGender","password","setpassword","role","balance","piclink","error","setError","handleRegister","console","log","then","id","catch","e","message","styles","mainview","registerView","screen","image","text","format","textinput","buttonstyle","buttontext","errorText","navigate","fontSize","color","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","height","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","row","flexDirection","paddingBottom","textAlign","fontWeight","borderBottomColor","borderBottomWidth","padding","buttontextstyle"],"mappings":"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","sourcesContent":["import {\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Image,\r\n} from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { register, getUserUId, login } from \"../../db/Auth\";\r\nimport Logo from \"../../assets/2511582.jpg\";\r\nimport { addUser } from \"../../db/User\";\r\n\r\nconst Register = ({ navigation }) => {\r\n  const [fullname, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const role = 0;\r\n  const balance = 0;\r\n  const piclink = \"\";\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleRegister = () => {\r\n    console.log(fullname, email, password);\r\n    register(email, password)\r\n      .then(() => {\r\n        login(email, password).then(() => {\r\n          console.log(\"login completed\");\r\n          getUserUId().then((id) =>\r\n            addUser({\r\n              id: id,\r\n              fullname,\r\n              email,\r\n              password,\r\n              phone,\r\n              gender,\r\n              balance,\r\n              role,\r\n              piclink,\r\n            })\r\n          );\r\n        });\r\n      })\r\n      .catch((e) => setError(e.message));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.mainview}>\r\n      <View style={styles.registerView}>\r\n        <View style={styles.screen}>\r\n          <Image source={Logo} style={styles.image} />\r\n        </View>\r\n\r\n        <Text style={styles.text}>Let’s get started!</Text>\r\n\r\n        <View style={styles.format}>\r\n          <TextInput\r\n            style={styles.textinput}\r\n            onChangeText={setFullName}\r\n            keyboardType=\"default\"\r\n            placeholder=\"Full Name\"\r\n            placeholderTextColor={\"#f2e9e4\"}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"example@email.com\"\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            placeholderTextColor={\"#f2e9e4\"}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"01*********\"\r\n            onChangeText={setPhone}\r\n            keyboardType=\"numeric\"\r\n            placeholderTextColor={\"#f2e9e4\"}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"Male/Female\"\r\n            onChangeText={setGender}\r\n            keyboardType=\"default\"\r\n            placeholderTextColor={\"#f2e9e4\"}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.textinput}\r\n            onChangeText={setpassword}\r\n            secureTextEntry={true}\r\n            placeholder=\"password\"\r\n            placeholderTextColor={\"#f2e9e4\"}\r\n          />\r\n        </View>\r\n        <View>\r\n          <TouchableOpacity style={styles.buttonstyle} onPress={handleRegister}>\r\n            <Text style={styles.buttontext}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <Text style={styles.errorText}>{error}</Text>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"SignIn\");\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 15, color: \"#f2e9e4\" }}>\r\n            Already have an account?\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst cardwidth = Math.round(Dimensions.get(\"window\").width);\r\nconst styles = StyleSheet.create({\r\n  mainview: {\r\n    flex: 1,\r\n    backgroundColor: \"#f2e9e4\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  // 22223b\r\n  registerView: {\r\n    backgroundColor: \"#22223b\",\r\n    borderRadius: 20,\r\n    width: cardwidth - 100,\r\n    height: 500,\r\n    paddingHorizontal: 25,\r\n    justifyContent: \"center\",\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 5,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  screen: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 20,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 25,\r\n    paddingBottom: 20,\r\n    color: \"#f2e9e4\",\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    color: \"#f2e9e4\",\r\n    borderBottomColor: \"#f2e9e4\",\r\n    borderBottomWidth: 4,\r\n  },\r\n  format: {\r\n    paddingBottom: 20,\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: \"#f2e9e4\",\r\n    width: \"100%\",\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n  },\r\n  buttontextstyle: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  buttontext: {\r\n    color: \"#22223b\",\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: \"#22223b\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}