{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState, useEffect } from \"react\";\nimport Logo from \"../assets/2511582.jpg\";\nimport { deleteFStadium, getFStadium } from \"../db/Stadium/Football\";\nimport { getUserUId } from \"../db/Auth\";\nimport { addUsersToDocuments, updateFAvailable, test } from \"../db/User\";\nimport { getBStadium } from \"../db/Stadium/Basketball\";\nimport { getTStadium } from \"../db/Stadium/Tennis\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Payment(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n  var currentUserId = user.uid;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cardnumber = _useState4[0],\n      setCardNumber = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cvv = _useState6[0],\n      setCVV = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Fstadium = _useState10[0],\n      setFStadium = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Bstadium = _useState12[0],\n      setBStadium = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Tstadium = _useState14[0],\n      setTStadium = _useState14[1];\n\n  useEffect(function () {\n    getFStadium().then(function (data) {\n      setFStadium(data);\n    });\n  }, []);\n  useEffect(function () {\n    getBStadium().then(function (data) {\n      setBStadium(data);\n    });\n  }, []);\n  useEffect(function () {\n    getTStadium().then(function (data) {\n      setTStadium(data);\n    });\n  }, []);\n  useEffect(function () {\n    for (var i = 0; i < Fstadium.length; i++) {\n      addUsersToDocuments(\"football\", Fstadium[i].id, user);\n    }\n  }, []);\n  useEffect(function () {\n    for (var i = 0; i < Bstadium.length; i++) {\n      addUsersToDocuments(\"basketball\", Bstadium[i].id, user);\n    }\n  }, []);\n  useEffect(function () {\n    for (var i = 0; i < Tstadium.length; i++) {\n      addUsersToDocuments(\"tennis\", Tstadium[i].id, user);\n    }\n  }, []);\n\n  var Handler = function Handler() {\n    if (name != \"\" && cardnumber.toString() != \"\" && cvv.toString() != \"\" && date.toString() != \"\") {\n      for (var i = 0; i < Fstadium.length; i++) {\n        if (Fstadium[i].id === currentUserId) {\n          updateFAvailable(Fstadium[i]).then(alert(\"Done! Check your email for confirmation message\"));\n        }\n      }\n\n      for (var _i = 0; _i < Tstadium.length; _i++) {\n        if (Tstadium[_i].id === currentUserId) {\n          updateFAvailable(currentUserId, Tstadium[_i]).then(alert(\"Done! Check your email for confirmation message\"));\n        }\n      }\n\n      for (var _i2 = 0; _i2 < Bstadium.length; _i2++) {\n        if (Bstadium[_i2].id === currentUserId) {\n          updateFAvailable(currentUserId, Bstadium[_i2]).then(alert(\"Done! Check your email for confirmation message\"));\n        }\n      }\n    } else {\n      alert(\"please fill the information of yout card\");\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.screen,\n      children: _jsx(Image, {\n        source: Logo,\n        style: styles.image\n      })\n    }), _jsxs(View, {\n      style: styles.format,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Card Name\",\n        onChangeText: setName,\n        keyboardType: \"default\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Card Number\",\n        onChangeText: setCardNumber,\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"MM/YY\",\n        onChangeText: setDate,\n        keyboardType: \"default\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"CVV\",\n        onChangeText: setCVV,\n        keyboardType: \"numeric\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonstyle,\n      onPress: Handler,\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"Pay\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5390d9\",\n    textAlign: \"center\",\n    paddingHorizontal: 50\n  },\n  screen: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 80,\n    paddingTop: 100,\n    paddingBottom: 50\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  input: {\n    height: 40,\n    color: \"rgb(255, 255, 255)\",\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 4\n  },\n  buttonstyle: {\n    backgroundColor: \"#f2e9e4\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttontext: {\n    color: \"#FFF\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  format: {\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/tboss/CS303-Project-4/Pages/Payment.jsx"],"names":["React","useState","useEffect","Logo","deleteFStadium","getFStadium","getUserUId","addUsersToDocuments","updateFAvailable","test","getBStadium","getTStadium","Payment","navigation","route","user","params","currentUserId","uid","name","setName","cardnumber","setCardNumber","cvv","setCVV","date","setDate","Fstadium","setFStadium","Bstadium","setBStadium","Tstadium","setTStadium","then","data","i","length","id","Handler","toString","alert","styles","container","screen","image","format","input","buttonstyle","buttontext","StyleSheet","create","flex","backgroundColor","textAlign","paddingHorizontal","justifyContent","alignItems","paddingTop","paddingBottom","width","height","borderRadius","color","borderBottomColor","borderBottomWidth","padding","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import {\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Logo from \"../assets/2511582.jpg\";\r\nimport { deleteFStadium, getFStadium } from \"../db/Stadium/Football\";\r\nimport { getUserUId } from \"../db/Auth\";\r\nimport { addUsersToDocuments, updateFAvailable, test } from \"../db/User\";\r\nimport { getBStadium } from \"../db/Stadium/Basketball\";\r\nimport { getTStadium } from \"../db/Stadium/Tennis\";\r\n\r\nexport default function Payment({ navigation, route }) {\r\n  const { user } = route.params;\r\n  const currentUserId = user.uid;\r\n  const [name, setName] = useState(\"\");\r\n  const [cardnumber, setCardNumber] = useState(\"\");\r\n  const [cvv, setCVV] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [Fstadium, setFStadium] = useState([]);\r\n  const [Bstadium, setBStadium] = useState([]);\r\n  const [Tstadium, setTStadium] = useState([]);\r\n\r\n  // console.log(user)\r\n\r\n  // console.log(stadium);\r\n\r\n  useEffect(() => {\r\n    getFStadium().then((data) => {\r\n      setFStadium(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBStadium().then((data) => {\r\n      setBStadium(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getTStadium().then((data) => {\r\n      setTStadium(data);\r\n    });\r\n  }, []);\r\n\r\n  //  ---------------------------\r\n  //add users to football\r\n  useEffect(() => {\r\n    for (let i = 0; i < Fstadium.length; i++) {\r\n      addUsersToDocuments(\"football\", Fstadium[i].id, user);\r\n    }\r\n  }, []);\r\n\r\n  //add users to basket\r\n  useEffect(() => {\r\n    for (let i = 0; i < Bstadium.length; i++) {\r\n      addUsersToDocuments(\"basketball\", Bstadium[i].id, user);\r\n    }\r\n  }, []);\r\n\r\n  //add users to tennis\r\n  useEffect(() => {\r\n    for (let i = 0; i < Tstadium.length; i++) {\r\n      addUsersToDocuments(\"tennis\", Tstadium[i].id, user);\r\n    }\r\n  }, []);\r\n\r\n  const Handler = () => {\r\n    // console.log(\"here in paymethod\")\r\n\r\n    if (\r\n      name != \"\" &&\r\n      cardnumber.toString() != \"\" &&\r\n      cvv.toString() != \"\" &&\r\n      date.toString() != \"\"\r\n    ) {\r\n      // console.log(\"data is valid and sizo of Fstadium.length=\", Fstadium.length, ' and currentUserId', currentUserId)\r\n      for (let i = 0; i < Fstadium.length; i++) {\r\n        // console.log(\"Fstadium[i].id=\", Fstadium[i].id, ' i=', i)\r\n        if (Fstadium[i].id === currentUserId) {\r\n          updateFAvailable(Fstadium[i]).then(\r\n            alert(\"Done! Check your email for confirmation message\")\r\n          );\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < Tstadium.length; i++) {\r\n        if (Tstadium[i].id === currentUserId) {\r\n          updateFAvailable(currentUserId, Tstadium[i]).then(\r\n            alert(\"Done! Check your email for confirmation message\")\r\n          );\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < Bstadium.length; i++) {\r\n        if (Bstadium[i].id === currentUserId) {\r\n          updateFAvailable(currentUserId, Bstadium[i]).then(\r\n            alert(\"Done! Check your email for confirmation message\")\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"please fill the information of yout card\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.screen}>\r\n        <Image source={Logo} style={styles.image} />\r\n      </View>\r\n      <View style={styles.format}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Card Name\"\r\n          onChangeText={setName}\r\n          keyboardType=\"default\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Card Number\"\r\n          onChangeText={setCardNumber}\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"MM/YY\"\r\n          onChangeText={setDate}\r\n          keyboardType=\"default\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"CVV\"\r\n          onChangeText={setCVV}\r\n          keyboardType=\"numeric\"\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={styles.buttonstyle} onPress={Handler}>\r\n        <Text style={styles.buttontext}>Pay</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5390d9\",\r\n    textAlign: \"center\",\r\n    paddingHorizontal: 50,\r\n  },\r\n  screen: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 80,\r\n    paddingTop: 100,\r\n    paddingBottom: 50,\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    color: \"rgb(255, 255, 255)\",\r\n    borderBottomColor: \"#cae9ff\",\r\n    borderBottomWidth: 4,\r\n  },\r\n  buttonstyle: {\r\n    backgroundColor: \"#f2e9e4\",\r\n    width: \"100%\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttontext: {\r\n    color: \"#FFF\",\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n  format: {\r\n    paddingBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}