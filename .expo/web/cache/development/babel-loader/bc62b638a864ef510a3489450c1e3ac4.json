{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addDoc, collection, getDocs, getFirestore, setDoc, doc, query, where, updateDoc, deleteField, arrayUnion, arrayRemove, deleteDoc } from \"firebase/firestore\";\nimport { getUserUId } from \"./Auth\";\nimport { app, db } from \"./Config\";\nvar firestoreDB = getFirestore(app);\n\nfunction addUser(user) {\n  return _regeneratorRuntime.async(function addUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(setDoc(doc(firestoreDB, \"users\", user.id), user));\n\n        case 3:\n          console.log(\"Document written with ID: \", user.id);\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error adding document: \", _context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction addUsersToDocuments(collectionName, docId, userCollection) {\n  var docRef;\n  return _regeneratorRuntime.async(function addUsersToDocuments$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"inside \" + collectionName);\n          docRef = doc(db, collectionName, docId);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(docRef, {\n            users: userCollection\n          }));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUsers() {\n  var usersCol, userSnapshot, userList;\n  return _regeneratorRuntime.async(function getUsers$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          usersCol = collection(firestoreDB, \"users\");\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(usersCol));\n\n        case 3:\n          userSnapshot = _context3.sent;\n          userList = userSnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          console.log(userList);\n          return _context3.abrupt(\"return\", userList);\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserById(id) {\n  var usersRef, q, querySnapshot;\n  return _regeneratorRuntime.async(function getUserById$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          usersRef = collection(firestoreDB, \"users\");\n          q = query(usersRef, where(\"id\", \"==\", id));\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(getDocs(q));\n\n        case 4:\n          querySnapshot = _context4.sent;\n          return _context4.abrupt(\"return\", querySnapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          }));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction updateFootball(tempDoc) {\n  return _regeneratorRuntime.async(function updateFootball$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log(tempDoc);\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"football\", tempDoc.id), tempDoc));\n\n        case 4:\n          _context5.next = 9;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction updateBasketball(tempDoc) {\n  return _regeneratorRuntime.async(function updateBasketball$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          console.log(tempDoc);\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"basketball\", tempDoc.id), tempDoc));\n\n        case 4:\n          _context6.next = 9;\n          break;\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction updateTennis(tempDoc) {\n  return _regeneratorRuntime.async(function updateTennis$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log(tempDoc);\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"tennis\", tempDoc.id), tempDoc));\n\n        case 4:\n          _context7.next = 9;\n          break;\n\n        case 6:\n          _context7.prev = 6;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction editUser(docId, fullname, phone, piclink) {\n  return _regeneratorRuntime.async(function editUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(updateDoc(doc(db, \"users\", docId), {\n            fullname: fullname,\n            phone: phone,\n            piclink: piclink\n          }));\n\n        case 3:\n          console.log(\"Document updated with ID: \", docId);\n          _context8.next = 9;\n          break;\n\n        case 6:\n          _context8.prev = 6;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(\"Error updateing document: \", _context8.t0);\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction deleteUser(docId) {\n  return _regeneratorRuntime.async(function deleteUser$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(deleteDoc(doc(db, \"users\", docId)));\n\n        case 3:\n          console.log(\"Document deleted with ID: \", docId);\n          _context9.next = 9;\n          break;\n\n        case 6:\n          _context9.prev = 6;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(\"Error deleting document: \", _context9.t0);\n\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction updateUser(tempUser) {\n  return _regeneratorRuntime.async(function updateUser$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          console.log(tempUser);\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"users\", tempUser.id), tempUser));\n\n        case 4:\n          _context10.next = 9;\n          break;\n\n        case 6:\n          _context10.prev = 6;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n\n        case 9:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nexport { getUsers, addUser, updateFootball, addUsersToDocuments, getUserById, editUser, deleteUser, updateUser, updateBasketball, updateTennis };","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project(New)/db/User.js"],"names":["addDoc","collection","getDocs","getFirestore","setDoc","doc","query","where","updateDoc","deleteField","arrayUnion","arrayRemove","deleteDoc","getUserUId","app","db","firestoreDB","addUser","user","id","console","log","error","addUsersToDocuments","collectionName","docId","userCollection","docRef","users","getUsers","usersCol","userSnapshot","userList","docs","map","data","getUserById","usersRef","q","querySnapshot","updateFootball","tempDoc","updateBasketball","updateTennis","editUser","fullname","phone","piclink","deleteUser","updateUser","tempUser"],"mappings":"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","sourcesContent":["import {\r\n  addDoc,\r\n  collection,\r\n  getDocs,\r\n  getFirestore,\r\n  setDoc,\r\n  doc,\r\n  query,\r\n  where,\r\n  updateDoc,\r\n  deleteField,\r\n  arrayUnion,\r\n  arrayRemove,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { getUserUId } from \"./Auth\";\r\nimport { app, db } from \"./Config\";\r\n\r\nconst firestoreDB = getFirestore(app);\r\n\r\nasync function addUser(user) {\r\n  try {\r\n    await setDoc(doc(firestoreDB, \"users\", user.id), user);\r\n    console.log(\"Document written with ID: \", user.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nasync function addUsersToDocuments(collectionName, docId, userCollection) {\r\n  console.log(\"inside \" + collectionName);\r\n  const docRef = doc(db, collectionName, docId);\r\n  await updateDoc(docRef, {\r\n    users: userCollection,\r\n  });\r\n}\r\n\r\nasync function getUsers() {\r\n  const usersCol = collection(firestoreDB, \"users\");\r\n  const userSnapshot = await getDocs(usersCol);\r\n  const userList = userSnapshot.docs.map((doc) => {\r\n    return { id: doc.id, ...doc.data() };\r\n  });\r\n  console.log(userList);\r\n  return userList;\r\n}\r\n\r\nasync function getUserById(id) {\r\n  const usersRef = collection(firestoreDB, \"users\");\r\n  const q = query(usersRef, where(\"id\", \"==\", id));\r\n  const querySnapshot = await getDocs(q);\r\n  return querySnapshot.docs.map((doc) => {\r\n    return { id: doc.id, ...doc.data() };\r\n  });\r\n}\r\n\r\n//                    F-> for \"football\"\r\nasync function updateFootball(tempDoc) {\r\n  try {\r\n    console.log(tempDoc);\r\n    await setDoc(doc(db, \"football\", tempDoc.id), tempDoc); //if document with \"tempDoc.id\" not found add it, else update it\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\nasync function updateBasketball(tempDoc) {\r\n  try {\r\n    console.log(tempDoc);\r\n    await setDoc(doc(db, \"basketball\", tempDoc.id), tempDoc); //if document with \"tempDoc.id\" not found add it, else update it\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n}\r\n\r\nasync function updateTennis(tempDoc) {\r\n  try {\r\n    console.log(tempDoc);\r\n    await setDoc(doc(db, \"tennis\", tempDoc.id), tempDoc); //if document with \"tempDoc.id\" not found add it, else update it\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n}\r\n\r\nasync function editUser(docId, fullname, phone, piclink) {\r\n  try {\r\n    await updateDoc(doc(db, \"users\", docId), {\r\n      fullname: fullname,\r\n      phone: phone,\r\n      piclink: piclink,\r\n    });\r\n    console.log(\"Document updated with ID: \", docId);\r\n  } catch (error) {\r\n    console.error(\"Error updateing document: \", error);\r\n  }\r\n}\r\n\r\nasync function deleteUser(docId) {\r\n  try {\r\n    await deleteDoc(doc(db, \"users\", docId));\r\n    console.log(\"Document deleted with ID: \", docId);\r\n  } catch (error) {\r\n    console.error(\"Error deleting document: \", error);\r\n  }\r\n}\r\n\r\nasync function updateUser(tempUser) {\r\n  try {\r\n    console.log(tempUser);\r\n    await setDoc(doc(db, \"users\", tempUser.id), tempUser); //if document with \"tempDoc.id\" not found add it, else update the document with this given field\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport {\r\n  getUsers,\r\n  addUser,\r\n  updateFootball,\r\n  addUsersToDocuments,\r\n  getUserById,\r\n  editUser,\r\n  deleteUser,\r\n  updateUser,\r\n  updateBasketball,\r\n    updateTennis\r\n};\r\n"]},"metadata":{},"sourceType":"module"}