{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState } from \"react\";\nimport { addFStadium, deleteFStadium, getFStadium } from \"../db/Stadium/Football\";\nimport { getUserUId } from \"../db/Auth\";\nimport { updateFAvailable } from \"../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ValidationPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var stadName = route.params.name;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stDate = _useState2[0],\n      setStDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edDate = _useState4[0],\n      setEdDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      day = _useState6[0],\n      setDay = _useState6[1];\n\n  function handel() {\n    console.log(\"begin handle\", stadName);\n\n    if (stDate !== \"\" && edDate !== \"\" && day !== \"\" && stDate !== edDate) {\n      console.log(\"after validate\");\n      getFStadium().then(function (data) {\n        console.log(\"number of stad size=\", data.length);\n\n        var _loop = function _loop(i) {\n          if (data[i].name === stadName) {\n            console.log(\"found the stad\", data[i]);\n            var flag = true;\n\n            if (data[i].state === null) {\n              data[i].state = [];\n            }\n\n            for (var j = 0; j < data[i].state.length; j++) {\n              if (data[i].state[j].day === day) {\n                if (stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate || data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate) alert(\"already occupied\");\n                flag = false;\n                navigation.navigate(\"Football\");\n                break;\n              }\n            }\n\n            if (flag) {\n              getUserUId().then(function (id) {\n                data[i].state.push({\n                  day: day,\n                  stDate: stDate,\n                  edDate: edDate,\n                  id: id\n                });\n                updateFAvailable(data[i]);\n              });\n              navigation.navigate(\"Payment\", {\n                stDate: stDate,\n                edDate: edDate,\n                day: day\n              });\n            }\n\n            return \"break\";\n          }\n        };\n\n        for (var i = 0; i < data.length; i++) {\n          var _ret = _loop(i);\n\n          if (_ret === \"break\") break;\n        }\n      });\n    } else {\n      alert(\"data is required\");\n    }\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.component,\n      children: [_jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter the day\",\n        onChangeText: setDay,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter start time\",\n        onChangeText: setStDate,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter end time\",\n        onChangeText: setEdDate,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handel,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Book\"\n        })\n      })]\n    })\n  });\n}\nvar cardwidth = Math.round(Dimensions.get(\"window\").width);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f2e9e4\"\n  },\n  component: {\n    flex: 1,\n    backgroundColor: \"#22223b\",\n    borderRadius: 20,\n    width: cardwidth - 100,\n    marginVertical: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3\n  },\n  textinput: {\n    marginBottom: 20,\n    paddingLeft: 5,\n    width: \"75%\",\n    height: 40,\n    backgroundColor: \"#f2e9e4\",\n    borderRadius: 15\n  },\n  buttontext: {\n    color: \"#22223b\",\n    fontSize: 15,\n    fontWeight: \"500\"\n  },\n  button: {\n    backgroundColor: \"#f2e9e4\",\n    marginTop: 20,\n    width: 120,\n    height: 50,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/tboss/CS303-Project-4/Pages/ValidationPage.jsx"],"names":["React","useState","addFStadium","deleteFStadium","getFStadium","getUserUId","updateFAvailable","ValidationPage","navigation","route","stadName","params","name","stDate","setStDate","edDate","setEdDate","day","setDay","handel","console","log","then","data","length","i","flag","state","j","alert","navigate","id","push","styles","container","component","textinput","button","buttontext","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","borderRadius","marginVertical","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","marginBottom","paddingLeft","color","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import {\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  addFStadium,\r\n  deleteFStadium,\r\n  getFStadium,\r\n} from \"../db/Stadium/Football\";\r\nimport { getUserUId } from \"../db/Auth\";\r\nimport { updateFAvailable } from \"../db/User\";\r\n\r\nexport default function ValidationPage({ navigation, route }) {\r\n  let { name: stadName } = route.params; //name -> att. in doc.\r\n\r\n  const [stDate, setStDate] = useState(\"\"); //start date\r\n  const [edDate, setEdDate] = useState(\"\"); //end date\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  function handel() {\r\n    console.log(\"begin handle\", stadName);\r\n    if (stDate !== \"\" && edDate !== \"\" && day !== \"\" && stDate !== edDate) {\r\n      console.log(\"after validate\");\r\n      getFStadium().then((data) => {\r\n        console.log(\"number of stad size=\", data.length);\r\n        for (let i = 0; i < data.length; i++) {\r\n          if (data[i].name === stadName) {\r\n            console.log(\"found the stad\", data[i]);\r\n            let flag = true; // true ->stad is available\r\n            if (data[i].state === null) {\r\n              //if there is no array, set a new one\r\n              data[i].state = []; //new array\r\n            }\r\n            /* add \"balance\" in db and manage it here*/\r\n            for (let j = 0; j < data[i].state.length; j++) {\r\n              if (data[i].state[j].day === day) {\r\n                //same day isn't enough\r\n                if (\r\n                  (stDate < data[i].state[j].edDate &&\r\n                    stDate >= data[i].state[j].stDate) || //check in same hours interval\r\n                  (data[i].state[j].stDate >= stDate &&\r\n                    data[i].state[j].stDate < edDate)\r\n                )\r\n                  alert(\"already occupied\");\r\n                flag = false; //stad is unavailable after occupation\r\n                navigation.navigate(\"Football\");\r\n                break;\r\n              }\r\n            }\r\n            if (flag) {\r\n              //if flag is available i.e. \"true\", add userId with the \"date\" that he\r\n              getUserUId().then((id) => {\r\n                // gets id of current user in \"id\"\r\n                data[i].state.push({ day, stDate, edDate, id }); //note that we made \"id\" same as \"document ID\" manually\r\n                updateFAvailable(data[i]);\r\n              });\r\n              navigation.navigate(\"Payment\", { stDate, edDate, day });\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"data is required\");\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.component}>\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"Enter the day\"\r\n          onChangeText={setDay}\r\n          keyboardType=\"default\"\r\n          placeholderTextColor={\"#22223b\"}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"Enter start time\"\r\n          onChangeText={setStDate}\r\n          keyboardType=\"default\"\r\n          placeholderTextColor={\"#22223b\"}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textinput}\r\n          placeholder=\"Enter end time\"\r\n          onChangeText={setEdDate}\r\n          keyboardType=\"default\"\r\n          placeholderTextColor={\"#22223b\"}\r\n        />\r\n\r\n        <TouchableOpacity style={styles.button} onPress={handel}>\r\n          <Text style={styles.buttontext}>Book</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst cardwidth = Math.round(Dimensions.get(\"window\").width);\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#f2e9e4\",\r\n  },\r\n  component: {\r\n    flex: 1,\r\n    backgroundColor: \"#22223b\",\r\n    borderRadius: 20,\r\n    width: cardwidth - 100,\r\n    marginVertical: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 5,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3,\r\n  },\r\n  textinput: {\r\n    marginBottom: 20,\r\n    paddingLeft: 5,\r\n    width: \"75%\",\r\n    height: 40,\r\n    backgroundColor: \"#f2e9e4\",\r\n    borderRadius: 15,\r\n  },\r\n  buttontext: {\r\n    color: \"#22223b\",\r\n    fontSize: 15,\r\n    fontWeight: \"500\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#f2e9e4\",\r\n    marginTop: 20,\r\n    width: 120,\r\n    height: 50,\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}