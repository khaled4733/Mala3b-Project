{"ast":null,"code":"import TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { signout } from \"../db/Auth\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n  console.log(user);\n\n  var handleSignOut = function handleSignOut() {\n    signout().then(alert(\"signout successful\")).catch(function (error) {\n      return alert(error.message);\n    });\n    console.log(\"signout successful\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"email is : \", user.email]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonstyle,\n      onPress: handleSignOut,\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"LogOut\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonstyle,\n      onPress: function onPress() {\n        navigation.navigate('AdminArea');\n      },\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"admin\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 10\n  },\n  buttonstyle: {\n    backgroundColor: '#022b3a',\n    width: '100%',\n    height: 30,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginVertical: 15\n  },\n  buttontext: {\n    color: 'rgb(255, 255, 255)',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project/CS303-Project/Pages/Profile.js"],"names":["React","signout","Profile","navigation","route","user","params","console","log","handleSignOut","then","alert","catch","error","message","styles","container","email","buttonstyle","buttontext","navigate","StyleSheet","create","flex","justifyContent","alignItems","paddingHorizontal","backgroundColor","width","height","borderRadius","marginVertical","color","fontWeight","fontSize"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;;;AAIA,eAAe,SAASC,OAAT,OAAwC;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;AACnD,MAAQC,IAAR,GAAiBD,KAAK,CAACE,MAAvB,CAAQD,IAAR;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBR,IAAAA,OAAO,GACFS,IADL,CACUC,KAAK,CAAC,oBAAD,CADf,EAEKC,KAFL,CAEW,UAAAC,KAAK;AAAA,aAAIF,KAAK,CAACE,KAAK,CAACC,OAAP,CAAT;AAAA,KAFhB;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GALD;;AAMA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,eACI,MAAC,IAAD;AAAA,gCAAkBX,IAAI,CAACY,KAAvB;AAAA,MADJ,EAEQ,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEF,MAAM,CAACG,WAAhC;AAA6C,MAAA,OAAO,EAAET,aAAtD;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACI,UAApB;AAAA;AAAA;AADJ,MAFR,EAKQ,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEJ,MAAM,CAACG,WAAhC;AAA6C,MAAA,OAAO,EAAE,mBAAI;AAACf,QAAAA,UAAU,CAACiB,QAAX,CAAoB,WAApB;AAAiC,OAA5F;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACI,UAApB;AAAA;AAAA;AADJ,MALR;AAAA,IADJ;AAYH;AAED,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,iBAAiB,EAAE;AAJZ,GADkB;AAO7BR,EAAAA,WAAW,EAAE;AACTS,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTL,IAAAA,UAAU,EAAE,QALH;AAMTM,IAAAA,cAAc,EAAE;AANP,GAPgB;AAe7BZ,EAAAA,UAAU,EAAE;AACRa,IAAAA,KAAK,EAAE,oBADC;AAERC,IAAAA,UAAU,EAAE,KAFJ;AAGRC,IAAAA,QAAQ,EAAE;AAHF;AAfiB,CAAlB,CAAf","sourcesContent":["import { TouchableOpacity, StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport { signout } from '../db/Auth'\r\n\r\n\r\n\r\nexport default function Profile({ navigation, route }) {\r\n    const { user } = route.params;\r\n    console.log(user);\r\n\r\n    const handleSignOut = () => {\r\n        signout()\r\n            .then(alert(\"signout successful\"))\r\n            .catch(error => alert(error.message))\r\n        console.log(\"signout successful\");\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>email is : {user.email}</Text>\r\n                <TouchableOpacity style={styles.buttonstyle} onPress={handleSignOut}>\r\n                    <Text style={styles.buttontext}>LogOut</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.buttonstyle} onPress={()=>{navigation.navigate('AdminArea')}}>\r\n                    <Text style={styles.buttontext}>admin</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 10\r\n    },\r\n    buttonstyle: {\r\n        backgroundColor: '#022b3a',\r\n        width: '100%',\r\n        height: 30,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginVertical: 15\r\n    },\r\n    buttontext: {\r\n        color: 'rgb(255, 255, 255)',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}