{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useEffect, useState } from \"react\";\nimport { getUserUId } from \"../db/Auth\";\nimport { updateBasketball, updateFootball, updateTennis } from \"../db/User\";\nimport { getBStadium } from \"../db/Stadium/Basketball\";\nimport { getTStadium } from \"../db/Stadium/Tennis\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TennisValidationPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var stadName = route.params.name;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stDate = _useState2[0],\n      setStDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edDate = _useState4[0],\n      setEdDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      day = _useState6[0],\n      setDay = _useState6[1];\n\n  function handel() {\n    console.log('Inside handle()', stadName);\n    getTStadium().then(function (data) {\n      if (stDate !== '' && edDate !== '' && day !== '' && stDate !== edDate) {\n        console.log('number of Tstad = ', data.length);\n\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].name === stadName) {\n            console.log('found the stad', stadName);\n            var flag = true;\n\n            if (data[i].state === null) {\n              data[i].state = [];\n            }\n\n            for (var j = 0; j < data[i].state.length; j++) {\n              if (data[i].state[j].day === day) {\n                if (stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate || data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate) {\n                  alert(\"Tennis Stadium already occupied\");\n                  console.log(\"tennis is already occupied\");\n                  flag = false;\n                  navigation.navigate('Tennis');\n                  return;\n                }\n              }\n            }\n\n            if (flag) {\n              getUserUId().then(function (id) {\n                navigation.navigate('Payment', {\n                  stadName: stadName,\n                  day: day,\n                  stDate: stDate,\n                  edDate: edDate,\n                  id: id\n                });\n              });\n            }\n\n            break;\n          }\n        }\n      } else {\n        alert(\"data is required\");\n      }\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.component,\n      children: [_jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter the day\",\n        onChangeText: setDay,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter start time\",\n        onChangeText: setStDate,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Enter end time\",\n        onChangeText: setEdDate,\n        keyboardType: \"default\",\n        placeholderTextColor: \"#22223b\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handel,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Book\"\n        })\n      })]\n    })\n  });\n}\nvar cardwidth = Math.round(Dimensions.get(\"window\").width);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f2e9e4\"\n  },\n  component: {\n    flex: 1,\n    backgroundColor: \"#22223b\",\n    borderRadius: 20,\n    width: cardwidth - 100,\n    marginVertical: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3\n  },\n  textinput: {\n    marginBottom: 20,\n    paddingLeft: 5,\n    width: \"75%\",\n    height: 40,\n    backgroundColor: \"#f2e9e4\",\n    borderRadius: 15\n  },\n  buttontext: {\n    color: \"#22223b\",\n    fontSize: 15,\n    fontWeight: \"500\"\n  },\n  button: {\n    backgroundColor: \"#f2e9e4\",\n    marginTop: 20,\n    width: 120,\n    height: 50,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS303-Project(New)/Pages/TennisValidationPage.jsx"],"names":["React","useEffect","useState","getUserUId","updateBasketball","updateFootball","updateTennis","getBStadium","getTStadium","TennisValidationPage","navigation","route","stadName","params","name","stDate","setStDate","edDate","setEdDate","day","setDay","handel","console","log","then","data","length","i","flag","state","j","alert","navigate","id","styles","container","component","textinput","button","buttontext","cardwidth","Math","round","Dimensions","get","width","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","borderRadius","marginVertical","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","marginBottom","paddingLeft","color","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import {\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    ScrollView, Image, Button, Dimensions\r\n} from \"react-native\";\r\nimport React, {useEffect, useState} from \"react\";\r\n// import {addFStadium, deleteFStadium, getFStadium} from \"../db/Stadium/Football\";\r\n// import footballBackground from \"../assets/footballBackground.png\";\r\n// import tennisBackground from \"../assets/tennisBackground.png\";\r\n// import basketballBackground from \"../assets/basketballBackground.png\";\r\nimport {getUserUId} from \"../db/Auth\";\r\nimport {updateBasketball, updateFootball, updateTennis} from \"../db/User\";\r\nimport {getBStadium} from \"../db/Stadium/Basketball\";\r\nimport {getTStadium} from \"../db/Stadium/Tennis\";\r\n\r\n\r\nexport default function TennisValidationPage ({navigation, route}) {\r\n\r\n    let {name: stadName} = route.params; //name -> att. in doc.\r\n\r\n    const [stDate,setStDate] = useState(\"\") //start date\r\n    const [edDate,setEdDate] = useState(\"\")//end date\r\n    const [day,setDay] =  useState(\"\")\r\n\r\n    function handel(){\r\n            console.log('Inside handle()', stadName);\r\n        /*Handle tennis*/\r\n            getTStadium().then((data) => {\r\n                if (stDate !== '' && edDate !== '' && day !== '' && stDate !== edDate) {\r\n                    console.log('number of Tstad = ', data.length);\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i].name === stadName) {  /* This identifies the stadium type !!!!!!!! */\r\n                            console.log('found the stad', stadName);\r\n                            let flag = true; // true ->stad is available\r\n                            if (data[i].state === null) { //if there is no array, set a new one\r\n                                data[i].state = []; //new array\r\n                            }\r\n                            for (let j = 0; j < data[i].state.length; j++) {\r\n                                if (data[i].state[j].day === day) { //same day isn't enough\r\n                                    if ((stDate < data[i].state[j].edDate && stDate >= data[i].state[j].stDate) || //check in same hours interval\r\n                                        (data[i].state[j].stDate >= stDate && data[i].state[j].stDate < edDate)) {\r\n                                        alert(\"Tennis Stadium already occupied\");\r\n                                        console.log(\"tennis is already occupied\")\r\n                                        flag = false; //stad is unavailable after occupation\r\n                                        navigation.navigate('Tennis'); // Ask doc : when navigating it goes 1st to Football.jsx then BasketBall.jsx then Tennis.jsx when it should have directly moved to Tennis\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (flag) { //if flag is available i.e. \"true\", add userId with the \"date\" that he\r\n                                getUserUId().then((id) => { // gets id of current user in \"id\"\r\n                                    navigation.navigate('Payment', {stadName,day, stDate, edDate, id});\r\n                                });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"data is required\")\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.component}>\r\n                <TextInput\r\n                    style={styles.textinput}\r\n                    placeholder=\"Enter the day\"\r\n                    onChangeText={setDay}\r\n                    keyboardType=\"default\"\r\n                    placeholderTextColor={\"#22223b\"}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.textinput}\r\n                    placeholder=\"Enter start time\"\r\n                    onChangeText={setStDate}\r\n                    keyboardType=\"default\"\r\n                    placeholderTextColor={\"#22223b\"}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.textinput}\r\n                    placeholder=\"Enter end time\"\r\n                    onChangeText={setEdDate}\r\n                    keyboardType=\"default\"\r\n                    placeholderTextColor={\"#22223b\"}\r\n                />\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handel}>\r\n                    <Text style={styles.buttontext}>Book</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\nconst cardwidth = Math.round(Dimensions.get(\"window\").width);\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#f2e9e4\",\r\n    },\r\n    component: {\r\n        flex: 1,\r\n        backgroundColor: \"#22223b\",\r\n        borderRadius: 20,\r\n        width: cardwidth - 100,\r\n        marginVertical: 60,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        shadowColor: \"#000000\",\r\n        shadowOffset: {\r\n            width: 5,\r\n            height: 5,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3,\r\n    },\r\n    textinput: {\r\n        marginBottom: 20,\r\n        paddingLeft: 5,\r\n        width: \"75%\",\r\n        height: 40,\r\n        backgroundColor: \"#f2e9e4\",\r\n        borderRadius: 15,\r\n    },\r\n    buttontext: {\r\n        color: \"#22223b\",\r\n        fontSize: 15,\r\n        fontWeight: \"500\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#f2e9e4\",\r\n        marginTop: 20,\r\n        width: 120,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}