{"ast":null,"code":"import{isStartish,isMoveish,isEndish}from\"./ResponderEventTypes\";var __DEV__=process.env.NODE_ENV!=='production';var MAX_TOUCH_BANK=20;var touchBank=[];var touchHistory={touchBank:touchBank,numberActiveTouches:0,indexOfSingleActiveTouch:-1,mostRecentTimeStamp:0};function timestampForTouch(touch){return touch.timeStamp||touch.timestamp;}function createTouchRecord(touch){return{touchActive:true,startPageX:touch.pageX,startPageY:touch.pageY,startTimeStamp:timestampForTouch(touch),currentPageX:touch.pageX,currentPageY:touch.pageY,currentTimeStamp:timestampForTouch(touch),previousPageX:touch.pageX,previousPageY:touch.pageY,previousTimeStamp:timestampForTouch(touch)};}function resetTouchRecord(touchRecord,touch){touchRecord.touchActive=true;touchRecord.startPageX=touch.pageX;touchRecord.startPageY=touch.pageY;touchRecord.startTimeStamp=timestampForTouch(touch);touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchRecord.previousPageX=touch.pageX;touchRecord.previousPageY=touch.pageY;touchRecord.previousTimeStamp=timestampForTouch(touch);}function getTouchIdentifier(_ref){var identifier=_ref.identifier;if(identifier==null){console.error('Touch object is missing identifier.');}if(__DEV__){if(identifier>MAX_TOUCH_BANK){console.error('Touch identifier %s is greater than maximum supported %s which causes '+'performance issues backfilling array locations for all of the indices.',identifier,MAX_TOUCH_BANK);}}return identifier;}function recordTouchStart(touch){var identifier=getTouchIdentifier(touch);var touchRecord=touchBank[identifier];if(touchRecord){resetTouchRecord(touchRecord,touch);}else{touchBank[identifier]=createTouchRecord(touch);}touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}function recordTouchMove(touch){var touchRecord=touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=true;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch move without a touch start.\\n',\"Touch Move: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank());}}function recordTouchEnd(touch){var touchRecord=touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=false;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch end without a touch start.\\n',\"Touch End: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank());}}function printTouch(touch){return JSON.stringify({identifier:touch.identifier,pageX:touch.pageX,pageY:touch.pageY,timestamp:timestampForTouch(touch)});}function printTouchBank(){var printed=JSON.stringify(touchBank.slice(0,MAX_TOUCH_BANK));if(touchBank.length>MAX_TOUCH_BANK){printed+=' (original size: '+touchBank.length+')';}return printed;}var ResponderTouchHistoryStore={recordTouchTrack:function recordTouchTrack(topLevelType,nativeEvent){if(isMoveish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchMove);}else if(isStartish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchStart);touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){touchHistory.indexOfSingleActiveTouch=nativeEvent.touches[0].identifier;}}else if(isEndish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchEnd);touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){for(var i=0;i<touchBank.length;i++){var touchTrackToCheck=touchBank[i];if(touchTrackToCheck!=null&&touchTrackToCheck.touchActive){touchHistory.indexOfSingleActiveTouch=i;break;}}if(__DEV__){var activeRecord=touchBank[touchHistory.indexOfSingleActiveTouch];if(!(activeRecord!=null&&activeRecord.touchActive)){console.error('Cannot find single active touch.');}}}}},touchHistory:touchHistory};export default ResponderTouchHistoryStore;","map":{"version":3,"names":["isStartish","isMoveish","isEndish","__DEV__","process","env","NODE_ENV","MAX_TOUCH_BANK","touchBank","touchHistory","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timeStamp","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","console","error","recordTouchStart","recordTouchMove","warn","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","slice","length","ResponderTouchHistoryStore","recordTouchTrack","topLevelType","nativeEvent","changedTouches","forEach","touches","i","touchTrackToCheck","activeRecord"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderTouchHistoryStore.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { isStartish, isMoveish, isEndish } from './ResponderEventTypes';\r\n\r\n/**\r\n * Tracks the position and time of each active touch by `touch.identifier`. We\r\n * should typically only see IDs in the range of 1-20 because IDs get recycled\r\n * when touches end and start again.\r\n */\r\nvar __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nvar MAX_TOUCH_BANK = 20;\r\nvar touchBank = [];\r\nvar touchHistory = {\r\n  touchBank: touchBank,\r\n  numberActiveTouches: 0,\r\n  // If there is only one active touch, we remember its location. This prevents\r\n  // us having to loop through all of the touches all the time in the most\r\n  // common case.\r\n  indexOfSingleActiveTouch: -1,\r\n  mostRecentTimeStamp: 0\r\n};\r\n\r\nfunction timestampForTouch(touch) {\r\n  // The legacy internal implementation provides \"timeStamp\", which has been\r\n  // renamed to \"timestamp\".\r\n  return touch.timeStamp || touch.timestamp;\r\n}\r\n/**\r\n * TODO: Instead of making gestures recompute filtered velocity, we could\r\n * include a built in velocity computation that can be reused globally.\r\n */\r\n\r\n\r\nfunction createTouchRecord(touch) {\r\n  return {\r\n    touchActive: true,\r\n    startPageX: touch.pageX,\r\n    startPageY: touch.pageY,\r\n    startTimeStamp: timestampForTouch(touch),\r\n    currentPageX: touch.pageX,\r\n    currentPageY: touch.pageY,\r\n    currentTimeStamp: timestampForTouch(touch),\r\n    previousPageX: touch.pageX,\r\n    previousPageY: touch.pageY,\r\n    previousTimeStamp: timestampForTouch(touch)\r\n  };\r\n}\r\n\r\nfunction resetTouchRecord(touchRecord, touch) {\r\n  touchRecord.touchActive = true;\r\n  touchRecord.startPageX = touch.pageX;\r\n  touchRecord.startPageY = touch.pageY;\r\n  touchRecord.startTimeStamp = timestampForTouch(touch);\r\n  touchRecord.currentPageX = touch.pageX;\r\n  touchRecord.currentPageY = touch.pageY;\r\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n  touchRecord.previousPageX = touch.pageX;\r\n  touchRecord.previousPageY = touch.pageY;\r\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction getTouchIdentifier(_ref) {\r\n  var identifier = _ref.identifier;\r\n\r\n  if (identifier == null) {\r\n    console.error('Touch object is missing identifier.');\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (identifier > MAX_TOUCH_BANK) {\r\n      console.error('Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);\r\n    }\r\n  }\r\n\r\n  return identifier;\r\n}\r\n\r\nfunction recordTouchStart(touch) {\r\n  var identifier = getTouchIdentifier(touch);\r\n  var touchRecord = touchBank[identifier];\r\n\r\n  if (touchRecord) {\r\n    resetTouchRecord(touchRecord, touch);\r\n  } else {\r\n    touchBank[identifier] = createTouchRecord(touch);\r\n  }\r\n\r\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction recordTouchMove(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = true;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    console.warn('Cannot record touch move without a touch start.\\n', \"Touch Move: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank());\r\n  }\r\n}\r\n\r\nfunction recordTouchEnd(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = false;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    console.warn('Cannot record touch end without a touch start.\\n', \"Touch End: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank());\r\n  }\r\n}\r\n\r\nfunction printTouch(touch) {\r\n  return JSON.stringify({\r\n    identifier: touch.identifier,\r\n    pageX: touch.pageX,\r\n    pageY: touch.pageY,\r\n    timestamp: timestampForTouch(touch)\r\n  });\r\n}\r\n\r\nfunction printTouchBank() {\r\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\r\n\r\n  if (touchBank.length > MAX_TOUCH_BANK) {\r\n    printed += ' (original size: ' + touchBank.length + ')';\r\n  }\r\n\r\n  return printed;\r\n}\r\n\r\nvar ResponderTouchHistoryStore = {\r\n  recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\r\n    if (isMoveish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchMove);\r\n    } else if (isStartish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchStart);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\r\n      }\r\n    } else if (isEndish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        for (var i = 0; i < touchBank.length; i++) {\r\n          var touchTrackToCheck = touchBank[i];\r\n\r\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\r\n            touchHistory.indexOfSingleActiveTouch = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (__DEV__) {\r\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\r\n\r\n          if (!(activeRecord != null && activeRecord.touchActive)) {\r\n            console.error('Cannot find single active touch.');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  touchHistory: touchHistory\r\n};\r\nexport default ResponderTouchHistoryStore;"],"mappings":"AAQA,OAASA,UAAU,CAAEC,SAAS,CAAEC,QAAQ,6BAOxC,GAAI,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAEnD,GAAI,CAAAC,cAAc,CAAG,EAAE,CACvB,GAAI,CAAAC,SAAS,CAAG,EAAE,CAClB,GAAI,CAAAC,YAAY,CAAG,CACjBD,SAAS,CAAEA,SAAS,CACpBE,mBAAmB,CAAE,CAAC,CAItBC,wBAAwB,CAAE,CAAC,CAAC,CAC5BC,mBAAmB,CAAE,CACvB,CAAC,CAED,QAAS,CAAAC,iBAAiBA,CAACC,KAAK,CAAE,CAGhC,MAAO,CAAAA,KAAK,CAACC,SAAS,EAAID,KAAK,CAACE,SAAS,CAC3C,CAOA,QAAS,CAAAC,iBAAiBA,CAACH,KAAK,CAAE,CAChC,MAAO,CACLI,WAAW,CAAE,IAAI,CACjBC,UAAU,CAAEL,KAAK,CAACM,KAAK,CACvBC,UAAU,CAAEP,KAAK,CAACQ,KAAK,CACvBC,cAAc,CAAEV,iBAAiB,CAACC,KAAK,CAAC,CACxCU,YAAY,CAAEV,KAAK,CAACM,KAAK,CACzBK,YAAY,CAAEX,KAAK,CAACQ,KAAK,CACzBI,gBAAgB,CAAEb,iBAAiB,CAACC,KAAK,CAAC,CAC1Ca,aAAa,CAAEb,KAAK,CAACM,KAAK,CAC1BQ,aAAa,CAAEd,KAAK,CAACQ,KAAK,CAC1BO,iBAAiB,CAAEhB,iBAAiB,CAACC,KAAK,CAC5C,CAAC,CACH,CAEA,QAAS,CAAAgB,gBAAgBA,CAACC,WAAW,CAAEjB,KAAK,CAAE,CAC5CiB,WAAW,CAACb,WAAW,CAAG,IAAI,CAC9Ba,WAAW,CAACZ,UAAU,CAAGL,KAAK,CAACM,KAAK,CACpCW,WAAW,CAACV,UAAU,CAAGP,KAAK,CAACQ,KAAK,CACpCS,WAAW,CAACR,cAAc,CAAGV,iBAAiB,CAACC,KAAK,CAAC,CACrDiB,WAAW,CAACP,YAAY,CAAGV,KAAK,CAACM,KAAK,CACtCW,WAAW,CAACN,YAAY,CAAGX,KAAK,CAACQ,KAAK,CACtCS,WAAW,CAACL,gBAAgB,CAAGb,iBAAiB,CAACC,KAAK,CAAC,CACvDiB,WAAW,CAACJ,aAAa,CAAGb,KAAK,CAACM,KAAK,CACvCW,WAAW,CAACH,aAAa,CAAGd,KAAK,CAACQ,KAAK,CACvCS,WAAW,CAACF,iBAAiB,CAAGhB,iBAAiB,CAACC,KAAK,CAAC,CAC1D,CAEA,QAAS,CAAAkB,kBAAkBA,CAACC,IAAI,CAAE,CAChC,GAAI,CAAAC,UAAU,CAAGD,IAAI,CAACC,UAAU,CAEhC,GAAIA,UAAU,EAAI,IAAI,CAAE,CACtBC,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC,CACtD,CAEA,GAAIjC,OAAO,CAAE,CACX,GAAI+B,UAAU,CAAG3B,cAAc,CAAE,CAC/B4B,OAAO,CAACC,KAAK,CAAC,wEAAwE,CAAG,wEAAwE,CAAEF,UAAU,CAAE3B,cAAc,CAAC,CAChM,CACF,CAEA,MAAO,CAAA2B,UAAU,CACnB,CAEA,QAAS,CAAAG,gBAAgBA,CAACvB,KAAK,CAAE,CAC/B,GAAI,CAAAoB,UAAU,CAAGF,kBAAkB,CAAClB,KAAK,CAAC,CAC1C,GAAI,CAAAiB,WAAW,CAAGvB,SAAS,CAAC0B,UAAU,CAAC,CAEvC,GAAIH,WAAW,CAAE,CACfD,gBAAgB,CAACC,WAAW,CAAEjB,KAAK,CAAC,CACtC,CAAC,IAAM,CACLN,SAAS,CAAC0B,UAAU,CAAC,CAAGjB,iBAAiB,CAACH,KAAK,CAAC,CAClD,CAEAL,YAAY,CAACG,mBAAmB,CAAGC,iBAAiB,CAACC,KAAK,CAAC,CAC7D,CAEA,QAAS,CAAAwB,eAAeA,CAACxB,KAAK,CAAE,CAC9B,GAAI,CAAAiB,WAAW,CAAGvB,SAAS,CAACwB,kBAAkB,CAAClB,KAAK,CAAC,CAAC,CAEtD,GAAIiB,WAAW,CAAE,CACfA,WAAW,CAACb,WAAW,CAAG,IAAI,CAC9Ba,WAAW,CAACJ,aAAa,CAAGI,WAAW,CAACP,YAAY,CACpDO,WAAW,CAACH,aAAa,CAAGG,WAAW,CAACN,YAAY,CACpDM,WAAW,CAACF,iBAAiB,CAAGE,WAAW,CAACL,gBAAgB,CAC5DK,WAAW,CAACP,YAAY,CAAGV,KAAK,CAACM,KAAK,CACtCW,WAAW,CAACN,YAAY,CAAGX,KAAK,CAACQ,KAAK,CACtCS,WAAW,CAACL,gBAAgB,CAAGb,iBAAiB,CAACC,KAAK,CAAC,CACvDL,YAAY,CAACG,mBAAmB,CAAGC,iBAAiB,CAACC,KAAK,CAAC,CAC7D,CAAC,IAAM,CACLqB,OAAO,CAACI,IAAI,CAAC,mDAAmD,CAAE,cAAc,CAAGC,UAAU,CAAC1B,KAAK,CAAC,CAAG,IAAI,CAAE,cAAc,CAAG2B,cAAc,CAAC,CAAC,CAAC,CACjJ,CACF,CAEA,QAAS,CAAAC,cAAcA,CAAC5B,KAAK,CAAE,CAC7B,GAAI,CAAAiB,WAAW,CAAGvB,SAAS,CAACwB,kBAAkB,CAAClB,KAAK,CAAC,CAAC,CAEtD,GAAIiB,WAAW,CAAE,CACfA,WAAW,CAACb,WAAW,CAAG,KAAK,CAC/Ba,WAAW,CAACJ,aAAa,CAAGI,WAAW,CAACP,YAAY,CACpDO,WAAW,CAACH,aAAa,CAAGG,WAAW,CAACN,YAAY,CACpDM,WAAW,CAACF,iBAAiB,CAAGE,WAAW,CAACL,gBAAgB,CAC5DK,WAAW,CAACP,YAAY,CAAGV,KAAK,CAACM,KAAK,CACtCW,WAAW,CAACN,YAAY,CAAGX,KAAK,CAACQ,KAAK,CACtCS,WAAW,CAACL,gBAAgB,CAAGb,iBAAiB,CAACC,KAAK,CAAC,CACvDL,YAAY,CAACG,mBAAmB,CAAGC,iBAAiB,CAACC,KAAK,CAAC,CAC7D,CAAC,IAAM,CACLqB,OAAO,CAACI,IAAI,CAAC,kDAAkD,CAAE,aAAa,CAAGC,UAAU,CAAC1B,KAAK,CAAC,CAAG,IAAI,CAAE,cAAc,CAAG2B,cAAc,CAAC,CAAC,CAAC,CAC/I,CACF,CAEA,QAAS,CAAAD,UAAUA,CAAC1B,KAAK,CAAE,CACzB,MAAO,CAAA6B,IAAI,CAACC,SAAS,CAAC,CACpBV,UAAU,CAAEpB,KAAK,CAACoB,UAAU,CAC5Bd,KAAK,CAAEN,KAAK,CAACM,KAAK,CAClBE,KAAK,CAAER,KAAK,CAACQ,KAAK,CAClBN,SAAS,CAAEH,iBAAiB,CAACC,KAAK,CACpC,CAAC,CAAC,CACJ,CAEA,QAAS,CAAA2B,cAAcA,CAAA,CAAG,CACxB,GAAI,CAAAI,OAAO,CAAGF,IAAI,CAACC,SAAS,CAACpC,SAAS,CAACsC,KAAK,CAAC,CAAC,CAAEvC,cAAc,CAAC,CAAC,CAEhE,GAAIC,SAAS,CAACuC,MAAM,CAAGxC,cAAc,CAAE,CACrCsC,OAAO,EAAI,mBAAmB,CAAGrC,SAAS,CAACuC,MAAM,CAAG,GAAG,CACzD,CAEA,MAAO,CAAAF,OAAO,CAChB,CAEA,GAAI,CAAAG,0BAA0B,CAAG,CAC/BC,gBAAgB,CAAE,QAAS,CAAAA,gBAAgBA,CAACC,YAAY,CAAEC,WAAW,CAAE,CACrE,GAAIlD,SAAS,CAACiD,YAAY,CAAC,CAAE,CAC3BC,WAAW,CAACC,cAAc,CAACC,OAAO,CAACf,eAAe,CAAC,CACrD,CAAC,IAAM,IAAItC,UAAU,CAACkD,YAAY,CAAC,CAAE,CACnCC,WAAW,CAACC,cAAc,CAACC,OAAO,CAAChB,gBAAgB,CAAC,CACpD5B,YAAY,CAACC,mBAAmB,CAAGyC,WAAW,CAACG,OAAO,CAACP,MAAM,CAE7D,GAAItC,YAAY,CAACC,mBAAmB,GAAK,CAAC,CAAE,CAC1CD,YAAY,CAACE,wBAAwB,CAAGwC,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC,CAACpB,UAAU,CAC3E,CACF,CAAC,IAAM,IAAIhC,QAAQ,CAACgD,YAAY,CAAC,CAAE,CACjCC,WAAW,CAACC,cAAc,CAACC,OAAO,CAACX,cAAc,CAAC,CAClDjC,YAAY,CAACC,mBAAmB,CAAGyC,WAAW,CAACG,OAAO,CAACP,MAAM,CAE7D,GAAItC,YAAY,CAACC,mBAAmB,GAAK,CAAC,CAAE,CAC1C,IAAK,GAAI,CAAA6C,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG/C,SAAS,CAACuC,MAAM,CAAEQ,CAAC,EAAE,CAAE,CACzC,GAAI,CAAAC,iBAAiB,CAAGhD,SAAS,CAAC+C,CAAC,CAAC,CAEpC,GAAIC,iBAAiB,EAAI,IAAI,EAAIA,iBAAiB,CAACtC,WAAW,CAAE,CAC9DT,YAAY,CAACE,wBAAwB,CAAG4C,CAAC,CACzC,MACF,CACF,CAEA,GAAIpD,OAAO,CAAE,CACX,GAAI,CAAAsD,YAAY,CAAGjD,SAAS,CAACC,YAAY,CAACE,wBAAwB,CAAC,CAEnE,GAAI,EAAE8C,YAAY,EAAI,IAAI,EAAIA,YAAY,CAACvC,WAAW,CAAC,CAAE,CACvDiB,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC,CACnD,CACF,CACF,CACF,CACF,CAAC,CACD3B,YAAY,CAAEA,YAChB,CAAC,CACD,cAAe,CAAAuC,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}