{"ast":null,"code":"var slice=Array.prototype.slice;export default function createOrderedCSSStyleSheet(sheet){var groups={};var selectors={};if(sheet!=null){var group;slice.call(sheet.cssRules).forEach(function(cssRule,i){var cssText=cssRule.cssText;if(cssText.indexOf('stylesheet-group')>-1){group=decodeGroupRule(cssRule);groups[group]={start:i,rules:[cssText]};}else{var selectorText=getSelectorText(cssText);if(selectorText!=null){selectors[selectorText]=true;groups[group].rules.push(cssText);}}});}function sheetInsert(sheet,group,text){var orderedGroups=getOrderedGroups(groups);var groupIndex=orderedGroups.indexOf(group);var nextGroupIndex=groupIndex+1;var nextGroup=orderedGroups[nextGroupIndex];var position=nextGroup!=null&&groups[nextGroup].start!=null?groups[nextGroup].start:sheet.cssRules.length;var isInserted=insertRuleAt(sheet,text,position);if(isInserted){if(groups[group].start==null){groups[group].start=position;}for(var i=nextGroupIndex;i<orderedGroups.length;i+=1){var groupNumber=orderedGroups[i];var previousStart=groups[groupNumber].start||0;groups[groupNumber].start=previousStart+1;}}return isInserted;}var OrderedCSSStyleSheet={getTextContent:function getTextContent(){return getOrderedGroups(groups).map(function(group){var rules=groups[group].rules;return rules.join('\\n');}).join('\\n');},insert:function insert(cssText,groupValue){var group=Number(groupValue);if(groups[group]==null){var markerRule=encodeGroupRule(group);groups[group]={start:null,rules:[markerRule]};if(sheet!=null){sheetInsert(sheet,group,markerRule);}}var selectorText=getSelectorText(cssText);if(selectorText!=null&&selectors[selectorText]==null){selectors[selectorText]=true;groups[group].rules.push(cssText);if(sheet!=null){var isInserted=sheetInsert(sheet,group,cssText);if(!isInserted){groups[group].rules.pop();}}}}};return OrderedCSSStyleSheet;}function encodeGroupRule(group){return\"[stylesheet-group=\\\"\"+group+\"\\\"]{}\";}function decodeGroupRule(cssRule){return Number(cssRule.selectorText.split(/[\"']/)[1]);}function getOrderedGroups(obj){return Object.keys(obj).map(Number).sort(function(a,b){return a>b?1:-1;});}var pattern=/\\s*([,])\\s*/g;function getSelectorText(cssText){var selector=cssText.split('{')[0].trim();return selector!==''?selector.replace(pattern,'$1'):null;}function insertRuleAt(root,cssText,position){try{root.insertRule(cssText,position);return true;}catch(e){return false;}}","map":{"version":3,"names":["slice","Array","prototype","createOrderedCSSStyleSheet","sheet","groups","selectors","group","call","cssRules","forEach","cssRule","i","cssText","indexOf","decodeGroupRule","start","rules","selectorText","getSelectorText","push","sheetInsert","text","orderedGroups","getOrderedGroups","groupIndex","nextGroupIndex","nextGroup","position","length","isInserted","insertRuleAt","groupNumber","previousStart","OrderedCSSStyleSheet","getTextContent","map","join","insert","groupValue","Number","markerRule","encodeGroupRule","pop","split","obj","Object","keys","sort","a","b","pattern","selector","trim","replace","root","insertRule","e"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/react-native-web/dist/exports/StyleSheet/createOrderedCSSStyleSheet.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar slice = Array.prototype.slice;\r\n/**\r\n * Order-based insertion of CSS.\r\n *\r\n * Each rule is associated with a numerically defined group.\r\n * Groups are ordered within the style sheet according to their number, with the\r\n * lowest first.\r\n *\r\n * Groups are implemented using marker rules. The selector of the first rule of\r\n * each group is used only to encode the group number for hydration. An\r\n * alternative implementation could rely on CSSMediaRule, allowing groups to be\r\n * treated as a sub-sheet, but the Edge implementation of CSSMediaRule is\r\n * broken.\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule\r\n * https://gist.github.com/necolas/aa0c37846ad6bd3b05b727b959e82674\r\n */\r\n\r\nexport default function createOrderedCSSStyleSheet(sheet) {\r\n  var groups = {};\r\n  var selectors = {};\r\n  /**\r\n   * Hydrate approximate record from any existing rules in the sheet.\r\n   */\r\n\r\n  if (sheet != null) {\r\n    var group;\r\n    slice.call(sheet.cssRules).forEach(function (cssRule, i) {\r\n      var cssText = cssRule.cssText; // Create record of existing selectors and rules\r\n\r\n      if (cssText.indexOf('stylesheet-group') > -1) {\r\n        group = decodeGroupRule(cssRule);\r\n        groups[group] = {\r\n          start: i,\r\n          rules: [cssText]\r\n        };\r\n      } else {\r\n        var selectorText = getSelectorText(cssText);\r\n\r\n        if (selectorText != null) {\r\n          selectors[selectorText] = true;\r\n          groups[group].rules.push(cssText);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function sheetInsert(sheet, group, text) {\r\n    var orderedGroups = getOrderedGroups(groups);\r\n    var groupIndex = orderedGroups.indexOf(group);\r\n    var nextGroupIndex = groupIndex + 1;\r\n    var nextGroup = orderedGroups[nextGroupIndex]; // Insert rule before the next group, or at the end of the stylesheet\r\n\r\n    var position = nextGroup != null && groups[nextGroup].start != null ? groups[nextGroup].start : sheet.cssRules.length;\r\n    var isInserted = insertRuleAt(sheet, text, position);\r\n\r\n    if (isInserted) {\r\n      // Set the starting index of the new group\r\n      if (groups[group].start == null) {\r\n        groups[group].start = position;\r\n      } // Increment the starting index of all subsequent groups\r\n\r\n\r\n      for (var i = nextGroupIndex; i < orderedGroups.length; i += 1) {\r\n        var groupNumber = orderedGroups[i];\r\n        var previousStart = groups[groupNumber].start || 0;\r\n        groups[groupNumber].start = previousStart + 1;\r\n      }\r\n    }\r\n\r\n    return isInserted;\r\n  }\r\n\r\n  var OrderedCSSStyleSheet = {\r\n    /**\r\n     * The textContent of the style sheet.\r\n     */\r\n    getTextContent: function getTextContent() {\r\n      return getOrderedGroups(groups).map(function (group) {\r\n        var rules = groups[group].rules;\r\n        return rules.join('\\n');\r\n      }).join('\\n');\r\n    },\r\n\r\n    /**\r\n     * Insert a rule into the style sheet\r\n     */\r\n    insert: function insert(cssText, groupValue) {\r\n      var group = Number(groupValue); // Create a new group.\r\n\r\n      if (groups[group] == null) {\r\n        var markerRule = encodeGroupRule(group); // Create the internal record.\r\n\r\n        groups[group] = {\r\n          start: null,\r\n          rules: [markerRule]\r\n        }; // Update CSSOM.\r\n\r\n        if (sheet != null) {\r\n          sheetInsert(sheet, group, markerRule);\r\n        }\r\n      } // selectorText is more reliable than cssText for insertion checks. The\r\n      // browser excludes vendor-prefixed properties and rewrites certain values\r\n      // making cssText more likely to be different from what was inserted.\r\n\r\n\r\n      var selectorText = getSelectorText(cssText);\r\n\r\n      if (selectorText != null && selectors[selectorText] == null) {\r\n        // Update the internal records.\r\n        selectors[selectorText] = true;\r\n        groups[group].rules.push(cssText); // Update CSSOM.\r\n\r\n        if (sheet != null) {\r\n          var isInserted = sheetInsert(sheet, group, cssText);\r\n\r\n          if (!isInserted) {\r\n            // Revert internal record change if a rule was rejected (e.g.,\r\n            // unrecognized pseudo-selector)\r\n            groups[group].rules.pop();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return OrderedCSSStyleSheet;\r\n}\r\n/**\r\n * Helper functions\r\n */\r\n\r\nfunction encodeGroupRule(group) {\r\n  return \"[stylesheet-group=\\\"\" + group + \"\\\"]{}\";\r\n}\r\n\r\nfunction decodeGroupRule(cssRule) {\r\n  return Number(cssRule.selectorText.split(/[\"']/)[1]);\r\n}\r\n\r\nfunction getOrderedGroups(obj) {\r\n  return Object.keys(obj).map(Number).sort(function (a, b) {\r\n    return a > b ? 1 : -1;\r\n  });\r\n}\r\n\r\nvar pattern = /\\s*([,])\\s*/g;\r\n\r\nfunction getSelectorText(cssText) {\r\n  var selector = cssText.split('{')[0].trim();\r\n  return selector !== '' ? selector.replace(pattern, '$1') : null;\r\n}\r\n\r\nfunction insertRuleAt(root, cssText, position) {\r\n  try {\r\n    // $FlowFixMe: Flow is missing CSSOM types needed to type 'root'.\r\n    root.insertRule(cssText, position);\r\n    return true;\r\n  } catch (e) {\r\n    // JSDOM doesn't support `CSSSMediaRule#insertRule`.\r\n    // Also ignore errors that occur from attempting to insert vendor-prefixed selectors.\r\n    return false;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}