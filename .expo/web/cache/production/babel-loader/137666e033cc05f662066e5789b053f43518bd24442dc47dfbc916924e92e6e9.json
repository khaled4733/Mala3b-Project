{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createForOfIteratorHelperLoose(r,e){var t=\"undefined\"!=typeof Symbol&&r[Symbol.iterator]||r[\"@@iterator\"];if(t)return(t=t.call(r)).next.bind(t);if(Array.isArray(r)||(t=_unsupportedIterableToArray(r))||e&&r&&\"number\"==typeof r.length){t&&(r=t);var o=0;return function(){return o>=r.length?{done:!0}:{done:!1,value:r[o++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(r,a){if(r){if(\"string\"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return\"Object\"===t&&r.constructor&&(t=r.constructor.name),\"Map\"===t||\"Set\"===t?Array.from(r):\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0;}}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++){n[e]=r[e];}return n;}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationRouteContext from\"./NavigationRouteContext\";var VISITED_ROUTE_KEYS=Symbol('VISITED_ROUTE_KEYS');export var shouldPreventRemove=function shouldPreventRemove(emitter,beforeRemoveListeners,currentRoutes,nextRoutes,action){var _action$VISITED_ROUTE;var nextRouteKeys=nextRoutes.map(function(route){return route.key;});var removedRoutes=currentRoutes.filter(function(route){return!nextRouteKeys.includes(route.key);}).reverse();var visitedRouteKeys=(_action$VISITED_ROUTE=action[VISITED_ROUTE_KEYS])!==null&&_action$VISITED_ROUTE!==void 0?_action$VISITED_ROUTE:new Set();var beforeRemoveAction=_objectSpread(_objectSpread({},action),{},_defineProperty({},VISITED_ROUTE_KEYS,visitedRouteKeys));for(var _iterator=_createForOfIteratorHelperLoose(removedRoutes),_step;!(_step=_iterator()).done;){var route=_step.value;var _beforeRemoveListener;if(visitedRouteKeys.has(route.key)){continue;}var isPrevented=(_beforeRemoveListener=beforeRemoveListeners[route.key])===null||_beforeRemoveListener===void 0?void 0:_beforeRemoveListener.call(beforeRemoveListeners,beforeRemoveAction);if(isPrevented){return true;}visitedRouteKeys.add(route.key);var event=emitter.emit({type:'beforeRemove',target:route.key,data:{action:beforeRemoveAction},canPreventDefault:true});if(event.defaultPrevented){return true;}}return false;};export default function useOnPreventRemove(_ref){var getState=_ref.getState,emitter=_ref.emitter,beforeRemoveListeners=_ref.beforeRemoveListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(NavigationRouteContext);var routeKey=route===null||route===void 0?void 0:route.key;React.useEffect(function(){if(routeKey){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('beforeRemove',routeKey,function(action){var state=getState();return shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,[],action);});}},[addKeyedListener,beforeRemoveListeners,emitter,getState,routeKey]);}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","currentRoutes","nextRoutes","action","_action$VISITED_ROUTE","nextRouteKeys","map","route","key","removedRoutes","filter","includes","reverse","visitedRouteKeys","Set","beforeRemoveAction","_objectSpread","_defineProperty","_iterator","_createForOfIteratorHelperLoose","_step","done","value","_beforeRemoveListener","has","isPrevented","call","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","_ref","getState","_React$useContext","useContext","addKeyedListener","routeKey","useEffect","state","routes"],"sources":["C:\\Users\\Ahmed Hamza\\Desktop\\Mal3ab project\\Mala3b-Project\\node_modules\\@react-navigation\\core\\lib\\module\\useOnPreventRemove.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}