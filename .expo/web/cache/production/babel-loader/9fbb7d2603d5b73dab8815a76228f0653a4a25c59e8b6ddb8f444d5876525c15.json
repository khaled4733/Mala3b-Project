{"ast":null,"code":"import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import useOnPreventRemove,{shouldPreventRemove}from\"./useOnPreventRemove\";export default function useOnAction(_ref){var router=_ref.router,getState=_ref.getState,setState=_ref.setState,key=_ref.key,actionListeners=_ref.actionListeners,beforeRemoveListeners=_ref.beforeRemoveListeners,routerConfigOptions=_ref.routerConfigOptions,emitter=_ref.emitter;var _React$useContext=React.useContext(NavigationBuilderContext),onActionParent=_React$useContext.onAction,onRouteFocusParent=_React$useContext.onRouteFocus,addListenerParent=_React$useContext.addListener,onDispatchAction=_React$useContext.onDispatchAction;var routerConfigOptionsRef=React.useRef(routerConfigOptions);React.useEffect(function(){routerConfigOptionsRef.current=routerConfigOptions;});var onAction=React.useCallback(function(action){var visitedNavigators=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var state=getState();if(visitedNavigators.has(state.key)){return false;}visitedNavigators.add(state.key);if(typeof action.target!=='string'||action.target===state.key){var result=router.getStateForAction(state,action,routerConfigOptionsRef.current);result=result===null&&action.target===state.key?state:result;if(result!==null){onDispatchAction(action,state===result);if(state!==result){var isPrevented=shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,result.routes,action);if(isPrevented){return true;}setState(result);}if(onRouteFocusParent!==undefined){var shouldFocus=router.shouldActionChangeFocus(action);if(shouldFocus&&key!==undefined){onRouteFocusParent(key);}}return true;}}if(onActionParent!==undefined){if(onActionParent(action,visitedNavigators)){return true;}}for(var i=actionListeners.length-1;i>=0;i--){var listener=actionListeners[i];if(listener(action,visitedNavigators)){return true;}}return false;},[actionListeners,beforeRemoveListeners,emitter,getState,key,onActionParent,onDispatchAction,onRouteFocusParent,router,setState]);useOnPreventRemove({getState:getState,emitter:emitter,beforeRemoveListeners:beforeRemoveListeners});React.useEffect(function(){return addListenerParent===null||addListenerParent===void 0?void 0:addListenerParent('action',onAction);},[addListenerParent,onAction]);return onAction;}","map":{"version":3,"names":["React","NavigationBuilderContext","useOnPreventRemove","shouldPreventRemove","useOnAction","_ref","router","getState","setState","key","actionListeners","beforeRemoveListeners","routerConfigOptions","emitter","_React$useContext","useContext","onActionParent","onAction","onRouteFocusParent","onRouteFocus","addListenerParent","addListener","onDispatchAction","routerConfigOptionsRef","useRef","useEffect","current","useCallback","action","visitedNavigators","arguments","length","undefined","Set","state","has","add","target","result","getStateForAction","isPrevented","routes","shouldFocus","shouldActionChangeFocus","i","listener"],"sources":["C:\\Users\\Ahmed Hamza\\Desktop\\Mal3ab project\\Mala3b-Project\\node_modules\\@react-navigation\\core\\lib\\module\\useOnAction.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildActionListener,\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useOnPreventRemove, { shouldPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport default function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (let i = actionListeners.length - 1; i >= 0; i--) {\n        const listener = actionListeners[i];\n\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}