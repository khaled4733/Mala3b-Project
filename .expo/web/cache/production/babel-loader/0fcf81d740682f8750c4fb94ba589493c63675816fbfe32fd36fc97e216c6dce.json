{"ast":null,"code":"import*as React from'react';var MISSING_CONTEXT_ERROR=\"Couldn't find a schedule context.\";export var ScheduleUpdateContext=React.createContext({scheduleUpdate:function scheduleUpdate(){throw new Error(MISSING_CONTEXT_ERROR);},flushUpdates:function flushUpdates(){throw new Error(MISSING_CONTEXT_ERROR);}});export default function useScheduleUpdate(callback){var _React$useContext=React.useContext(ScheduleUpdateContext),scheduleUpdate=_React$useContext.scheduleUpdate,flushUpdates=_React$useContext.flushUpdates;scheduleUpdate(callback);React.useEffect(flushUpdates);}","map":{"version":3,"names":["React","MISSING_CONTEXT_ERROR","ScheduleUpdateContext","createContext","scheduleUpdate","Error","flushUpdates","useScheduleUpdate","callback","_React$useContext","useContext","useEffect"],"sources":["C:\\Users\\Ahmed Hamza\\Desktop\\Mal3ab project\\Mala3b-Project\\node_modules\\@react-navigation\\core\\lib\\module\\useScheduleUpdate.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n\nexport const ScheduleUpdateContext = React.createContext<{\n  scheduleUpdate: (callback: () => void) => void;\n  flushUpdates: () => void;\n}>({\n  scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * When screen config changes, we want to update the navigator in the same update phase.\n * However, navigation state is in the root component and React won't let us update it from a child.\n * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n * It lets all subsequent updates access the latest state so it stays correct.\n * Then we call setState during after the component updates.\n */\nexport default function useScheduleUpdate(callback: () => void) {\n  const { scheduleUpdate, flushUpdates } = React.useContext(\n    ScheduleUpdateContext\n  );\n\n  scheduleUpdate(callback);\n\n  React.useEffect(flushUpdates);\n}\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,GAAM,CAAAC,qBAAqB,CAAG,mCAA9B,CAEA,MAAO,IAAM,CAAAC,qBAAqB,CAAGF,KAAK,CAACG,aAAN,CAGlC,CACDC,cAAc,UAAAA,eAAA,CAAG,CACf,KAAM,IAAI,CAAAC,KAAJ,CAAUJ,qBAAV,CAAN,CACD,CAHA,CAIDK,YAAY,UAAAA,aAAA,CAAG,CACb,KAAM,IAAI,CAAAD,KAAJ,CAAUJ,qBAAV,CAAN,CACD,CANA,CAHkC,CAA9B,CAmBP,cAAe,SAAS,CAAAM,iBAATA,CAA2BC,QAA3B,CAAiD,CAC9D,IAAAC,iBAAA,CAAyCT,KAAK,CAACU,UAAN,CACvCR,qBADuC,CAAzC,CAAQE,cAAF,CAAAK,iBAAA,CAAEL,cAAF,CAAkBE,YAAA,CAAAG,iBAAA,CAAAH,YAAA,CAIxBF,cAAc,CAACI,QAAD,CAAd,CAEAR,KAAK,CAACW,SAAN,CAAgBL,YAAhB,EACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}