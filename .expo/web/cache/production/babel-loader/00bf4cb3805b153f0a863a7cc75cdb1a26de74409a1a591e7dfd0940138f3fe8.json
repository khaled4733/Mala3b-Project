{"ast":null,"code":"'use strict';import invariant from'fbjs/lib/invariant';var EventSubscriptionVendor=function(){function EventSubscriptionVendor(){this._subscriptionsForType={};}var _proto=EventSubscriptionVendor.prototype;_proto.addSubscription=function addSubscription(eventType,subscription){invariant(subscription.subscriber===this,'The subscriber of the subscription is incorrectly set.');if(!this._subscriptionsForType[eventType]){this._subscriptionsForType[eventType]=[];}var key=this._subscriptionsForType[eventType].length;this._subscriptionsForType[eventType].push(subscription);subscription.eventType=eventType;subscription.key=key;return subscription;};_proto.removeAllSubscriptions=function removeAllSubscriptions(eventType){if(eventType==null){this._subscriptionsForType={};}else{delete this._subscriptionsForType[eventType];}};_proto.removeSubscription=function removeSubscription(subscription){var eventType=subscription.eventType;var key=subscription.key;var subscriptionsForType=this._subscriptionsForType[eventType];if(subscriptionsForType){delete subscriptionsForType[key];}};_proto.getSubscriptionsForType=function getSubscriptionsForType(eventType){return this._subscriptionsForType[eventType];};return EventSubscriptionVendor;}();export default EventSubscriptionVendor;","map":{"version":3,"names":["invariant","EventSubscriptionVendor","_subscriptionsForType","_proto","prototype","addSubscription","eventType","subscription","subscriber","key","length","push","removeAllSubscriptions","removeSubscription","subscriptionsForType","getSubscriptionsForType"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscriptionVendor.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n/**\r\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\r\n * subscribed to a particular event type.\r\n */\r\nvar EventSubscriptionVendor = /*#__PURE__*/function () {\r\n  function EventSubscriptionVendor() {\r\n    this._subscriptionsForType = {};\r\n  }\r\n  /**\r\n   * Adds a subscription keyed by an event type.\r\n   *\r\n   * @param {string} eventType\r\n   * @param {EventSubscription} subscription\r\n   */\r\n\r\n\r\n  var _proto = EventSubscriptionVendor.prototype;\r\n\r\n  _proto.addSubscription = function addSubscription(eventType, subscription) {\r\n    invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');\r\n\r\n    if (!this._subscriptionsForType[eventType]) {\r\n      this._subscriptionsForType[eventType] = [];\r\n    }\r\n\r\n    var key = this._subscriptionsForType[eventType].length;\r\n\r\n    this._subscriptionsForType[eventType].push(subscription);\r\n\r\n    subscription.eventType = eventType;\r\n    subscription.key = key;\r\n    return subscription;\r\n  }\r\n  /**\r\n   * Removes a bulk set of the subscriptions.\r\n   *\r\n   * @param {?string} eventType - Optional name of the event type whose\r\n   *   registered supscriptions to remove, if null remove all subscriptions.\r\n   */\r\n  ;\r\n\r\n  _proto.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\r\n    if (eventType == null) {\r\n      this._subscriptionsForType = {};\r\n    } else {\r\n      delete this._subscriptionsForType[eventType];\r\n    }\r\n  }\r\n  /**\r\n   * Removes a specific subscription. Instead of calling this function, call\r\n   * `subscription.remove()` directly.\r\n   *\r\n   * @param {object} subscription\r\n   */\r\n  ;\r\n\r\n  _proto.removeSubscription = function removeSubscription(subscription) {\r\n    var eventType = subscription.eventType;\r\n    var key = subscription.key;\r\n    var subscriptionsForType = this._subscriptionsForType[eventType];\r\n\r\n    if (subscriptionsForType) {\r\n      delete subscriptionsForType[key];\r\n    }\r\n  }\r\n  /**\r\n   * Returns the array of subscriptions that are currently registered for the\r\n   * given event type.\r\n   *\r\n   * Note: This array can be potentially sparse as subscriptions are deleted\r\n   * from it when they are removed.\r\n   *\r\n   * TODO: This returns a nullable array. wat?\r\n   *\r\n   * @param {string} eventType\r\n   * @returns {?array}\r\n   */\r\n  ;\r\n\r\n  _proto.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\r\n    return this._subscriptionsForType[eventType];\r\n  };\r\n\r\n  return EventSubscriptionVendor;\r\n}();\r\n\r\nexport default EventSubscriptionVendor;"],"mappings":"AASA,YAAY,CAEZ,MAAO,CAAAA,SAAS,KAAM,oBAAoB,CAM1C,GAAI,CAAAC,uBAAuB,CAAgB,UAAY,CACrD,QAAS,CAAAA,uBAAuBA,CAAA,CAAG,CACjC,IAAI,CAACC,qBAAqB,CAAG,CAAC,CAAC,CACjC,CASA,GAAI,CAAAC,MAAM,CAAGF,uBAAuB,CAACG,SAAS,CAE9CD,MAAM,CAACE,eAAe,CAAG,QAAS,CAAAA,eAAeA,CAACC,SAAS,CAAEC,YAAY,CAAE,CACzEP,SAAS,CAACO,YAAY,CAACC,UAAU,GAAK,IAAI,CAAE,wDAAwD,CAAC,CAErG,GAAI,CAAC,IAAI,CAACN,qBAAqB,CAACI,SAAS,CAAC,CAAE,CAC1C,IAAI,CAACJ,qBAAqB,CAACI,SAAS,CAAC,CAAG,EAAE,CAC5C,CAEA,GAAI,CAAAG,GAAG,CAAG,IAAI,CAACP,qBAAqB,CAACI,SAAS,CAAC,CAACI,MAAM,CAEtD,IAAI,CAACR,qBAAqB,CAACI,SAAS,CAAC,CAACK,IAAI,CAACJ,YAAY,CAAC,CAExDA,YAAY,CAACD,SAAS,CAAGA,SAAS,CAClCC,YAAY,CAACE,GAAG,CAAGA,GAAG,CACtB,MAAO,CAAAF,YAAY,CACrB,CAAC,CASDJ,MAAM,CAACS,sBAAsB,CAAG,QAAS,CAAAA,sBAAsBA,CAACN,SAAS,CAAE,CACzE,GAAIA,SAAS,EAAI,IAAI,CAAE,CACrB,IAAI,CAACJ,qBAAqB,CAAG,CAAC,CAAC,CACjC,CAAC,IAAM,CACL,MAAO,KAAI,CAACA,qBAAqB,CAACI,SAAS,CAAC,CAC9C,CACF,CAAC,CASDH,MAAM,CAACU,kBAAkB,CAAG,QAAS,CAAAA,kBAAkBA,CAACN,YAAY,CAAE,CACpE,GAAI,CAAAD,SAAS,CAAGC,YAAY,CAACD,SAAS,CACtC,GAAI,CAAAG,GAAG,CAAGF,YAAY,CAACE,GAAG,CAC1B,GAAI,CAAAK,oBAAoB,CAAG,IAAI,CAACZ,qBAAqB,CAACI,SAAS,CAAC,CAEhE,GAAIQ,oBAAoB,CAAE,CACxB,MAAO,CAAAA,oBAAoB,CAACL,GAAG,CAAC,CAClC,CACF,CAAC,CAeDN,MAAM,CAACY,uBAAuB,CAAG,QAAS,CAAAA,uBAAuBA,CAACT,SAAS,CAAE,CAC3E,MAAO,KAAI,CAACJ,qBAAqB,CAACI,SAAS,CAAC,CAC9C,CAAC,CAED,MAAO,CAAAL,uBAAuB,CAChC,CAAC,CAAC,CAAC,CAEH,cAAe,CAAAA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}