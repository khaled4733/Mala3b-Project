{"ast":null,"code":"import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';var focusVisibleAttributeName='data-focusvisible-polyfill';var rule=\":focus:not([\"+focusVisibleAttributeName+\"]){outline: none;}\";var modality=function modality(insertRule){insertRule(rule);if(!canUseDOM){return;}var hadKeyboardEvent=true;var hadFocusVisibleRecently=false;var hadFocusVisibleRecentlyTimeout=null;var inputTypesWhitelist={text:true,search:true,url:true,tel:true,email:true,password:true,number:true,date:true,month:true,week:true,time:true,datetime:true,'datetime-local':true};function isValidFocusTarget(el){if(el&&el!==document&&el.nodeName!=='HTML'&&el.nodeName!=='BODY'&&'classList'in el&&'contains'in el.classList){return true;}return false;}function focusTriggersKeyboardModality(el){var type=el.type;var tagName=el.tagName;var isReadOnly=el.readOnly;if(tagName==='INPUT'&&inputTypesWhitelist[type]&&!isReadOnly){return true;}if(tagName==='TEXTAREA'&&!isReadOnly){return true;}if(el.isContentEditable){return true;}return false;}function addFocusVisibleAttribute(el){if(el.hasAttribute(focusVisibleAttributeName)){return;}el.setAttribute(focusVisibleAttributeName,true);}function removeFocusVisibleAttribute(el){el.removeAttribute(focusVisibleAttributeName);}function removeAllFocusVisibleAttributes(){var list=document.querySelectorAll(\"[\"+focusVisibleAttributeName+\"]\");for(var i=0;i<list.length;i+=1){removeFocusVisibleAttribute(list[i]);}}function onKeyDown(e){if(e.key!=='Tab'&&(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)){return;}if(isValidFocusTarget(document.activeElement)){addFocusVisibleAttribute(document.activeElement);}hadKeyboardEvent=true;}function onPointerDown(e){if(hadKeyboardEvent===true){removeAllFocusVisibleAttributes();}hadKeyboardEvent=false;}function onFocus(e){if(!isValidFocusTarget(e.target)){return;}if(hadKeyboardEvent||focusTriggersKeyboardModality(e.target)){addFocusVisibleAttribute(e.target);}}function onBlur(e){if(!isValidFocusTarget(e.target)){return;}if(e.target.hasAttribute(focusVisibleAttributeName)){hadFocusVisibleRecently=true;window.clearTimeout(hadFocusVisibleRecentlyTimeout);hadFocusVisibleRecentlyTimeout=window.setTimeout(function(){hadFocusVisibleRecently=false;window.clearTimeout(hadFocusVisibleRecentlyTimeout);},100);removeFocusVisibleAttribute(e.target);}}function onVisibilityChange(e){if(document.visibilityState==='hidden'){if(hadFocusVisibleRecently){hadKeyboardEvent=true;}addInitialPointerMoveListeners();}}function addInitialPointerMoveListeners(){document.addEventListener('mousemove',onInitialPointerMove);document.addEventListener('mousedown',onInitialPointerMove);document.addEventListener('mouseup',onInitialPointerMove);document.addEventListener('pointermove',onInitialPointerMove);document.addEventListener('pointerdown',onInitialPointerMove);document.addEventListener('pointerup',onInitialPointerMove);document.addEventListener('touchmove',onInitialPointerMove);document.addEventListener('touchstart',onInitialPointerMove);document.addEventListener('touchend',onInitialPointerMove);}function removeInitialPointerMoveListeners(){document.removeEventListener('mousemove',onInitialPointerMove);document.removeEventListener('mousedown',onInitialPointerMove);document.removeEventListener('mouseup',onInitialPointerMove);document.removeEventListener('pointermove',onInitialPointerMove);document.removeEventListener('pointerdown',onInitialPointerMove);document.removeEventListener('pointerup',onInitialPointerMove);document.removeEventListener('touchmove',onInitialPointerMove);document.removeEventListener('touchstart',onInitialPointerMove);document.removeEventListener('touchend',onInitialPointerMove);}function onInitialPointerMove(e){if(e.target.nodeName==='HTML'){return;}hadKeyboardEvent=false;removeInitialPointerMoveListeners();}document.addEventListener('keydown',onKeyDown,true);document.addEventListener('mousedown',onPointerDown,true);document.addEventListener('pointerdown',onPointerDown,true);document.addEventListener('touchstart',onPointerDown,true);document.addEventListener('focus',onFocus,true);document.addEventListener('blur',onBlur,true);document.addEventListener('visibilitychange',onVisibilityChange,true);addInitialPointerMoveListeners();};export default modality;","map":{"version":3,"names":["canUseDOM","focusVisibleAttributeName","rule","modality","insertRule","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","isValidFocusTarget","el","document","nodeName","classList","focusTriggersKeyboardModality","type","tagName","isReadOnly","readOnly","isContentEditable","addFocusVisibleAttribute","hasAttribute","setAttribute","removeFocusVisibleAttribute","removeAttribute","removeAllFocusVisibleAttributes","list","querySelectorAll","i","length","onKeyDown","e","key","metaKey","altKey","ctrlKey","shiftKey","activeElement","onPointerDown","onFocus","target","onBlur","window","clearTimeout","setTimeout","onVisibilityChange","visibilityState","addInitialPointerMoveListeners","addEventListener","onInitialPointerMove","removeInitialPointerMoveListeners","removeEventListener"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/react-native-web/dist/exports/StyleSheet/modality.js"],"sourcesContent":["/**\r\n * Adapts focus styles based on the user's active input modality (i.e., how\r\n * they are interacting with the UI right now).\r\n *\r\n * Focus styles are only relevant when using the keyboard to interact with the\r\n * page. If we only show the focus ring when relevant, we can avoid user\r\n * confusion without compromising accessibility.\r\n *\r\n * The script uses two heuristics to determine whether the keyboard is being used:\r\n *\r\n * 1. a keydown event occurred immediately before a focus event;\r\n * 2. a focus event happened on an element which requires keyboard interaction (e.g., a text field);\r\n *\r\n * This software or document includes material copied from or derived from https://github.com/WICG/focus-visible.\r\n * Copyright © 2018 W3C® (MIT, ERCIM, Keio, Beihang).\r\n * W3C Software Notice and License: https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\nvar focusVisibleAttributeName = 'data-focusvisible-polyfill';\r\nvar rule = \":focus:not([\" + focusVisibleAttributeName + \"]){outline: none;}\";\r\n\r\nvar modality = function modality(insertRule) {\r\n  insertRule(rule);\r\n\r\n  if (!canUseDOM) {\r\n    return;\r\n  }\r\n\r\n  var hadKeyboardEvent = true;\r\n  var hadFocusVisibleRecently = false;\r\n  var hadFocusVisibleRecentlyTimeout = null;\r\n  var inputTypesWhitelist = {\r\n    text: true,\r\n    search: true,\r\n    url: true,\r\n    tel: true,\r\n    email: true,\r\n    password: true,\r\n    number: true,\r\n    date: true,\r\n    month: true,\r\n    week: true,\r\n    time: true,\r\n    datetime: true,\r\n    'datetime-local': true\r\n  };\r\n  /**\r\n   * Helper function for legacy browsers and iframes which sometimes focus\r\n   * elements like document, body, and non-interactive SVG.\r\n   */\r\n\r\n  function isValidFocusTarget(el) {\r\n    if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Computes whether the given element should automatically trigger the\r\n   * `focus-visible` attribute being added, i.e. whether it should always match\r\n   * `:focus-visible` when focused.\r\n   */\r\n\r\n\r\n  function focusTriggersKeyboardModality(el) {\r\n    var type = el.type;\r\n    var tagName = el.tagName;\r\n    var isReadOnly = el.readOnly;\r\n\r\n    if (tagName === 'INPUT' && inputTypesWhitelist[type] && !isReadOnly) {\r\n      return true;\r\n    }\r\n\r\n    if (tagName === 'TEXTAREA' && !isReadOnly) {\r\n      return true;\r\n    }\r\n\r\n    if (el.isContentEditable) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Add the `focus-visible` attribute to the given element if it was not added by\r\n   * the author.\r\n   */\r\n\r\n\r\n  function addFocusVisibleAttribute(el) {\r\n    if (el.hasAttribute(focusVisibleAttributeName)) {\r\n      return;\r\n    }\r\n\r\n    el.setAttribute(focusVisibleAttributeName, true);\r\n  }\r\n  /**\r\n   * Remove the `focus-visible` attribute from the given element if it was not\r\n   * originally added by the author.\r\n   */\r\n\r\n\r\n  function removeFocusVisibleAttribute(el) {\r\n    el.removeAttribute(focusVisibleAttributeName);\r\n  }\r\n  /**\r\n   * Remove the `focus-visible` attribute from all elements in the document.\r\n   */\r\n\r\n\r\n  function removeAllFocusVisibleAttributes() {\r\n    var list = document.querySelectorAll(\"[\" + focusVisibleAttributeName + \"]\");\r\n\r\n    for (var i = 0; i < list.length; i += 1) {\r\n      removeFocusVisibleAttribute(list[i]);\r\n    }\r\n  }\r\n  /**\r\n   * Treat `keydown` as a signal that the user is in keyboard modality.\r\n   * Apply `focus-visible` to any current active element and keep track\r\n   * of our keyboard modality state with `hadKeyboardEvent`.\r\n   */\r\n\r\n\r\n  function onKeyDown(e) {\r\n    if (e.key !== 'Tab' && (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)) {\r\n      return;\r\n    }\r\n\r\n    if (isValidFocusTarget(document.activeElement)) {\r\n      addFocusVisibleAttribute(document.activeElement);\r\n    }\r\n\r\n    hadKeyboardEvent = true;\r\n  }\r\n  /**\r\n   * If at any point a user clicks with a pointing device, ensure that we change\r\n   * the modality away from keyboard.\r\n   * This avoids the situation where a user presses a key on an already focused\r\n   * element, and then clicks on a different element, focusing it with a\r\n   * pointing device, while we still think we're in keyboard modality.\r\n   * It also avoids the situation where a user presses on an element within a\r\n   * previously keyboard-focused element (i.e., `e.target` is not the previously\r\n   * focused element, but one of its descendants) and we need to remove the\r\n   * focus ring because a `blur` event doesn't occur.\r\n   */\r\n\r\n\r\n  function onPointerDown(e) {\r\n    if (hadKeyboardEvent === true) {\r\n      removeAllFocusVisibleAttributes();\r\n    }\r\n\r\n    hadKeyboardEvent = false;\r\n  }\r\n  /**\r\n   * On `focus`, add the `focus-visible` attribute to the target if:\r\n   * - the target received focus as a result of keyboard navigation, or\r\n   * - the event target is an element that will likely require interaction\r\n   *   via the keyboard (e.g. a text box)\r\n   */\r\n\r\n\r\n  function onFocus(e) {\r\n    // Prevent IE from focusing the document or HTML element.\r\n    if (!isValidFocusTarget(e.target)) {\r\n      return;\r\n    }\r\n\r\n    if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\r\n      addFocusVisibleAttribute(e.target);\r\n    }\r\n  }\r\n  /**\r\n   * On `blur`, remove the `focus-visible` attribute from the target.\r\n   */\r\n\r\n\r\n  function onBlur(e) {\r\n    if (!isValidFocusTarget(e.target)) {\r\n      return;\r\n    }\r\n\r\n    if (e.target.hasAttribute(focusVisibleAttributeName)) {\r\n      // To detect a tab/window switch, we look for a blur event followed\r\n      // rapidly by a visibility change.\r\n      // If we don't see a visibility change within 100ms, it's probably a\r\n      // regular focus change.\r\n      hadFocusVisibleRecently = true;\r\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\r\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\r\n        hadFocusVisibleRecently = false;\r\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\r\n      }, 100);\r\n      removeFocusVisibleAttribute(e.target);\r\n    }\r\n  }\r\n  /**\r\n   * If the user changes tabs, keep track of whether or not the previously\r\n   * focused element had the focus-visible attribute.\r\n   */\r\n\r\n\r\n  function onVisibilityChange(e) {\r\n    if (document.visibilityState === 'hidden') {\r\n      // If the tab becomes active again, the browser will handle calling focus\r\n      // on the element (Safari actually calls it twice).\r\n      // If this tab change caused a blur on an element with focus-visible,\r\n      // re-apply the attribute when the user switches back to the tab.\r\n      if (hadFocusVisibleRecently) {\r\n        hadKeyboardEvent = true;\r\n      }\r\n\r\n      addInitialPointerMoveListeners();\r\n    }\r\n  }\r\n  /**\r\n   * Add a group of listeners to detect usage of any pointing devices.\r\n   * These listeners will be added when the polyfill first loads, and anytime\r\n   * the window is blurred, so that they are active when the window regains\r\n   * focus.\r\n   */\r\n\r\n\r\n  function addInitialPointerMoveListeners() {\r\n    document.addEventListener('mousemove', onInitialPointerMove);\r\n    document.addEventListener('mousedown', onInitialPointerMove);\r\n    document.addEventListener('mouseup', onInitialPointerMove);\r\n    document.addEventListener('pointermove', onInitialPointerMove);\r\n    document.addEventListener('pointerdown', onInitialPointerMove);\r\n    document.addEventListener('pointerup', onInitialPointerMove);\r\n    document.addEventListener('touchmove', onInitialPointerMove);\r\n    document.addEventListener('touchstart', onInitialPointerMove);\r\n    document.addEventListener('touchend', onInitialPointerMove);\r\n  }\r\n\r\n  function removeInitialPointerMoveListeners() {\r\n    document.removeEventListener('mousemove', onInitialPointerMove);\r\n    document.removeEventListener('mousedown', onInitialPointerMove);\r\n    document.removeEventListener('mouseup', onInitialPointerMove);\r\n    document.removeEventListener('pointermove', onInitialPointerMove);\r\n    document.removeEventListener('pointerdown', onInitialPointerMove);\r\n    document.removeEventListener('pointerup', onInitialPointerMove);\r\n    document.removeEventListener('touchmove', onInitialPointerMove);\r\n    document.removeEventListener('touchstart', onInitialPointerMove);\r\n    document.removeEventListener('touchend', onInitialPointerMove);\r\n  }\r\n  /**\r\n   * When the polfyill first loads, assume the user is in keyboard modality.\r\n   * If any event is received from a pointing device (e.g. mouse, pointer,\r\n   * touch), turn off keyboard modality.\r\n   * This accounts for situations where focus enters the page from the URL bar.\r\n   */\r\n\r\n\r\n  function onInitialPointerMove(e) {\r\n    // Work around a Safari quirk that fires a mousemove on <html> whenever the\r\n    // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\r\n    if (e.target.nodeName === 'HTML') {\r\n      return;\r\n    }\r\n\r\n    hadKeyboardEvent = false;\r\n    removeInitialPointerMoveListeners();\r\n  }\r\n\r\n  document.addEventListener('keydown', onKeyDown, true);\r\n  document.addEventListener('mousedown', onPointerDown, true);\r\n  document.addEventListener('pointerdown', onPointerDown, true);\r\n  document.addEventListener('touchstart', onPointerDown, true);\r\n  document.addEventListener('focus', onFocus, true);\r\n  document.addEventListener('blur', onBlur, true);\r\n  document.addEventListener('visibilitychange', onVisibilityChange, true);\r\n  addInitialPointerMoveListeners();\r\n};\r\n\r\nexport default modality;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}