{"ast":null,"code":"import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';function isScreenReaderEnabled(){return new Promise(function(resolve,reject){resolve(true);});}var prefersReducedMotionMedia=canUseDOM&&typeof window.matchMedia==='function'?window.matchMedia('(prefers-reduced-motion: reduce)'):null;function isReduceMotionEnabled(){return new Promise(function(resolve,reject){resolve(prefersReducedMotionMedia?prefersReducedMotionMedia.matches:true);});}function addChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.addEventListener!=null?prefersReducedMotionMedia.addEventListener('change',fn):prefersReducedMotionMedia.addListener(fn);}}function removeChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.removeEventListener!=null?prefersReducedMotionMedia.removeEventListener('change',fn):prefersReducedMotionMedia.removeListener(fn);}}var handlers={};var AccessibilityInfo={isScreenReaderEnabled:isScreenReaderEnabled,isReduceMotionEnabled:isReduceMotionEnabled,fetch:isScreenReaderEnabled,addEventListener:function addEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){if(!prefersReducedMotionMedia){return;}var listener=function listener(event){handler(event.matches);};addChangeListener(listener);handlers[handler]=listener;}return{remove:function remove(){return AccessibilityInfo.removeEventListener(eventName,handler);}};},setAccessibilityFocus:function setAccessibilityFocus(reactTag){},announceForAccessibility:function announceForAccessibility(announcement){},removeEventListener:function removeEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){var listener=handlers[handler];if(!listener||!prefersReducedMotionMedia){return;}removeChangeListener(listener);}return;}};export default AccessibilityInfo;","map":{"version":3,"names":["canUseDOM","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","window","matchMedia","isReduceMotionEnabled","matches","addChangeListener","fn","addEventListener","addListener","removeChangeListener","removeEventListener","removeListener","handlers","AccessibilityInfo","fetch","eventName","handler","listener","event","remove","setAccessibilityFocus","reactTag","announceForAccessibility","announcement"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\n\r\nfunction isScreenReaderEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(true);\r\n  });\r\n}\r\n\r\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\r\n\r\nfunction isReduceMotionEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\r\n  });\r\n}\r\n\r\nfunction addChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\r\n  }\r\n}\r\n\r\nfunction removeChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\r\n  }\r\n}\r\n\r\nvar handlers = {};\r\nvar AccessibilityInfo = {\r\n  /**\r\n   * Query whether a screen reader is currently enabled.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isScreenReaderEnabled: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Query whether the user prefers reduced motion.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isReduceMotionEnabled: isReduceMotionEnabled,\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  fetch: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Add an event handler. Supported events: reduceMotionChanged\r\n   */\r\n  addEventListener: function addEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      if (!prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      var listener = function listener(event) {\r\n        handler(event.matches);\r\n      };\r\n\r\n      addChangeListener(listener);\r\n      handlers[handler] = listener;\r\n    }\r\n\r\n    return {\r\n      remove: function remove() {\r\n        return AccessibilityInfo.removeEventListener(eventName, handler);\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Set accessibility focus to a react component.\r\n   */\r\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\r\n\r\n  /**\r\n   * Post a string to be announced by the screen reader.\r\n   */\r\n  announceForAccessibility: function announceForAccessibility(announcement) {},\r\n\r\n  /**\r\n   * Remove an event handler.\r\n   */\r\n  removeEventListener: function removeEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      var listener = handlers[handler];\r\n\r\n      if (!listener || !prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      removeChangeListener(listener);\r\n    }\r\n\r\n    return;\r\n  }\r\n};\r\nexport default AccessibilityInfo;"],"mappings":"AAQA,OAASA,SAAS,KAAQ,+BAA+B,CAEzD,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC/B,MAAO,IAAI,CAAAC,OAAO,CAAC,SAAUC,OAAO,CAAEC,MAAM,CAAE,CAC5CD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACJ,CAEA,GAAI,CAAAE,yBAAyB,CAAGL,SAAS,EAAI,MAAO,CAAAM,MAAM,CAACC,UAAU,GAAK,UAAU,CAAGD,MAAM,CAACC,UAAU,CAAC,kCAAkC,CAAC,CAAG,IAAI,CAEnJ,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC/B,MAAO,IAAI,CAAAN,OAAO,CAAC,SAAUC,OAAO,CAAEC,MAAM,CAAE,CAC5CD,OAAO,CAACE,yBAAyB,CAAGA,yBAAyB,CAACI,OAAO,CAAG,IAAI,CAAC,CAC/E,CAAC,CAAC,CACJ,CAEA,QAAS,CAAAC,iBAAiBA,CAACC,EAAE,CAAE,CAC7B,GAAIN,yBAAyB,EAAI,IAAI,CAAE,CACrCA,yBAAyB,CAACO,gBAAgB,EAAI,IAAI,CAAGP,yBAAyB,CAACO,gBAAgB,CAAC,QAAQ,CAAED,EAAE,CAAC,CAAGN,yBAAyB,CAACQ,WAAW,CAACF,EAAE,CAAC,CAC3J,CACF,CAEA,QAAS,CAAAG,oBAAoBA,CAACH,EAAE,CAAE,CAChC,GAAIN,yBAAyB,EAAI,IAAI,CAAE,CACrCA,yBAAyB,CAACU,mBAAmB,EAAI,IAAI,CAAGV,yBAAyB,CAACU,mBAAmB,CAAC,QAAQ,CAAEJ,EAAE,CAAC,CAAGN,yBAAyB,CAACW,cAAc,CAACL,EAAE,CAAC,CACpK,CACF,CAEA,GAAI,CAAAM,QAAQ,CAAG,CAAC,CAAC,CACjB,GAAI,CAAAC,iBAAiB,CAAG,CAOtBjB,qBAAqB,CAAEA,qBAAqB,CAQ5CO,qBAAqB,CAAEA,qBAAqB,CAK5CW,KAAK,CAAElB,qBAAqB,CAK5BW,gBAAgB,CAAE,QAAS,CAAAA,gBAAgBA,CAACQ,SAAS,CAAEC,OAAO,CAAE,CAC9D,GAAID,SAAS,GAAK,qBAAqB,CAAE,CACvC,GAAI,CAACf,yBAAyB,CAAE,CAC9B,OACF,CAEA,GAAI,CAAAiB,QAAQ,CAAG,QAAS,CAAAA,QAAQA,CAACC,KAAK,CAAE,CACtCF,OAAO,CAACE,KAAK,CAACd,OAAO,CAAC,CACxB,CAAC,CAEDC,iBAAiB,CAACY,QAAQ,CAAC,CAC3BL,QAAQ,CAACI,OAAO,CAAC,CAAGC,QAAQ,CAC9B,CAEA,MAAO,CACLE,MAAM,CAAE,QAAS,CAAAA,MAAMA,CAAA,CAAG,CACxB,MAAO,CAAAN,iBAAiB,CAACH,mBAAmB,CAACK,SAAS,CAAEC,OAAO,CAAC,CAClE,CACF,CAAC,CACH,CAAC,CAKDI,qBAAqB,CAAE,QAAS,CAAAA,qBAAqBA,CAACC,QAAQ,CAAE,CAAC,CAAC,CAKlEC,wBAAwB,CAAE,QAAS,CAAAA,wBAAwBA,CAACC,YAAY,CAAE,CAAC,CAAC,CAK5Eb,mBAAmB,CAAE,QAAS,CAAAA,mBAAmBA,CAACK,SAAS,CAAEC,OAAO,CAAE,CACpE,GAAID,SAAS,GAAK,qBAAqB,CAAE,CACvC,GAAI,CAAAE,QAAQ,CAAGL,QAAQ,CAACI,OAAO,CAAC,CAEhC,GAAI,CAACC,QAAQ,EAAI,CAACjB,yBAAyB,CAAE,CAC3C,OACF,CAEAS,oBAAoB,CAACQ,QAAQ,CAAC,CAChC,CAEA,OACF,CACF,CAAC,CACD,cAAe,CAAAJ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}