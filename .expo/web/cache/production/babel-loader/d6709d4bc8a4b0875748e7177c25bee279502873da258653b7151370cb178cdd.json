{"ast":null,"code":"'use strict';module.exports=function(string){if(typeof string!=='string'){throw new TypeError('Expected a string');}return string.replace(/[|\\\\{}()[\\]^$+*?.]/g,'\\\\$&').replace(/-/g,'\\\\x2d');};","map":{"version":3,"names":["module","exports","string","TypeError","replace"],"sources":["C:/Users/Ahmed Hamza/Desktop/Mal3ab project/Mala3b-Project/node_modules/@react-navigation/core/node_modules/escape-string-regexp/index.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = string => {\r\n\tif (typeof string !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\t// Escape characters with special meaning either inside or outside character sets.\r\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\r\n\treturn string\r\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n\t\t.replace(/-/g, '\\\\x2d');\r\n};\r\n"],"mappings":"AAAA,YAAY,CAEZA,MAAM,CAACC,OAAO,CAAG,SAAAC,MAAM,CAAI,CAC1B,GAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAC/B,KAAM,IAAI,CAAAC,SAAS,CAAC,mBAAmB,CAAC,CACzC,CAIA,MAAO,CAAAD,MAAM,CACXE,OAAO,CAAC,qBAAqB,CAAE,MAAM,CAAC,CACtCA,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,CACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}