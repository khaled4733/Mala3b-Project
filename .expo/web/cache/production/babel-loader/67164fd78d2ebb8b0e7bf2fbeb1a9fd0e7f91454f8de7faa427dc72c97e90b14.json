{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"emit\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";export default function useNavigationCache(_ref){var state=_ref.state,getState=_ref.getState,navigation=_ref.navigation,_setOptions=_ref.setOptions,router=_ref.router,emitter=_ref.emitter;var _React$useContext=React.useContext(NavigationBuilderContext),stackRef=_React$useContext.stackRef;var cache=React.useMemo(function(){return{current:{}};},[getState,navigation,_setOptions,router,emitter]);var actions=_objectSpread(_objectSpread({},router.actionCreators),CommonActions);cache.current=state.routes.reduce(function(acc,route){var previous=cache.current[route.key];if(previous){acc[route.key]=previous;}else{var emit=navigation.emit,rest=_objectWithoutProperties(navigation,_excluded);var _dispatch=function dispatch(thunk){var action=typeof thunk==='function'?thunk(getState()):thunk;if(action!=null){navigation.dispatch(_objectSpread({source:route.key},action));}};var withStack=function withStack(callback){var isStackSet=false;try{if(process.env.NODE_ENV!=='production'&&stackRef&&!stackRef.current){stackRef.current=new Error().stack;isStackSet=true;}callback();}finally{if(isStackSet&&stackRef){stackRef.current=undefined;}}};var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return withStack(function(){return(_dispatch(actions[name].apply(actions,args)));});};return acc;},{});acc[route.key]=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},rest),helpers),emitter.create(route.key)),{},{dispatch:function dispatch(thunk){return withStack(function(){return _dispatch(thunk);});},getParent:function getParent(id){if(id!==undefined&&id===rest.getId()){return acc[route.key];}return rest.getParent(id);},setOptions:function setOptions(options){return _setOptions(function(o){return _objectSpread(_objectSpread({},o),{},_defineProperty({},route.key,_objectSpread(_objectSpread({},o[route.key]),options)));});},isFocused:function isFocused(){var state=getState();if(state.routes[state.index].key!==route.key){return false;}return navigation?navigation.isFocused():true;}});}return acc;},{});return cache.current;}","map":{"version":3,"names":["CommonActions","React","NavigationBuilderContext","useNavigationCache","_ref","state","getState","navigation","setOptions","router","emitter","_React$useContext","useContext","stackRef","cache","useMemo","current","actions","_objectSpread","actionCreators","routes","reduce","acc","route","previous","key","emit","rest","_objectWithoutProperties","_excluded","dispatch","thunk","action","source","withStack","callback","isStackSet","process","env","NODE_ENV","Error","stack","undefined","helpers","Object","keys","name","_len","arguments","length","args","Array","_key","apply","create","getParent","id","getId","options","o","_defineProperty","isFocused","index"],"sources":["C:\\Users\\Ahmed Hamza\\Desktop\\Mal3ab project\\Mala3b-Project\\node_modules\\@react-navigation\\core\\lib\\module\\useNavigationCache.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationHelpers, NavigationProp } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<\n  State extends NavigationState,\n  EventMap extends Record<string, any>\n> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n> = Record<\n  string,\n  NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap\n  >\n>;\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State, EventMap>) {\n  const { stackRef } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<\n    NavigationCache<State, ScreenOptions, EventMap>\n  >((acc, route) => {\n    const previous = cache.current[route.key];\n\n    type Thunk =\n      | NavigationAction\n      | ((state: State) => NavigationAction | null | undefined);\n\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { emit, ...rest } = navigation;\n\n      const dispatch = (thunk: Thunk) => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch({ source: route.key, ...action });\n        }\n      };\n\n      const withStack = (callback: () => void) => {\n        let isStackSet = false;\n\n        try {\n          if (\n            process.env.NODE_ENV !== 'production' &&\n            stackRef &&\n            !stackRef.current\n          ) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n        (acc, name) => {\n          acc[name] = (...args: any) =>\n            withStack(() =>\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\n              dispatch(actions[name](...args))\n            );\n\n          return acc;\n        },\n        {}\n      );\n\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...(emitter.create(route.key) as any),\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\n        getParent: (id?: string) => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: (options: object) =>\n          setOptions((o) => ({\n            ...o,\n            [route.key]: { ...o[route.key], ...options },\n          })),\n        isFocused: () => {\n          const state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        },\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return cache.current;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}