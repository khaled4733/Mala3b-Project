{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { React, useState } from \"react\";\nimport { login } from \"../../db/auth/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  return _jsxs(View, {\n    style: styles.mainview,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \" Login \"\n    }), _jsx(TextInput, {\n      style: styles.textinput,\n      placeholder: \"email\",\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.textinput,\n      onChangeText: setpassword,\n      keyboardType: \"number-pad\",\n      secureTextEntry: true,\n      placeholder: \"password\"\n    }), _jsx(Button, {\n      color: \"#022b3a\",\n      title: \"Login\",\n      onPress: function onPress() {\n        console.log(email, password);\n        login(email, password).then().catch(function (e) {\n          return setError(e.message);\n        });\n      }\n    }), _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Not in our app  yet?\"\n      }), _jsx(Button, {\n        color: \"#022b3a\",\n        title: \"Register\",\n        onPress: function onPress() {\n          navigation.navigate('Register');\n        }\n      })]\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  mainview: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#40798c\",\n    paddingLeft: 60,\n    paddingRight: 60,\n    alignSelf: \"stretch\"\n  },\n  header: {\n    fontSize: 24,\n    color: \"#022b3a\",\n    paddingBottom: 10,\n    marginBottom: 40,\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 1\n  },\n  textinput: {\n    height: 40,\n    color: \"#fff\",\n    borderBottomColor: \"#cae9ff\",\n    borderBottomWidth: 4\n  },\n  button: {\n    alignSelf: \"stretch\",\n    alignItems: \"center\",\n    padding: 20,\n    backgroundColor: \"#000000\",\n    marginTop: 30\n  },\n  errorText: {\n    color: '#f00'\n  }\n});","map":{"version":3,"sources":["D:/khaled/Matriels/Third Year/Second term/CS303/CS303-Project-1/Components/Users/Login.jsx"],"names":["React","useState","login","Login","navigation","email","setEmail","password","setpassword","error","setError","styles","mainview","header","textinput","console","log","then","catch","e","message","errorText","navigate","StyleSheet","create","flex","justifyContent","backgroundColor","paddingLeft","paddingRight","alignSelf","fontSize","color","paddingBottom","marginBottom","borderBottomColor","borderBottomWidth","height","button","alignItems","padding","marginTop"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport { login } from \"../../db/auth/auth\";\r\n\r\nconst Login = ({navigation}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  return (\r\n    <View style={styles.mainview} >\r\n       <Text style={styles.header} > Login </Text>\r\n            <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"email\"\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n     \r\n           \r\n            />\r\n\r\n          <TextInput\r\n          style={styles.textinput}\r\n          onChangeText={setpassword}\r\n          keyboardType=\"number-pad\"\r\n          secureTextEntry={true}\r\n          placeholder=\"password\"\r\n          \r\n        />\r\n          \r\n        <Button\r\n        color={\"#022b3a\"}\r\n          title=\"Login\"\r\n          onPress={() => {\r\n            console.log(email, password);\r\n            login(email,password)\r\n              .then()\r\n              .catch((e) => setError(e.message));\r\n          }}\r\n        />\r\n\r\n      <Text style={styles.errorText}>{error}</Text>\r\n    \r\n      <View >\r\n        <Text>Not in our app  yet?</Text>\r\n        <Button color={\"#022b3a\"} title=\"Register\" onPress={() => {navigation.navigate('Register')}}/>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  mainview:{\r\n    flex:1,\r\n    justifyContent:\"center\",\r\n    backgroundColor: \"#40798c\",\r\n    paddingLeft:60,\r\n    paddingRight:60,\r\n    alignSelf:\"stretch\",\r\n    \r\n  },\r\n  header:{\r\n    fontSize:24,\r\n    color:\"#022b3a\",\r\n    paddingBottom:10,\r\n    marginBottom:40,\r\n    borderBottomColor: \"#cae9ff\" ,\r\n    borderBottomWidth: 1,\r\n\r\n  },\r\n\r\n  textinput:{\r\n    height:40,\r\n    color:\"#fff\",\r\n    borderBottomColor: \"#cae9ff\" ,\r\n    borderBottomWidth: 4,\r\n\r\n  },\r\n\r\n  button:{\r\n    alignSelf:\"stretch\",\r\n    alignItems:\"center\",\r\n    padding:20,\r\n    backgroundColor:\"#000000\",\r\n    marginTop:30,\r\n  },\r\n   \r\n  errorText :{\r\n    color: '#f00'\r\n  },\r\n  \r\n  \r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}