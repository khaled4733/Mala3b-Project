{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport Register from \"./Components/Users/Register\";\nimport Login from \"./Components/Users/Login\";\nimport { auth } from \"./db/Config\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  useEffect(function () {\n    var unsub = onAuthStateChanged(auth, function (user) {\n      return setUser(user);\n    });\n    return function () {\n      unsub();\n    };\n  }, []);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  return user ? _jsx(MessagesList, {}) : _jsx(Login, {});\n}","map":{"version":3,"sources":["C:/Users/mahmo/OneDrive/Desktop/CS-303 Project/App.js"],"names":["onAuthStateChanged","Register","Login","auth","useState","useEffect","App","unsub","user","setUser","undefined"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,SAASC,IAAT;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5BD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAME,KAAK,GAAGP,kBAAkB,CAACG,IAAD,EAAO,UAACK,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,KAAP,CAAhC;AAEA,WAAO,YAAM;AACXD,MAAAA,KAAK;AACN,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,kBAAwBH,QAAQ,CAACM,SAAD,CAAhC;AAAA;AAAA,MAAOF,IAAP;AAAA,MAAaC,OAAb;;AAEA,SACED,IAAI,GAAG,KAAC,YAAD,KAAH,GAAsB,KAAC,KAAD,KAD5B;AAKD","sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\r\n// import Login from \"./Components/Users/Login\";\r\nimport Register from \"./Components/Users/Register\";\r\nimport Login from \"./Components/Users/Login\";\r\nimport { auth } from \"./db/Config\";\r\nimport { useState, useEffect } from \"react\";\r\n// import Cities from \"./Components/Cities/Cities\";\r\n// import GuessMyNumber from \"./Components/GuessMyNumber\";\r\n\r\nexport default function App() {\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => setUser(user)); //if (user) is authinticated set(user) -> doesn't have to register since i am already authinticated, else get register tab\r\n\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  return (\r\n    user ? <MessagesList /> : <Login /> // if user is authinticated get the \"CitiesList\" else get register tab\r\n    \r\n    // <MessagesList />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}